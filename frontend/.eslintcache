[{"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\index.js":"1","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\App.js":"2","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\Footer.js":"3","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\Header.js":"4","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\HomeScreen.js":"5","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\Rating.js":"6","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\ProductScreen.js":"7","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\store.js":"8","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\reducers\\productReducers.js":"9","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\constants\\productConstants.js":"10","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\actions\\productActions.js":"11","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\Loader.js":"12","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\Message.js":"13","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\CartScreen.js":"14","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\reducers\\cartReducers.js":"15","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\constants\\cartConstants.js":"16","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\actions\\cartActions.js":"17","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\reducers\\userReducers.js":"18","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\constants\\userConstants.js":"19","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\LoginScreen.js":"20","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\FormContainer.js":"21","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\actions\\userActions.js":"22","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\RegisterScreen.js":"23","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\ProfileScreen.js":"24","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\ShippingScreen.js":"25","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\CheckoutSteps.js":"26","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\PaymentScreen.js":"27","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\PlaceOrderScreen.js":"28","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\reducers\\orderReducers.js":"29","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\constants\\orderConstants.js":"30","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\actions\\orderActions.js":"31","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\OrderScreen.js":"32","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\UserListScreen.js":"33","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\UserEditScreen.js":"34","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\ProductListScreen.js":"35","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\ProductEditScreen.js":"36","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\OrderListScreen.js":"37","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\SearchBox.js":"38","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\Paginate.js":"39","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\ProductCarousel.js":"40","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\Meta.js":"41","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\SubNav.js":"42","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\ProfileNav.js":"43","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\OrderHistoryScreen.js":"44","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\static\\ReturnStatic.js":"45","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\static\\ShippingStatic.js":"46","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\static\\InternationalStatic.js":"47","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\static\\AboutStatic.js":"48","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\CategoryScreen.js":"49","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\reducers\\categoryReducers.js":"50","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\constants\\categoryConstants.js":"51","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\actions\\categoryActions.js":"52","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\ProductDetailsCard.js":"53","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\Suggested.js":"54","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\ProductSimpleCard.js":"55","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\Breadcrumbs.js":"56","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\BreadCrumbs.js":"57","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\ProductCrumbs.js":"58","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\TopThree.js":"59","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\CategoryCard.js":"60","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\ShippingMethodScreen.js":"61","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\SideCart.js":"62","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\SearchScreen.js":"63","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\UserNavBar.js":"64","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\static\\ContactStatic.js":"65","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\static\\CategoryStatic.js":"66","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\ReportsScreen.js":"67","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\reducers\\reportReducers.js":"68","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\constants\\reportConstants.js":"69","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\actions\\reportActions.js":"70","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\ImageDisplay.js":"71","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\UploadsScreen.js":"72","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\ImageEditer.js":"73","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\actions\\shippingActions.js":"74","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\InventoryListScreen.js":"75","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\HeartList.js":"76","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\UnshippedScreen.js":"77","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\WishListScreen.js":"78","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\WishListCard.js":"79","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\EmployeeHistoryScreen.js":"80","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\contexts\\userContext.js":"81","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\contexts\\UserContext.js":"82","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\MainNav.js":"83","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\EditPassword.js":"84","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\EditAddress.js":"85","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\ProtectedRoute.js":"86","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\StaffRoute.js":"87","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\CategoryListScreen.js":"88","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\CategoryEditScreen.js":"89","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\CategoryNewScreen.js":"90","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\ProductNewScreen.js":"91","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\InventoryEditScreen.js":"92","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\InventoryNewScreen.js":"93","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\BrandEditScreen.js":"94","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\DiscountListScreen.js":"95","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\DiscountNewScreen.js":"96","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\DiscountEditScreen.js":"97","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\BrandListScreen.js":"98","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\BrandNewScreen.js":"99","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\contexts\\CartContext.js":"100","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\DiscountCode.js":"101","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\common.js":"102","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\BrandFilter.js":"103","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\BrandsScreen.js":"104","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\ReportCustomRange.js":"105","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\ReportDoD.js":"106","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\ReportMoM.js":"107","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\ReportYoY.js":"108","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\ReportLowInv.js":"109","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\InstagramFeed.js":"110","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\TestScreen.js":"111"},{"size":926,"mtime":1637512069107,"results":"112","hashOfConfig":"113"},{"size":6543,"mtime":1641164307925,"results":"114","hashOfConfig":"113"},{"size":5255,"mtime":1641312548503,"results":"115","hashOfConfig":"113"},{"size":1902,"mtime":1637725528235,"results":"116","hashOfConfig":"113"},{"size":16900,"mtime":1641169724565,"results":"117","hashOfConfig":"113"},{"size":2466,"mtime":1620417061041,"results":"118","hashOfConfig":"113"},{"size":8119,"mtime":1640899856779,"results":"119","hashOfConfig":"113"},{"size":3407,"mtime":1631902035880,"results":"120","hashOfConfig":"113"},{"size":5642,"mtime":1635719197281,"results":"121","hashOfConfig":"113"},{"size":2152,"mtime":1631901713484,"results":"122","hashOfConfig":"113"},{"size":7671,"mtime":1640630007300,"results":"123","hashOfConfig":"113"},{"size":505,"mtime":1637172196417,"results":"124","hashOfConfig":"113"},{"size":292,"mtime":1620760173724,"results":"125","hashOfConfig":"113"},{"size":10653,"mtime":1637720766811,"results":"126","hashOfConfig":"113"},{"size":3649,"mtime":1632113384698,"results":"127","hashOfConfig":"113"},{"size":1012,"mtime":1632113267094,"results":"128","hashOfConfig":"113"},{"size":4848,"mtime":1637546319157,"results":"129","hashOfConfig":"113"},{"size":4249,"mtime":1635764078626,"results":"130","hashOfConfig":"113"},{"size":1722,"mtime":1635761832998,"results":"131","hashOfConfig":"113"},{"size":3648,"mtime":1636871330581,"results":"132","hashOfConfig":"113"},{"size":420,"mtime":1630427136171,"results":"133","hashOfConfig":"113"},{"size":9157,"mtime":1636054513944,"results":"134","hashOfConfig":"113"},{"size":5986,"mtime":1637256144235,"results":"135","hashOfConfig":"113"},{"size":1188,"mtime":1637027993216,"results":"136","hashOfConfig":"113"},{"size":12766,"mtime":1639160516995,"results":"137","hashOfConfig":"113"},{"size":1520,"mtime":1621534424477,"results":"138","hashOfConfig":"113"},{"size":8874,"mtime":1638899080320,"results":"139","hashOfConfig":"113"},{"size":7057,"mtime":1630196129623,"results":"140","hashOfConfig":"113"},{"size":2449,"mtime":1630279981628,"results":"141","hashOfConfig":"113"},{"size":1208,"mtime":1623944198402,"results":"142","hashOfConfig":"113"},{"size":3755,"mtime":1639425761340,"results":"143","hashOfConfig":"113"},{"size":19303,"mtime":1639163103400,"results":"144","hashOfConfig":"113"},{"size":6687,"mtime":1639522325847,"results":"145","hashOfConfig":"113"},{"size":4268,"mtime":1631126011943,"results":"146","hashOfConfig":"113"},{"size":6282,"mtime":1641172383303,"results":"147","hashOfConfig":"113"},{"size":9718,"mtime":1640632003244,"results":"148","hashOfConfig":"113"},{"size":5305,"mtime":1639425781629,"results":"149","hashOfConfig":"113"},{"size":1111,"mtime":1630340251361,"results":"150","hashOfConfig":"113"},{"size":1198,"mtime":1641171321193,"results":"151","hashOfConfig":"113"},{"size":1432,"mtime":1626451990640,"results":"152","hashOfConfig":"113"},{"size":512,"mtime":1624643266661,"results":"153","hashOfConfig":"113"},{"size":965,"mtime":1639510911818,"results":"154","hashOfConfig":"113"},{"size":1301,"mtime":1626991913916,"results":"155","hashOfConfig":"113"},{"size":3807,"mtime":1637723305506,"results":"156","hashOfConfig":"113"},{"size":3554,"mtime":1630429390886,"results":"157","hashOfConfig":"113"},{"size":21471,"mtime":1630429373189,"results":"158","hashOfConfig":"113"},{"size":19507,"mtime":1630429382367,"results":"159","hashOfConfig":"113"},{"size":7077,"mtime":1637725528119,"results":"160","hashOfConfig":"113"},{"size":3011,"mtime":1639374433479,"results":"161","hashOfConfig":"113"},{"size":1773,"mtime":1627656991277,"results":"162","hashOfConfig":"113"},{"size":642,"mtime":1627656916264,"results":"163","hashOfConfig":"113"},{"size":1988,"mtime":1639367301084,"results":"164","hashOfConfig":"113"},{"size":1733,"mtime":1637723699471,"results":"165","hashOfConfig":"113"},{"size":1144,"mtime":1627644593661,"results":"166","hashOfConfig":"113"},{"size":955,"mtime":1637723657557,"results":"167","hashOfConfig":"113"},{"size":1429,"mtime":1627649332710,"results":"168","hashOfConfig":"169"},{"size":1429,"mtime":1636670965574,"results":"170","hashOfConfig":"113"},{"size":1606,"mtime":1630427676884,"results":"171","hashOfConfig":"113"},{"size":2343,"mtime":1637722305491,"results":"172","hashOfConfig":"113"},{"size":804,"mtime":1639252495899,"results":"173","hashOfConfig":"113"},{"size":4933,"mtime":1638898815031,"results":"174","hashOfConfig":"113"},{"size":7363,"mtime":1640296616607,"results":"175","hashOfConfig":"113"},{"size":3346,"mtime":1641170762592,"results":"176","hashOfConfig":"113"},{"size":1438,"mtime":1636847092154,"results":"177","hashOfConfig":"113"},{"size":4054,"mtime":1637725528119,"results":"178","hashOfConfig":"113"},{"size":4878,"mtime":1639338288386,"results":"179","hashOfConfig":"113"},{"size":1091,"mtime":1640116635288,"results":"180","hashOfConfig":"113"},{"size":1098,"mtime":1635783791331,"results":"181","hashOfConfig":"113"},{"size":486,"mtime":1631381392448,"results":"182","hashOfConfig":"113"},{"size":1647,"mtime":1631409099814,"results":"183","hashOfConfig":"113"},{"size":2057,"mtime":1639425217572,"results":"184","hashOfConfig":"113"},{"size":2912,"mtime":1639522290100,"results":"185","hashOfConfig":"113"},{"size":8495,"mtime":1640900043076,"results":"186","hashOfConfig":"113"},{"size":1046,"mtime":1632521377956,"results":"187","hashOfConfig":"113"},{"size":6920,"mtime":1641172372820,"results":"188","hashOfConfig":"113"},{"size":2395,"mtime":1639413654701,"results":"189","hashOfConfig":"113"},{"size":2170,"mtime":1639425856563,"results":"190","hashOfConfig":"113"},{"size":1084,"mtime":1639367121062,"results":"191","hashOfConfig":"113"},{"size":2238,"mtime":1639367048912,"results":"192","hashOfConfig":"113"},{"size":4570,"mtime":1639426023254,"results":"193","hashOfConfig":"113"},{"size":822,"mtime":1636673406034,"results":"194","hashOfConfig":"113"},{"size":1576,"mtime":1637554083350,"results":"195","hashOfConfig":"113"},{"size":5128,"mtime":1639427515599,"results":"196","hashOfConfig":"113"},{"size":3462,"mtime":1636774019753,"results":"197","hashOfConfig":"113"},{"size":6985,"mtime":1637081887580,"results":"198","hashOfConfig":"113"},{"size":570,"mtime":1637028078540,"results":"199","hashOfConfig":"113"},{"size":655,"mtime":1636868007230,"results":"200","hashOfConfig":"113"},{"size":6327,"mtime":1637429476177,"results":"201","hashOfConfig":"113"},{"size":7775,"mtime":1637433326970,"results":"202","hashOfConfig":"113"},{"size":7450,"mtime":1637432846394,"results":"203","hashOfConfig":"113"},{"size":8283,"mtime":1640899357031,"results":"204","hashOfConfig":"113"},{"size":9066,"mtime":1637599975521,"results":"205","hashOfConfig":"113"},{"size":7398,"mtime":1640749450809,"results":"206","hashOfConfig":"113"},{"size":5226,"mtime":1637433361378,"results":"207","hashOfConfig":"113"},{"size":6612,"mtime":1639521038302,"results":"208","hashOfConfig":"113"},{"size":9598,"mtime":1640210596330,"results":"209","hashOfConfig":"113"},{"size":9737,"mtime":1640292437949,"results":"210","hashOfConfig":"113"},{"size":5682,"mtime":1641168840917,"results":"211","hashOfConfig":"113"},{"size":5280,"mtime":1637432794567,"results":"212","hashOfConfig":"113"},{"size":2945,"mtime":1637602266332,"results":"213","hashOfConfig":"113"},{"size":3134,"mtime":1637689930708,"results":"214","hashOfConfig":"113"},{"size":714,"mtime":1639620593044,"results":"215","hashOfConfig":"113"},{"size":1771,"mtime":1639247962241,"results":"216","hashOfConfig":"113"},{"size":3235,"mtime":1641168730956,"results":"217","hashOfConfig":"113"},{"size":6614,"mtime":1640898048520,"results":"218","hashOfConfig":"113"},{"size":3474,"mtime":1640115507632,"results":"219","hashOfConfig":"113"},{"size":3223,"mtime":1640038464908,"results":"220","hashOfConfig":"113"},{"size":3258,"mtime":1640037506075,"results":"221","hashOfConfig":"113"},{"size":2812,"mtime":1640116954974,"results":"222","hashOfConfig":"113"},{"size":221,"mtime":1641164198236,"results":"223","hashOfConfig":"113"},{"size":417,"mtime":1641164677388,"results":"224","hashOfConfig":"113"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},"1mym0e4",{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"227"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":5,"source":null},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":4,"source":"237","usedDeprecatedRules":"227"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"227"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"227"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"227"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"227"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"227"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"227"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"227"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"227"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"227"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"227"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"227"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"227"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"227"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"227"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"227"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"227"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"227"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"227"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"227"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"327"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"332","usedDeprecatedRules":"227"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"336"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"227"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"227"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"227"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"227"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"227"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"c3pe4q",{"filePath":"368","messages":"369","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"227"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"227"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"227"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383","usedDeprecatedRules":"227"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"227"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"227"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"227"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"405","usedDeprecatedRules":"227"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408","usedDeprecatedRules":"227"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"227"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"418","usedDeprecatedRules":"227"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421","usedDeprecatedRules":"227"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"424","usedDeprecatedRules":"227"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"427","usedDeprecatedRules":"227"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"227"},{"filePath":"431","messages":"432","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"437","usedDeprecatedRules":"227"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"440","usedDeprecatedRules":"227"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"449","usedDeprecatedRules":"227"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"452","usedDeprecatedRules":"227"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"455","usedDeprecatedRules":"227"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"458","usedDeprecatedRules":"227"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"461","usedDeprecatedRules":"227"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"464","usedDeprecatedRules":"227"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"467","usedDeprecatedRules":"227"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"470","usedDeprecatedRules":"227"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"473","usedDeprecatedRules":"227"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"476","usedDeprecatedRules":"227"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"481","usedDeprecatedRules":"227"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"484","usedDeprecatedRules":"227"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"487","usedDeprecatedRules":"227"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"490","usedDeprecatedRules":"227"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"493","usedDeprecatedRules":"227"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"496","usedDeprecatedRules":"227"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"499","usedDeprecatedRules":"227"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"502","usedDeprecatedRules":"227"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"505","usedDeprecatedRules":"227"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"508","usedDeprecatedRules":"227"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"511","usedDeprecatedRules":"227"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\index.js",[],["516","517"],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\App.js",["518"],"import { Route, Switch } from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\n\nimport ReturnStatic from './screens/static/ReturnStatic'\nimport ShippingStatic from './screens/static/ShippingStatic'\nimport InternationalStatic from './screens/static/InternationalStatic'\nimport AboutStatic from './screens/static/AboutStatic'\nimport ContactStatic from './screens/static/ContactStatic'\n\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport InventoryListScreen from './screens/InventoryListScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\nimport OrderHistoryScreen from './screens/OrderHistoryScreen'\nimport CategoryScreen from './screens/CategoryScreen'\nimport SearchScreen from './screens/SearchScreen'\nimport ReportsScreen from './screens/ReportsScreen'\nimport UploadsScreen from './screens/UploadsScreen'\nimport UnshippedScreen from './screens/UnshippedScreen'\nimport WishListScreen from './screens/WishListScreen'\nimport CategoryListScreen from './screens/CategoryListScreen'\nimport CategoryEditScreen from './screens/CategoryEditScreen'\nimport CategoryNewScreen from './screens/CategoryNewScreen'\nimport BrandListScreen from './screens/BrandListScreen'\nimport BrandEditScreen from './screens/BrandEditScreen'\nimport BrandNewScreen from './screens/BrandNewScreen'\nimport DiscountListScreen from './screens/DiscountListScreen'\nimport DiscountEditScreen from './screens/DiscountEditScreen'\nimport DiscountNewScreen from './screens/DiscountNewScreen'\nimport ProductNewScreen from './screens/ProductNewScreen'\nimport InventoryEditScreen from './screens/InventoryEditScreen'\nimport InventoryNewScreen from './screens/InventoryNewScreen'\n\nimport ShippingMethodScreen from './screens/ShippingMethodScreen'\nimport CategoryStatic from './screens/static/CategoryStatic'\nimport EmployeeHistoryScreen from './screens/EmployeeHistoryScreen'\nimport ProtectedRoute from './components/ProtectedRoute'\nimport StaffRoute from './components/StaffRoute'\nimport BrandsScreen from './screens/BrandsScreen'\nimport TestScreen from './screens/TestScreen'\n\n\nconst App = () => {\n  return (\n    <>\n      <Header />\n      <Switch>\n        <Route exact path='/' component={HomeScreen} />\n        <Route path='/international' component={InternationalStatic} />\n        <Route path='/returnpolicy' component={ReturnStatic} />\n        <Route path='/shippingpolicy' component={ShippingStatic} />\n        <Route path='/about' component={AboutStatic} />\n        <Route path='/contact' component={ContactStatic} />\n        <Route exact path='/categories' component={CategoryStatic} />\n\n        <Route path='/brands' component={BrandsScreen} />\n        <Route path='/category/:id' component={CategoryScreen} />\n        <Route path='/order/:id' component={OrderScreen} />\n        <Route path='/payment' component={PaymentScreen} />\n        <Route path='/shipping' component={ShippingScreen} />\n        <Route path='/shippingmethod' component={ShippingMethodScreen} />\n        <Route path='/login' component={LoginScreen} />\n        <Route path='/register' component={RegisterScreen} />\n        <Route path='/product/:id' component={ProductScreen} />\n        <Route exact path='/cart' component={CartScreen} />\n        <Route path='/cart/:id' component={CartScreen} />\n        <Route exact path='/products' component={SearchScreen} />\n        <Route exact path='/search/' component={SearchScreen} />\n        <Route exact path='/search/:keyword' component={SearchScreen} />\n        <Route exact path='/search/:keyword/page/:pageNumber' component={SearchScreen} />\n        <Route exact path='/search/:keyword/page/:pageNumber/brands/:brands' component={SearchScreen} />\n\n        <ProtectedRoute path='/orderhistory' component={OrderHistoryScreen} />\n        <ProtectedRoute path='/wishlist' component={WishListScreen} />\n        <ProtectedRoute path='/profile' component={ProfileScreen} />\n\n        <StaffRoute path='/admin/employeehistory' component={EmployeeHistoryScreen} />\n        <StaffRoute path='/admin/unshipped' component={UnshippedScreen} />\n        <StaffRoute path='/admin/uploads' component={UploadsScreen} />\n        <StaffRoute path='/admin/reports' component={ReportsScreen} />\n        <StaffRoute path='/admin/orderlist' component={OrderListScreen} />\n\n        <StaffRoute path='/admin/userlist' component={UserListScreen} />\n        <StaffRoute path='/admin/user/:id/edit' component={UserEditScreen} />\n\n        <StaffRoute path='/admin/categorylist' component={CategoryListScreen} />\n        <StaffRoute path='/admin/categorynew' component={CategoryNewScreen} />\n        <StaffRoute path='/admin/category/:id/edit' component={CategoryEditScreen} />\n\n        <StaffRoute path='/admin/productlist' component={ProductListScreen} />\n        <StaffRoute path='/admin/productnew' component={ProductNewScreen} />\n        <StaffRoute path='/admin/product/:id/edit' component={ProductEditScreen} />\n\n        <StaffRoute path='/admin/inventorylist' component={InventoryListScreen} />\n        <StaffRoute path='/admin/inventorynew' component={InventoryNewScreen} />\n        <StaffRoute path='/admin/inventory/:id/edit' component={InventoryEditScreen} />\n\n        <StaffRoute path='/admin/brandlist' component={BrandListScreen} />\n        <StaffRoute path='/admin/brandnew' component={BrandNewScreen} />\n        <StaffRoute path='/admin/brand/:id/edit' component={BrandEditScreen} />\n\n        <StaffRoute path='/admin/discountlist' component={DiscountListScreen} />\n        <StaffRoute path='/admin/discountnew' component={DiscountNewScreen} />\n        <StaffRoute path='/admin/discount/:id/edit' component={DiscountEditScreen} />\n\n        <StaffRoute path='/admin/test' component={TestScreen} />\n\n        <Route path='*' component={HomeScreen} />\n      </Switch>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\Footer.js",["519","520","521","522","523"],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\Header.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\HomeScreen.js",["524","525","526","527","528"],"import React, { useEffect } from 'react'\r\nimport { Button, Col, Container, Image, Row } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport Meta from '../components/Meta'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport \"../styles/HomeScreen.css\"\r\nimport TopThree from '../components/TopThree'\r\nimport InstagramFeed from '../components/InstagramFeed'\r\n\r\n\r\nconst HomeScreen = ({ match }) => {\r\n\r\n    // const { loading, error, products, page, pages } = useSelector(state => state.productList)\r\n    const { top } = useSelector(state => state.categoryTop)\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        // window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n        // dispatch(getTopCategories())\r\n\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <>\r\n            <Meta />\r\n            <div className=\"homePage\">\r\n                <Row className=\"mx-0\" style={{\r\n                    backgroundImage: \"url('/static/hero_image_only.png')\",\r\n                    // backgroundSize: \"100% 100%\",\r\n                    backgroundSize: \"cover\",\r\n                    backgroundPosition: \"center\",\r\n                    height: \"600px\",\r\n                    marginTop: \"-2px\"\r\n                }}>\r\n                    <Container className=\"\"\r\n                        style={{\r\n                            backgroundImage: \"url('/static/Hero_Headline.png')\",\r\n                            backgroundRepeat: \"no-repeat\",\r\n                            backgroundSize: \"contain\",\r\n                            height: \"320px\",\r\n                            fontSize: \"13px\",\r\n                            paddingTop: \"210px\",\r\n                            paddingLeft: \"50px\",\r\n                            marginTop: \"150px\",\r\n                        }}>\r\n                        <p className=\"text-light\"\r\n                            style={{ width: \"350px\" }}>\r\n                            Here at Coast, we are one big family of artists who love to create and serve our communit as best we can</p>\r\n                    </Container>\r\n                </Row>\r\n                <div style={{ position: \"absolute\", width: \"100vw\" }}>\r\n                    <Image src=\"/static/texture1_only.png\"\r\n                        style={{ height: \"80px\", position: \"absolute\", top: \"-35px\", left: \"-50px\", zIndex: 5 }}></Image>\r\n                </div>\r\n\r\n                <Row className=\"featured mx-0\" style={{ backgroundImage: \"url('/static/BG_Featured_section.png')\" }} >\r\n                    <Container>\r\n                        <Row className=\"pb-5\">\r\n\r\n                            <Col lg={6}>\r\n                                <Image src=\"/static/airbrush_withframe.png\"\r\n                                    style={{ width: \"100%\" }}\r\n                                    className=\"px-5\" />\r\n                            </Col>\r\n                            <Col lg={6} >\r\n                                <h2 className=\"mt-5 text-danger\">Featured Product</h2>\r\n                                <h3 className=\"mt-3\" style={{ letterSpacing: \"0px\" }}>IWATA Airbrush</h3>\r\n                                <p className=\"pr-5\">Grab your Iwata HP-TH2 Gravity Feed Dual Action Trigger Airbrush while the vault is still open</p>\r\n                                <Link to={`/product/H5100`}  >\r\n                                    <Button>Shop Now</Button>\r\n                                </Link>\r\n                            </Col>\r\n                        </Row>\r\n                        <h1 className=\"text-center text-danger mb-5\">Top Products</h1>\r\n                        <TopThree className=\"my-5\" />\r\n                    </Container>\r\n                </Row >\r\n                <Row className=\"topCat\">\r\n                    <Container>\r\n                        {\r\n                            <Row className=\"my-5\">\r\n                                {[\r\n                                    { name: \"Makeup/Beauty\", url: \"607\", image: \"/static/Makeup.png\" },\r\n                                    { name: \"Automobile\", url: \"20\", image: \"/static/Automobile.png\" },\r\n                                    { name: \"Fine Arts\", url: \"22\", image: \"/static/FineArts.png\" },\r\n                                    { name: \"T-Shirts\", url: \"383\", image: \"/static/Tshirts.png\" }\r\n                                ].map(card => (\r\n                                    <Col key={card.name} xs='6' lg='3' className='p-4'>\r\n                                        <Link to={`/category/${card.url}`} className=\"linkBox\" >\r\n                                            <Image\r\n                                                className=\"mx-auto px-2\"\r\n                                                style={{ width: \"100%\", height: \"200px\", objectFit: \"contain\" }}\r\n                                                src={card.image}\r\n                                            />\r\n                                            <h5 className=\"redTextHover text-center my-4\">{card.name}</h5>\r\n                                        </Link>\r\n                                    </Col>\r\n                                ))}\r\n                            </Row>\r\n                        }\r\n                        <h1 className=\"text-center text-danger mb-3\">Top Categories</h1>\r\n                        {\r\n                            <Row className=\"my-5\">\r\n                                {[\r\n                                    { name: \"Leafing/Pinstripe\", url: \"21\", image: \"/static/Pinstripe.png\" },\r\n                                    { name: \"Hobby\", url: \"803\", image: \"/static/Hobby.png\" },\r\n                                    { name: \"Mural\", url: \"589\", image: \"/static/Mural.png\" },\r\n                                    { name: \"Model\", url: \"404\", image: \"/static/Model.png\" }\r\n                                ].map(card => (\r\n                                    <Col key={card.name} xs='6' lg='3' className='p-4'>\r\n                                        <Link to={`/category/${card.url}`} className=\"linkBox\" >\r\n                                            <Image\r\n                                                className=\"mx-auto px-2\"\r\n                                                style={{ width: \"100%\", height: \"200px\", objectFit: \"contain\" }}\r\n                                                src={card.image}\r\n                                            />\r\n                                            <h5 className=\"redTextHover text-center my-4\">{card.name}</h5>\r\n                                        </Link>\r\n                                    </Col>\r\n                                ))}\r\n                            </Row>\r\n                        }\r\n                    </Container>\r\n                </Row>\r\n                <Row className=\"topBrands mx-0\" >\r\n                    <Container>\r\n                        {\r\n                            <Row className=\"my-5\">\r\n                                {[\r\n                                    { image: \"/static/kolor.png\", url: 7 },\r\n                                    { image: \"/static/Iwata.png\", url: 2 },\r\n                                    { image: \"/static/3m.png\", url: 38 },\r\n                                    { image: \"/static/CreateXColors.png\", url: 0 }\r\n                                ].map(card => (\r\n                                    <Col key={card.image} xs='6' lg='3' className='p-4 text-center'>\r\n                                        <Link to={`/search/ALL/page/1/brands/${card.url}`} className=\"linkBox\" >\r\n                                            <Image\r\n                                                className=\"mx-auto yellowBorderHover\"\r\n                                                style={{ width: \"200px\", height: \"200px\", objectFit: \"contain\", padding: \"0px\" }}\r\n                                                src={card.image}\r\n                                            />\r\n                                        </Link>\r\n                                    </Col>\r\n                                ))}\r\n                            </Row>\r\n                        }\r\n                        <h1 className=\"text-center mb-3\">Top Brands</h1>\r\n                        {\r\n                            <Row className=\"my-5\">\r\n                                {[\r\n                                    { image: \"/static/Lumilor.png\", url: 33 },\r\n                                    { image: \"/static/Paasche.png\", url: 13 },\r\n                                    { image: \"/static/1shot.png\", url: 5 },\r\n                                    { image: \"/static/MissionModels.png\", url: 19 }\r\n                                ].map(card => (\r\n                                    <Col key={card.image} xs='6' lg='3' className='p-4 text-center'>\r\n                                        <Link to={`/search/ALL/page/1/brands/${card.url}`} className=\"linkBox\" >\r\n                                            <Image\r\n                                                className=\"mx-auto yellowBorderHover\"\r\n                                                style={{ width: \"200px\", height: \"200px\", objectFit: \"contain\", padding: \"0px\" }}\r\n                                                src={card.image}\r\n                                            />\r\n                                        </Link>\r\n                                    </Col>\r\n                                ))}\r\n                            </Row>\r\n                        }\r\n                    </Container>\r\n                </Row>\r\n                <Container className=\"mt-5 pt-4 pb-3\">\r\n                    <h6>Not Sure Where To Start?</h6>\r\n                    <h3 className=\"text-danger mb-4\">Watch Our Training Videos</h3>\r\n                    <Row className=\"my-5\">\r\n                        <Col lg={4}>\r\n                            <a href=\"http://www.coastairbrushtv.com/HOKurethanes\" target='_blank' className=\"linkBox\" >\r\n                                <Image src=\"/static/Video_mixing.png\"\r\n                                    style={{ width: \"100%\" }} >\r\n                                </Image>\r\n                                <h5 className=\"mt-3 mb-0 text-center text-danger\">Mixing the House of Kolor Urethanes </h5>\r\n                                <p className=\"text-center\">With Dave Monning</p>\r\n                                <div className=\"overlayYellow\">\r\n                                    <Button className=\"middle\">Watch Video</Button>\r\n                                </div>\r\n                            </a>\r\n\r\n                        </Col>\r\n                        <Col lg={4}>\r\n                            <a href=\"http://www.coastairbrushtv.com/Airbrush-Overview_p_20.html\" target='_blank' className=\"linkBox\" >\r\n                                <Image src=\"/static/Vide_airbrush.png\"\r\n                                    style={{ width: \"100%\" }} />\r\n                                <h5 className=\"mt-3 mb-0 text-center text-danger\">Airbrush Overview </h5>\r\n                                <p className=\"text-center\">with Dave Monning</p>\r\n                                <div className=\"overlayYellow\">\r\n                                    <Button className=\"middle\">Watch Video</Button>\r\n                                </div>\r\n                            </a>\r\n                        </Col>\r\n                        <Col lg={4}>\r\n                            <a href=\"http://www.coastairbrushtv.com/The-Flaming-Skull--Creating-Skulls-Realistic-Blue-Fire-w-Craig-Fraser_p_56.html\" target='_blank' className=\"linkBox\" >\r\n                                <Image src=\"/static/Video_FlamingSkull.png\"\r\n                                    style={{ width: \"100%\" }} />\r\n                                <h5 className=\"mt-3 mb-0 text-center text-danger\">The \"Flaming\" Skull</h5>\r\n                                <p className=\"text-center\">Creating Skulls & Realistic Blue Fire w/ Craig Fraser</p>\r\n                                <div className=\"overlayYellow\">\r\n                                    <Button className=\"middle\">Watch Video</Button>\r\n                                </div>\r\n                            </a>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n                <Row className=\"seeDave mx-0\" style={{ backgroundImage: \"url('/static/David_Section_BG.png')\", height: \"600px\" }}>\r\n                    <Col lg={8} className=\"d-none d-lg-block\"\r\n                        style={{\r\n                            backgroundImage: \"url('/static/David.png')\",\r\n                            backgroundSize: \"cover\"\r\n                        }}>\r\n                    </Col>\r\n                    <Col lg={4} className=\"px-4 my-5\">\r\n                        <h3 className=\"\" style={{ letterSpacing: \"0px\" }}>Look Familiar?</h3>\r\n                        <h2 className=\"mt-5 mt-lg-0 mb-4 text-danger\">See David On</h2>\r\n                        <Image src=\"/static/Asset32.png\" style={{ width: \"30%\" }} />\r\n                        <Image src=\"/static/Asset33.png\" style={{ width: \"30%\" }} className=\"mx-2\" />\r\n                        <Image src=\"/static/Asset34.png\" style={{ width: \"30%\" }} />\r\n                        <p className=\"text-dark my-5\">Grab your Iwata HP-TH2 Gravity Feed Dual Action Trigger Airbrush while the vault is still open</p>\r\n                        <div className=\"ml-auto\">\r\n                            <Link to={`/product/H5100`}  >\r\n                                <Button>Shop Now</Button>\r\n                            </Link>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"favorites mb-5 pt-5 mx-0\"\r\n                    style={{ position: \"relative\" }}>\r\n                    <Image src=\"/static/texture1_only.png\"\r\n                        style={{ height: \"80px\", position: \"absolute\", top: \"-20px\", left: \"-50px\", zIndex: 5 }}>\r\n\r\n                    </Image>\r\n                    <Image src=\"/static/David_Favorite.png\"\r\n                        style={{ height: \"120px\", position: \"absolute\", top: \"10px\", left: \"50px\", zIndex: 5 }}>\r\n\r\n                    </Image>\r\n                    <Container className=\"mt-5 pt-5\">\r\n                        <TopThree />\r\n                    </Container>\r\n                </Row>\r\n                <Row className=\"mx-0\" style={{ \"backgroundColor\": \"#1a1a1a\" }}>\r\n                    <Container className=\"mb-5 mt-3\">\r\n                        <h3 className=\"text-white my-3\">Instagram</h3>\r\n                        <InstagramFeed />\r\n                    </Container>\r\n                </Row>\r\n                <Row className=\"location mx-0\">\r\n                    <Container >\r\n                        <Row>\r\n                            <Col lg={6} className=\"my-5 mt-lg-0\">\r\n                                <a href=\"https://goo.gl/maps/AS8oMq7AFMnaX67R6\" target='_blank'>\r\n                                    <Image src=\"/static/Map.png\"\r\n                                        style={{ width: \"100%\", paddingRight: \"60px\", cursor: \"pointer\" }}\r\n                                    />\r\n                                </a>\r\n                            </Col>\r\n                            <Col lg={4} className=\"my-5 mt-lg-0 text-center text-lg-left pl-0\">\r\n                                <h3 className=\"text-danger mb-4\">Contact Us</h3>\r\n                                <i className=\"fas fa-map-marker-alt\"></i>\r\n                                <span className=\"ml-3 mb-0 font-weight-bold\">312 N Anaheim Blvd.</span>\r\n                                <p className=\"font-weight-bold\" style={{ marginLeft: \"28px\" }}>Anahiem CA 92805</p>\r\n                                <i className=\"fas fa-phone-alt\"></i>\r\n                                <span className=\"ml-3 font-weight-bold\">714-635-5557</span>\r\n                                <br />\r\n                                <br />\r\n                                <i className=\"fas fa-envelope\"></i>\r\n                                <a href=\"kustom@coastairbrush.com\" className=\"ml-3 font-weight-bold\"\r\n                                    style={{ color: \"#55595c\" }}\r\n                                >kustom@coastairbrush.com</a>\r\n                            </Col>\r\n                            <Col lg={2} className=\"my-5 mt-lg-0 text-center text-lg-left px-0\">\r\n                                <h3 className=\"text-danger mb-3\">Hours</h3>\r\n                                <p className=\"font-weight-bold mb-0\">Mon, Fri, Sat:</p>\r\n                                <p>9:30am - 5:00pm</p>\r\n                                <p className=\"font-weight-bold mb-0\">Tues, Wed, Thur:</p>\r\n                                <p>9:30am - 6:00pm</p>\r\n                                <p>CLOSED SUNDAYS</p>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Row>\r\n            </div >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\Rating.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\ProductScreen.js",["529","530","531","532","533","534","535","536"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { Row, Col, Button, Form, Container } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Suggested from '../components/Suggested'\r\nimport ProductCrumbs from '../components/ProductCrumbs'\r\nimport ImageDisplay from '../components/ImageDisplay'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { listProductDetails, resetProductDetails, } from '../actions/productActions'\r\n\r\nimport \"../styles/ProductPage.css\"\r\n// import { addToCart } from '../actions/cartActions'\r\nimport { HeartList } from '../components/HeartList'\r\nimport { CartContext, CartContextUpdate } from '../contexts/CartContext'\r\n\r\nconst ProductScreen = ({ match }) => {\r\n\r\n    const pID = match.params.id\r\n    const cartUpdate = useContext(CartContextUpdate)\r\n\r\n    const { loading, error, product } = useSelector(state => state.productDetails)\r\n    const { category } = useSelector(state => state.categoryDetails)\r\n    const { userInfo } = useSelector(state => state.userLogin)\r\n\r\n\r\n    const [qty, setQty] = useState(1)\r\n    const [stock, setStock] = useState(0)\r\n    const [option, setOption] = useState(0)\r\n    const [price, setPrice] = useState(0)\r\n    const [listPrice, setListPrice] = useState(0)\r\n    const [cloverID, setCloverID] = useState(\"\")\r\n    const [name, setName] = useState(\"\")\r\n    const [image, setImage] = useState(\"\")\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n        dispatch(listProductDetails(match.params.id))\r\n        return () => {\r\n            dispatch(resetProductDetails());\r\n        };\r\n    }, [dispatch, match])\r\n\r\n\r\n    useEffect(() => {\r\n        setImage(product.images && product.images[0] && product.images[0].imageSrc)\r\n        if (product.options && product.options.length == 1) {\r\n            setName(product.pName)\r\n            setCloverID(product.options[0].cloverID)\r\n            setPrice(product.options[0].iPrice)\r\n            setListPrice(product.options[0].iListPrice)\r\n            setStock(product.options[0].iStock)\r\n            console.log(product.options[0])\r\n        }\r\n        else if (product.options && product.options.length > 1 && option != 0) {\r\n            setName(`${product.pName} (${product.options[option - 1].iSelectionName})`)\r\n            setCloverID(product.options[option - 1].cloverID)\r\n            setPrice(product.options[option - 1].iPrice)\r\n            setListPrice(product.options[option - 1].iListPrice)\r\n            setStock(product.options[option - 1].iStock)\r\n        } else {\r\n\r\n        }\r\n    }, [option, product])\r\n\r\n    const addToCartHandler = () => {\r\n        window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n        // dispatch(addToCart(product, name, qty, stock, price, cloverID))\r\n        cartUpdate({\r\n            type: \"ADD_ITEM\",\r\n            cartItem: { pID, cloverID, name, image, price, qty, stock, category: product.pSection }\r\n        })\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <Container className=\"my-5 py-3\">\r\n            {loading ? <Loader />\r\n                : error ? (<Message variant='danger'>{error}</Message>)\r\n                    : (<>\r\n                        {/* <Meta title={product.pName} /> */}\r\n                        {product && <ProductCrumbs product={product} />}\r\n                        <Row className=\"mb-5 productPage\">\r\n                            <Col lg={5} className=\"pr-5 mt-3\">\r\n                                {product.images && <ImageDisplay product={product} />}\r\n                            </Col>\r\n                            <Col lg={7} >\r\n                                <h3 className=\"text-danger\">{product.topSection}</h3>\r\n                                <h5 className=\"mt-3 mb-1\">{\"Product ID: \" + product.pID}</h5>\r\n                                <h5 className=\"mt-1 mb-3\">{product.pName}</h5>\r\n                                <h3 className=\"text-danger\"> {Number(price / 100).toLocaleString(\"en-US\", { style: \"currency\", currency: \"USD\" })}\r\n                                    <span className=\"ml-4 text-muted\" style={{ textDecoration: \"line-through\" }}>\r\n                                        {listPrice ? Number(listPrice / 100).toLocaleString(\"en-US\", { style: \"currency\", currency: \"USD\" }) : \"\"}\r\n                                    </span>\r\n                                </h3>\r\n                                <span className=\"pr-4\"> {Number(price * 0.0084).toLocaleString(\"en-US\", { style: \"currency\", currency: \"EUR\" })}</span>\r\n                                <span className=\"pr-4\"> {Number(price * 0.0136).toLocaleString(\"en-US\", { style: \"currency\", currency: \"USD\" })} AUD</span>\r\n                                <span className=\"pr-4\"> {Number(price * .0124).toLocaleString(\"en-US\", { style: \"currency\", currency: \"USD\" })} CAD</span>\r\n                                <Row className=\"my-4\">\r\n                                    {product.optionGroup &&\r\n                                        <Col xs=\"auto\">\r\n                                            <Form.Control as=\"select\" value={option}\r\n                                                onChange={(e) => setOption(e.target.value)}>\r\n                                                <option key={0} value={0}>{product.optionGroup}</option>\r\n                                                {product.options.map((option, index) => (\r\n                                                    <option key={index + 1} value={index + 1}>{option.iSelectionName}</option>\r\n                                                ))}\r\n                                            </Form.Control>\r\n                                        </Col>\r\n                                    }\r\n                                </Row>\r\n                                <Row className=\"align-items-center mb-4\">\r\n                                    <Col xs=\"auto\">\r\n                                        <Form.Control className='form-select' as='select' value={qty} disabled={stock < 1}\r\n                                            onChange={(e) => setQty(e.target.value)}>\r\n                                            {stock < 1 && !product.optionGroup ? <option>Out of Stock</option>\r\n                                                : [...Array(stock > 0 ? stock : 0).keys()].map(x => (\r\n                                                    <option key={x + 1} value={x + 1}>{x + 1}</option>\r\n                                                ))}\r\n                                        </Form.Control>\r\n                                    </Col >\r\n                                    <Col xs=\"auto\">\r\n                                        <Button\r\n                                            block\r\n                                            onClick={addToCartHandler}\r\n                                            disabled={product.optionGroup && option == 0 || stock < 1}\r\n                                        // disabled={product.countInStock === 0}\r\n                                        >Add to Cart\r\n                                        </Button>\r\n                                    </Col>\r\n                                    <Col xs=\"auto\" className=\"px-2\">\r\n                                        <HeartList pID={product.pID} size=\"2x\" />\r\n                                    </Col>\r\n                                </Row>\r\n                                <h5 className=\"pt-3\">Description</h5>\r\n                                {product.pLongDescription\r\n                                    ? <div dangerouslySetInnerHTML={{ __html: product.pLongDescription }} />\r\n                                    : <div dangerouslySetInnerHTML={{ __html: product.pDescription }} />\r\n                                }\r\n                            </Col>\r\n                        </Row>\r\n                        <h4 className=\"text-danger my-4 pt-5\">You May Also Like</h4>\r\n                        <Suggested />\r\n                    </>\r\n                    )\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\store.js",["537","538"],"import { createStore, combineReducers, applyMiddleware, } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productUpdateImagesReducer, productReviewCreateReducer, productTopRatedReducer, productSuggestedReducer } from './reducers/productReducers'\r\nimport { cartReducer, cloverReducer } from './reducers/cartReducers'\r\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers'\r\nimport { orderCreateReducer, orderDeliverReducer, orderDetailsReducer, orderListMyReducer, orderListReducer, orderPayReducer } from './reducers/orderReducers'\r\nimport { categoryProductsReducer, categoryDetailsReducer, categoryTopReducer } from './reducers/categoryReducers'\r\nimport { reportAverageReducer, reportLowInvReducer } from './reducers/reportReducers'\r\n\r\nconst reducer = combineReducers({\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    clover: cloverReducer,\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n    productSuggested: productSuggestedReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productUpdateImages: productUpdateImagesReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    // orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    // orderPay: orderPayReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n    reportLowInv: reportLowInvReducer,\r\n    reportAverage: reportAverageReducer,\r\n    categoryDetails: categoryDetailsReducer,\r\n    categoryProducts: categoryProductsReducer,\r\n    categoryTop: categoryTopReducer,\r\n})\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n    ? JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n    ? JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst shippingInfoFromStorage = localStorage.getItem('shippingInfo')\r\n    ? JSON.parse(localStorage.getItem('shippingInfo')) : {}\r\n\r\nconst shippingMethodFromStorage = localStorage.getItem('shippingMethod')\r\n    ? JSON.parse(localStorage.getItem('shippingMethod')) : {}\r\n\r\n// const cloverOrderFromStorage = localStorage.getItem('cloverOrder')\r\n//     ? JSON.parse(localStorage.getItem('cloverOrder')) : null\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: userInfoFromStorage ? userInfoFromStorage.cart : cartItemsFromStorage,\r\n        shippingInfo: shippingInfoFromStorage,\r\n        shippingMethod: shippingMethodFromStorage,\r\n        // cloverOrder: cloverOrderFromStorage,\r\n    },\r\n    userLogin: { userInfo: userInfoFromStorage }\r\n}\r\n\r\n\r\nconst middleware = [thunk]\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\reducers\\productReducers.js",["539"],"import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_LIST_RESET,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DETAILS_RESET,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_IMAGES_RESET,\r\n    PRODUCT_UPDATE_IMAGES_REQUEST,\r\n    PRODUCT_UPDATE_IMAGES_SUCCESS,\r\n    PRODUCT_UPDATE_IMAGES_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n    PRODUCT_SUGGESTED_REQUEST,\r\n    PRODUCT_SUGGESTED_SUCCESS,\r\n    PRODUCT_SUGGESTED_FAIL\r\n} from '../constants/productConstants'\r\n\r\nexport const productListReducer = (state = { loading: true, products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_RESET:\r\n            return { loading: true }\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] }\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload.products,\r\n                pages: action.payload.pages,\r\n                page: action.payload.page\r\n            }\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDetailsReducer = (state = { loading: true, product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_RESET:\r\n            return { loading: true, product: {} }\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload }\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload, product: {} }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, success: false, error: action.payload }\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productUpdateImagesReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_IMAGES_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_UPDATE_IMAGES_SUCCESS:\r\n            return { loading: false, success: true, images: action.payload }\r\n        case PRODUCT_UPDATE_IMAGES_FAIL:\r\n            return { loading: false, success: false, error: action.payload }\r\n        case PRODUCT_UPDATE_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products: [] }\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload }\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productSuggestedReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_SUGGESTED_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_SUGGESTED_SUCCESS:\r\n            return { loading: false, suggested: action.payload }\r\n        case PRODUCT_SUGGESTED_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\actions\\productActions.js",["540","541","542"],"import axios from 'axios'\r\nimport {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_LIST_RESET,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DETAILS_RESET,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_IMAGES_REQUEST,\r\n    PRODUCT_UPDATE_IMAGES_SUCCESS,\r\n    PRODUCT_UPDATE_IMAGES_FAIL,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n    PRODUCT_SUGGESTED_REQUEST,\r\n    PRODUCT_SUGGESTED_SUCCESS,\r\n    PRODUCT_SUGGESTED_FAIL\r\n} from '../constants/productConstants'\r\n\r\nexport const listProducts =\r\n    (keyword = '', pageNumber = '', limit = '', sort = '', upDown = \"\", staff = false) => async (dispatch) => {\r\n        try {\r\n            dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n            const { data } = await axios.get(\r\n                `/api/products?keyword=${keyword}&pageNumber=${pageNumber}&limit=${limit}&staff=${staff}&sort=${sort}&upDown=${upDown}`\r\n            )\r\n\r\n            dispatch({\r\n                type: PRODUCT_LIST_SUCCESS,\r\n                payload: data\r\n            })\r\n        } catch (error) {\r\n            dispatch({\r\n                type: PRODUCT_LIST_FAIL,\r\n                payload: error.response && error.response.data.message\r\n                    ? error.response.data.message : error.message\r\n            })\r\n\r\n        }\r\n    }\r\n\r\nexport const resetProducts = () => async (dispatch) => { dispatch({ type: PRODUCT_LIST_RESET }) }\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/details/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message : error.message\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const resetProductDetails = () => async (dispatch) => { dispatch({ type: PRODUCT_DETAILS_RESET }) }\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        await axios.delete(`/api/products/${id}`, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.post(`/api/products`, {}, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.put(`/api/products/${product.cloverID}`, product, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateImages = (images, pID) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_IMAGES_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.put(`/api/products/images/${pID}`, images, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_IMAGES_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_IMAGES_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/top`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message : error.message\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const getSuggestedProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_SUGGESTED_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/suggested`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_SUGGESTED_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_SUGGESTED_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message : error.message\r\n        })\r\n\r\n    }\r\n}\r\n\r\n\r\n// export const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n//     try {\r\n//         dispatch({\r\n//             type: PRODUCT_CREATE_REVIEW_REQUEST\r\n//         })\r\n\r\n//         const { userLogin: { userInfo } } = getState()\r\n//         const config = {\r\n//             headers: {\r\n//                 'Content-Type': 'application/json',\r\n//                 Authorization: `Bearer ${userInfo.token}`\r\n//             }\r\n//         }\r\n//         await axios.post(`/api/products/${productId}/reviews`, review, config)\r\n\r\n//         dispatch({\r\n//             type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n//         })\r\n\r\n//     } catch (error) {\r\n//         dispatch({\r\n//             type: PRODUCT_CREATE_REVIEW_FAIL,\r\n//             payload: error.response && error.response.data.message\r\n//                 ? error.response.data.message : error.message\r\n//         })\r\n//     }\r\n// }","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\Message.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\CartScreen.js",["543","544","545","546"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport Message from '../components/Message'\r\nimport { Container, Row, Col, Image, ListGroup, Card, Button, ListGroupItem, Form } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { CartContext, CartContextUpdate } from '../contexts/CartContext'\r\nimport { UserContext } from '../contexts/UserContext'\r\nimport { useMutation, useQuery } from 'react-query'\r\nimport axios from 'axios'\r\nimport { envImage } from '../common'\r\n\r\nconst CartScreen = ({ match, history }) => {\r\n\r\n    const cartID = match.params.id\r\n\r\n    const user = useContext(UserContext)\r\n    const { cartItems } = useContext(CartContext)\r\n    const updateCart = useContext(CartContextUpdate)\r\n    const [error, setError] = useState(\"\")\r\n    const [overRide, setOverRide] = useState(false)\r\n\r\n\r\n    useEffect(() => {\r\n        if (cartID) {\r\n            if (user.isStaff || window.confirm(`You are about to load cart: ${cartID}\r\n                Clicking OK will override your cart with a new one\r\n                Clicking Cancel will return you to your existing cart`)) {\r\n                setOverRide(true)\r\n            } else { history.push('/cart') }\r\n        }\r\n    }, [cartID])\r\n\r\n    // Query: Get Details\r\n    const { refetch } = useQuery([`cart`, cartID], () => {\r\n        return axios.get(`/api/cart/${cartID}`)\r\n    }, {\r\n        enabled: overRide,\r\n        onSuccess: (data) => {\r\n            console.log(data.data)\r\n            updateCart({ type: \"LOAD_URL_CART\", urlCartItems: data.data.cartItems })\r\n        },\r\n        onError: (error) => {\r\n            setError(error.response && error.response.data.message\r\n                ? error.response.data.message : error.message)\r\n        }\r\n    })\r\n\r\n    // Mutation: Update Brand \r\n    const { mutate, isSuccess, reset } = useMutation(data => {\r\n        return axios.post(`/api/cart`, data, {\r\n            headers: { Authorization: `Bearer ${user.token}` }\r\n        })\r\n    }, {\r\n        onSuccess: (data) => {\r\n            console.log(data.data)\r\n            setError(\"\")\r\n            history.push(`/cart/${data.data.cartID}`)\r\n        },\r\n        onError: (error) => {\r\n            setError(error.response && error.response.data.message\r\n                ? error.response.data.message : error.message)\r\n        }\r\n    })\r\n\r\n    // Handlers\r\n    const removeHandler = (cloverID) => {\r\n        updateCart({ type: \"REMOVE_ITEM\", cloverID })\r\n        history.push(\"/cart\")\r\n    }\r\n    const qtyHandler = (cartItem, qty) => {\r\n        updateCart({ type: \"QTY_ITEM\", cartItem: { ...cartItem, qty } })\r\n        history.push(\"/cart\")\r\n    }\r\n    const checkoutHandler = () => {\r\n        history.push('/shipping')\r\n    }\r\n    const sendCartHandler = () => {\r\n        mutate(cartItems)\r\n    }\r\n\r\n\r\n    return (\r\n        <Container className=\"my-5 py-3\">\r\n            <Row className=\" mb-5\">\r\n                <Col lg=\"auto\">\r\n                    <h3 className=\"text-danger text-break m-0\">Shopping Cart</h3>\r\n                </Col>\r\n                <Col className=\"mt-3 mt-lg-auto\">\r\n                    <p className=\"my-0\">{cartID}</p>\r\n                </Col>\r\n            </Row>\r\n            {error && <Message variant=\"danger\">{error}</Message>}\r\n\r\n            {\r\n                cartItems.length === 0 ? (\r\n                    <Message>\r\n                        Your Cart is empty <Link to=\"/\"> Go Back</Link>\r\n                    </Message>\r\n                ) : (\r\n                    <Row>\r\n                        <Col lg={9}>\r\n                            <ListGroup>\r\n                                <ListGroup.Item className=\"mb-3 border-left-0 border-right-0 px-0\">\r\n                                    <Row>\r\n                                        <Col xs={4} lg={3} className=\"mb-3 mb-lg-0 my-auto d-none d-lg-block\">\r\n                                            <h6>Product</h6>\r\n                                        </Col>\r\n                                        <Col className=\"d-none d-lg-block my-auto\">\r\n                                        </Col>\r\n                                        <Col xs={4} lg={\"auto\"} className=\"text-center my-auto px-2\"\r\n                                            style={{ width: \"100px\" }}\r\n                                        >\r\n                                            <h6>Price</h6>\r\n                                        </Col>\r\n                                        <Col xs={4} lg={\"auto\"} className=\"text-center my-auto px-2\"\r\n                                            style={{ width: \"150px\" }}\r\n                                        >\r\n                                            <h6>Qty</h6>\r\n                                        </Col>\r\n                                        <Col xs={4} lg={\"auto\"} className=\"text-center my-auto px-2\"\r\n                                            style={{ width: \"100px\" }}\r\n                                        >\r\n                                            <h6>Total</h6>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                                {cartItems.map((item, index) => (\r\n                                    <ListGroup.Item key={index} className=\"mb-3 border-0 px-0\">\r\n                                        <Row>\r\n                                            <Col xs={12} lg={\"auto\"} className=\"text-center mb-3 mb-lg-0\"\r\n                                                style={{ width: \"100px\" }}\r\n                                            >\r\n                                                <Image src={envImage(item.image)}\r\n                                                    alt={item.name} fluid rounded\r\n                                                // style={{ height: \"100px\" }} \r\n                                                />\r\n                                            </Col>\r\n                                            <Col xs={12} lg className=\"mb-2 my-lg-auto text-center text-lg-left\">\r\n                                                <Link to={`/product/${item.pID}`}>{item.name}</Link>\r\n                                            </Col>\r\n                                            <Col xs={4} lg={\"auto\"} className=\"text-center my-auto px-2\"\r\n                                                style={{ width: \"100px\" }}\r\n                                            >\r\n                                                {Number(item.price / 100).toLocaleString(\"en-US\", { style: \"currency\", currency: \"USD\" })}\r\n                                            </Col>\r\n                                            <Col xs={4} lg={\"auto\"} className=\"text-center my-auto px-0\"\r\n                                                style={{ width: \"150px\" }}\r\n                                            >\r\n                                                <Form.Control className='form-select mx-auto p-1'\r\n                                                    as='select' value={item.qty}\r\n                                                    onChange={(e) => qtyHandler(item, e.target.value)}\r\n                                                    style={{ width: \"60px\" }}\r\n                                                >\r\n                                                    {[...Array(item.stock).keys()].map(x => (\r\n                                                        <option key={x + 1} value={x + 1}>{x + 1}</option>\r\n                                                    ))}\r\n                                                </Form.Control>\r\n                                                <Button className=\"p-2 m-0\"\r\n                                                    style={{ width: \"30px\" }}\r\n                                                    type='button' variant='light' onClick={\r\n                                                        () => removeHandler(item.cloverID)}\r\n                                                ><i className='fas fa-trash' />\r\n                                                </Button>\r\n                                            </Col>\r\n\r\n                                            <Col xs={4} lg={\"auto\"} className=\"text-center my-auto  px-0\"\r\n                                                style={{ width: \"100px\" }}\r\n                                            >\r\n                                                {Number(item.qty * item.price / 100).toLocaleString(\"en-US\", { style: \"currency\", currency: \"USD\" })}\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                ))}\r\n                            </ListGroup>\r\n                        </Col>\r\n                        <Col lg={3} className=\"pl-lg-4 pr-lg-0\">\r\n                            <Card>\r\n                                <ListGroup>\r\n                                    <ListGroupItem>\r\n                                        <h4>({cartItems.reduce((acc, curr) => acc + Number(curr.qty), 0)}) Items</h4>\r\n                                        <br></br>\r\n                                        <h5>Subtotal</h5>\r\n                                        <h4>\r\n                                            {cartItems\r\n                                                .reduce((acc, curr) => acc + curr.qty * curr.price / 100, 0)\r\n                                                .toLocaleString(\"en-US\", { style: \"currency\", currency: \"USD\" })\r\n                                            }\r\n                                        </h4>\r\n                                    </ListGroupItem>\r\n                                    <ListGroupItem>\r\n                                        <Button type='button' block disabled={cartItems.length === 0} onClick={checkoutHandler}>\r\n                                            Proceed to Checkout\r\n                                        </Button>\r\n                                        {user.isStaff && (<Button type='button' block variant=\"danger\"\r\n                                            disabled={cartItems.length === 0 || cartID}\r\n                                            onClick={sendCartHandler}>\r\n                                            Save and Send Cart\r\n                                        </Button>)}\r\n                                    </ListGroupItem>\r\n                                </ListGroup>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n\r\n\r\n                )\r\n            }\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\reducers\\cartReducers.js",["547","548"],"import {\r\n    CART_ADD_ITEM,\r\n    CART_FROM_DB_RESET,\r\n    CART_GET_CLOVER,\r\n    CART_LOAD_FROM_DB,\r\n    CART_LOAD_USER,\r\n    CART_MODIFY_ITEM,\r\n    CART_PUSH_CLOVER,\r\n    CART_REMOVE_ITEM,\r\n    CART_RESET,\r\n    CART_SAVE_PAYMENT_METHOD,\r\n    CART_SAVE_SHIPPING_INFO,\r\n    CART_SAVE_SHIPPING_METHOD,\r\n    CLOVER_FAIL,\r\n    CLOVER_RESET,\r\n    CLOVER_SUBMIT,\r\n    CLOVER_SUCCESS,\r\n    CART_SET_DISCOUNT,\r\n} from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingInfo: {}, shippingMethod: {} }, action) => {\r\n    const newItem = action.payload\r\n\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            let cleanCartItems = state.cartItems.filter(x => x.pID !== action.payload.pID)\r\n\r\n            return {\r\n                ...state,\r\n                cartItems: [...cleanCartItems, newItem]\r\n            }\r\n\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.pID !== action.payload)\r\n            }\r\n\r\n        case CART_MODIFY_ITEM:\r\n            let newCartItems = state.cartItems.map(item => {\r\n                let newItem = { ...item }\r\n                if (item.pID === action.payload.pID) newItem.qty = action.payload.qty\r\n                return newItem\r\n            })\r\n            return {\r\n                ...state,\r\n                cartItems: [...newCartItems]\r\n            }\r\n\r\n        case CART_RESET:\r\n            return {\r\n                cartItems: [],\r\n                shippingInfo: {},\r\n                shippingMethod: {}\r\n                // cloverOrder: null\r\n            }\r\n\r\n\r\n        case CART_SAVE_SHIPPING_INFO:\r\n            return {\r\n                ...state,\r\n                shippingInfo: action.payload\r\n            }\r\n\r\n        case CART_SAVE_SHIPPING_METHOD:\r\n            return {\r\n                ...state,\r\n                shippingMethod: {\r\n                    method: action.payload.method,\r\n                    price: action.payload.price\r\n                }\r\n            }\r\n\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n\r\n        // case CART_GET_CLOVER:\r\n        //     return {\r\n        //         ...state,\r\n        //         cloverID: action.payload\r\n        //     }\r\n\r\n        // case CART_PUSH_CLOVER:\r\n        //     return {\r\n        //         ...state,\r\n        //         cloverOrder: action.payload\r\n        //     }\r\n\r\n        case CART_LOAD_USER:\r\n            return {\r\n                ...state,\r\n                cartItems: action.payload\r\n            }\r\n\r\n        case CART_LOAD_FROM_DB:\r\n            return {\r\n                ...state,\r\n                cartFromDB: action.payload.cartID,\r\n                cartItems: action.payload.cartItems\r\n            }\r\n        case CART_FROM_DB_RESET:\r\n            return {\r\n                ...state,\r\n                cartFromDB: \"reset\"\r\n            }\r\n        case CART_SET_DISCOUNT:\r\n            return {\r\n                ...state,\r\n                discount: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const cloverReducer = (state = { loading: false }, action) => {\r\n    switch (action.type) {\r\n        case CLOVER_SUBMIT:\r\n            return { loading: true }\r\n        case CLOVER_SUCCESS:\r\n            return { loading: false, order: action.payload }\r\n        case CLOVER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case CLOVER_RESET:\r\n            return { loading: false }\r\n        default:\r\n            return state\r\n    }\r\n}","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\actions\\cartActions.js",["549","550","551","552","553","554","555"],"import axios from 'axios'\r\nimport {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_INFO,\r\n    CART_SAVE_PAYMENT_METHOD,\r\n    CART_MODIFY_ITEM,\r\n    CART_SAVE_SHIPPING_METHOD,\r\n    CART_GET_CLOVER,\r\n    CART_PUSH_CLOVER,\r\n    SHIPPING_INFO_PUSH_CLOVER,\r\n    CART_RESET,\r\n    CART_LOAD_USER,\r\n    CART_LOAD_FROM_DB,\r\n    CART_FROM_DB_RESET,\r\n    CLOVER_SUBMIT,\r\n    CLOVER_SUCCESS,\r\n    CLOVER_FAIL,\r\n    CLOVER_RESET,\r\n} from '../constants/cartConstants'\r\n\r\nconst storeCart = async (state, dispatch, reset) => {\r\n    const { userLogin: { userInfo } } = state\r\n    if (userInfo) {\r\n        const config = { headers: { 'Content-Type': 'application/json', Authorization: `Bearer ${userInfo.token}` } }\r\n        await axios.post(`/api/users/cart`, state.cart.cartItems, config)\r\n        let newUserInfo = state.userLogin.userInfo\r\n        newUserInfo.cart = state.cart.cartItems\r\n        localStorage.setItem('userInfo', JSON.stringify(newUserInfo))\r\n    }\r\n    localStorage.setItem('cartItems', JSON.stringify(state.cart.cartItems))\r\n\r\n    if (reset)\r\n        if (state.cart.cartFromDB == 'reset' || state.cart.cartFromDB == null) { }\r\n        else { dispatch({ type: CART_FROM_DB_RESET }) }\r\n}\r\n\r\nexport const addToCart = (product, name, qty, stock, price, cloverID) => async (dispatch, getState) => {\r\n\r\n    // Add to Cart\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            pID: product.pID,\r\n            cloverID,\r\n            name,\r\n            image: product.images[0].imageSrc,\r\n            price,\r\n            qty,\r\n            countInStock: stock\r\n        }\r\n    })\r\n    await storeCart(getState(), dispatch, true)\r\n}\r\n\r\nexport const removeFromCart = (pID) => async (dispatch, getState) => {\r\n\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: pID\r\n    })\r\n    await storeCart(getState(), dispatch, true)\r\n\r\n}\r\n\r\nexport const modifyCart = (pID, qty) => async (dispatch, getState) => {\r\n\r\n    dispatch({\r\n        type: CART_MODIFY_ITEM,\r\n        payload: { pID, qty }\r\n    })\r\n    await storeCart(getState(), dispatch, true)\r\n}\r\n\r\n\r\nexport const resetCart = () => async (dispatch, getState) => {\r\n\r\n    dispatch({\r\n        type: CART_RESET,\r\n    })\r\n\r\n    localStorage.removeItem(\"cartItems\")\r\n    localStorage.removeItem('shippingInfo')\r\n    localStorage.removeItem('shippingMethod')\r\n\r\n}\r\n\r\nexport const saveShippingInfo = (shippingInfo) => async (dispatch) => {\r\n    // dispatch({\r\n    //     type: CART_SAVE_SHIPPING_INFO,\r\n    //     payload: shippingInfo\r\n    // })\r\n    const { data } = await axios.post(`/api/clover/tax`, shippingInfo)\r\n    // const { data: validated } = await axios.post(`/api/clover/validate`, shippingInfo)\r\n    var infoWithTax = shippingInfo\r\n    infoWithTax.taxRate = data || 0\r\n    // infoWithTax.validated = validated || \"\"\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_INFO,\r\n        payload: infoWithTax\r\n    })\r\n\r\n    localStorage.setItem('shippingInfo', JSON.stringify(infoWithTax))\r\n}\r\n\r\nexport const saveShippingMethod = (data) => async (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_METHOD,\r\n        payload: data\r\n    })\r\n    localStorage.setItem('shippingMethod', JSON.stringify(getState().cart.shippingMethod))\r\n}\r\n\r\n\r\nexport const cartToDB = () => async (dispatch, getState) => {\r\n    const state = getState()\r\n    const { userLogin: { userInfo } } = state\r\n    const config = { headers: { 'Content-Type': 'application/json', Authorization: `Bearer ${userInfo.token}` } }\r\n    const { data } = await axios.post(`/api/cart`, state.cart, config)\r\n    dispatch({\r\n        type: CART_LOAD_FROM_DB,\r\n        payload: data\r\n    })\r\n\r\n}\r\n\r\nexport const loadCartFromDB = (cartID) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/cart/${cartID}`)\r\n    dispatch({\r\n        type: CART_LOAD_FROM_DB,\r\n        payload: data\r\n    })\r\n    await storeCart(getState(), dispatch, false)\r\n}\r\n\r\nexport const submitClover = (token) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: CLOVER_SUBMIT })\r\n        let state = getState()\r\n        let body = { cart: state.cart, userLogin: state.userLogin, token }\r\n        const { data } = await axios.post('/api/clover', body)\r\n\r\n        dispatch({ type: CLOVER_SUCCESS, payload: data })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CLOVER_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n// export const afterOrderReset = () => async (dispatch, getState) => {\r\n//     dispatch({ type: CLOVER_RESET })\r\n//     dispatch({ type: CART_RESET })\r\n\r\n//     localStorage.removeItem(\"cartItems\")\r\n//     localStorage.removeItem('shippingInfo')\r\n//     localStorage.removeItem('shippingMethod')\r\n\r\n// }\r\n\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\LoginScreen.js",["556","557"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Container } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { UserContext, UserContextUpdate } from '../contexts/UserContext'\r\nimport { useMutation } from 'react-query'\r\nimport axios from 'axios'\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n\r\n    const user = useContext(UserContext)\r\n    const updateUser = useContext(UserContextUpdate)\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    // If User Already Logged in\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n    useEffect(() => {\r\n        if (user._id) history.push(redirect)\r\n    }, [user])\r\n\r\n    // Login Mutation\r\n    const { mutate, isError, isLoading, error, reset } = useMutation(data => {\r\n        return axios.post('/api/users/login', data)\r\n    }, {\r\n        onSuccess: (data) => {\r\n            updateUser({ type: \"LOGIN\", payload: data.data })\r\n            reset()\r\n        }\r\n    })\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        mutate({ email, password })\r\n    }\r\n\r\n    return (\r\n        <Container className=\"my-5 py-3\">\r\n            <Row className='justify-content-lg-center'>\r\n                <Col lg={7} xl={6}>\r\n                    <h2 className=\"text-center text-danger mb-5 pb-3\">Log In</h2>\r\n                    {isError &&\r\n                        <Message variant='danger'>\r\n                            {error.response && error.response.data.message\r\n                                ? error.response.data.message : error.message}\r\n                        </Message>\r\n                    }\r\n                    {isLoading ? <Loader />\r\n                        : <Form onSubmit={submitHandler}>\r\n                            <Form.Group controlId='email'>\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control type='email' placeholder='Enter email' value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId='password'>\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control type='password' placeholder='Enter password' value={password}\r\n                                    onChange={(e) => setPassword(e.target.value)}>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <div className=\"text-center\">\r\n                                <Button type='submit' variant='primary' className=\"mx-auto my-4\" block\r\n                                    style={{ maxWidth: \"300px\" }}>\r\n                                    Log In\r\n                                </Button>\r\n                            </div>\r\n                            <div className=\"text-center\">\r\n                                Not a member yet?\r\n                                <Link className=\"mx-2 \" to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                                    Sign Up\r\n                                </Link>\r\n                            </div>\r\n                        </Form>\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\actions\\userActions.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\RegisterScreen.js",["558","559"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Container } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { useMutation } from 'react-query'\r\nimport { UserContext, UserContextUpdate, } from '../contexts/UserContext'\r\nimport axios from 'axios'\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n\r\n    // States and Contexts\r\n    const user = useContext(UserContext)\r\n    const updateUser = useContext(UserContextUpdate)\r\n\r\n    const [firstName, setFirstName] = useState('')\r\n    const [lastName, setLastName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    // Effect: Redirect if Already Logged In\r\n    useEffect(() => {\r\n        if (user._id) history.push('/profile')\r\n    }, [user])\r\n\r\n\r\n    // Mutation\r\n    const { mutate, isLoading, reset } = useMutation(data => {\r\n        return axios.post('/api/users/register', data)\r\n    }, {\r\n        onSuccess: (data) => {\r\n            updateUser({ type: \"LOGIN\", payload: data.data })\r\n            setMessage(\"\")\r\n            reset()\r\n        },\r\n        onError: (error) => {\r\n            setMessage(error.response && error.response.data.message\r\n                ? error.response.data.message : error.message)\r\n        }\r\n    })\r\n\r\n    // Handlers\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        setMessage(\"\")\r\n        if (password == confirmPassword) {\r\n            mutate({ firstName, lastName, email, password })\r\n        } else { // Passwords not match\r\n            setMessage(\"Passwords Do Not Match\")\r\n        }\r\n        setPassword(\"\")\r\n        setConfirmPassword(\"\")\r\n    }\r\n\r\n\r\n    return (\r\n        <Container className=\"my-5 pt-3\">\r\n            <Row className='justify-content-lg-center'>\r\n                <Col lg={7} xl={6}>\r\n                    <h2 className=\"text-center text-danger mb-5 pb-3\">Sign Up</h2>\r\n                    {message && <Message variant='danger'>{message}</Message>}\r\n                    {isLoading ? <Loader />\r\n                        : <>\r\n                            <Form onSubmit={submitHandler}>\r\n                                <Form.Row>\r\n                                    <Col>\r\n                                        <Form.Group controlId='firstName'>\r\n                                            <Form.Label>First Name</Form.Label>\r\n                                            <Form.Control type='name' placeholder='Enter first name' value={firstName} required\r\n                                                onChange={(e) => setFirstName(e.target.value)}>\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Form.Group controlId='lastName'>\r\n                                            <Form.Label>Last Name</Form.Label>\r\n                                            <Form.Control type='name' placeholder='Enter last name' value={lastName} required\r\n                                                onChange={(e) => setLastName(e.target.value)}>\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Form.Row>\r\n                                <Form.Group controlId='email'>\r\n                                    <Form.Label>Email Address</Form.Label>\r\n                                    <Form.Control type='email' placeholder='Enter email' value={email} required\r\n                                        onChange={(e) => setEmail(e.target.value)}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group controlId='password'>\r\n                                    <Form.Label>Password</Form.Label>\r\n                                    <Form.Control type='password' placeholder='Enter password' value={password} required\r\n                                        onChange={(e) => setPassword(e.target.value)}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group controlId='confirmPassword'>\r\n                                    <Form.Label>Confirm Password</Form.Label>\r\n                                    <Form.Control type='password' placeholder='Confirm Password' value={confirmPassword} required\r\n                                        onChange={(e) => setConfirmPassword(e.target.value)}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Col xs={8} className=\"mx-auto my-4\">\r\n                                    <Button type='submit' variant='primary' block>\r\n                                        Sign Up\r\n                                    </Button>\r\n                                </Col>\r\n                            </Form>\r\n                            <Row>\r\n                                <Col className=\"text-center\">\r\n                                    Have an Account?\r\n                                    <Link className=\"mx-2\" to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                                        Login\r\n                                    </Link>\r\n                                </Col>\r\n                            </Row>\r\n                        </>\r\n                    }\r\n                </Col>\r\n            </Row>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\ProfileScreen.js",["560"],"import React, { useContext } from 'react'\r\nimport { UserContext } from '../contexts/UserContext'\r\n\r\nimport { Row, Col, Container } from 'react-bootstrap'\r\nimport { UserNavBar } from '../components/UserNavBar'\r\nimport EditPassword from '../components/EditPassword'\r\nimport EditAddress from '../components/EditAddress'\r\nimport ProtectedRoute from '../components/ProtectedRoute'\r\n\r\n\r\n\r\nconst ProfileInfoScreen = () => {\r\n\r\n    const user = useContext(UserContext)\r\n\r\n    return (\r\n        <Container className=\"my-5 pb-5\">\r\n            <UserNavBar />\r\n            <Row className=\"mt-5\">\r\n                <Col lg={6} className=\"px-5\">\r\n                    <h3>Name</h3>\r\n                    <p className=\"mt-3 mb-5\">{user.firstName} {user.lastName}</p>\r\n                    <h3>Email</h3>\r\n                    <p className=\"mt-3 mb-5\">{user.email}</p>\r\n\r\n                    <h3>Password</h3>\r\n                    <EditPassword />\r\n                </Col>\r\n\r\n                <Col lg={6} className=\"px-5\">\r\n                    <h3>Address</h3>\r\n                    <EditAddress />\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ProfileInfoScreen\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\ShippingScreen.js",["561","562","563","564","565"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport { Form, Button, Row, Col, Container } from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport { useMutation } from 'react-query'\r\nimport { Link } from 'react-router-dom'\r\nimport { SideCart } from '../components/SideCart'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { CartContext, CartContextUpdate } from '../contexts/CartContext'\r\nimport { UserContext } from '../contexts/UserContext'\r\n\r\nconst ShippingScreen = ({ history, location }) => {\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const { cartItems, shippingInfo } = useContext(CartContext)\r\n    const updateCart = useContext(CartContextUpdate)\r\n\r\n    useEffect(() => {\r\n        if (cartItems.length == 0) { history.push('/cart') }\r\n    }, [cartItems])\r\n\r\n    useEffect(() => {\r\n        updateCart({ type: \"CLEAR_SHIPPING_METHOD\" })\r\n        updateCart({ type: \"ADD_DISCOUNT\", discount: {} })\r\n    }, [])\r\n\r\n    const emptyShipping = {\r\n        email: \"\", news: false, firstName: \"\", lastName: \"\", company: \"\", address1: \"\", address2: \"\",\r\n        city: \"\", region: \"\", country: \"\", postalCode: \"\", phone: \"\"\r\n    }\r\n\r\n    const [shipping, setShipping] = useState(Object.keys(shippingInfo).length != 0 ? shippingInfo : emptyShipping)\r\n    const [verified, setVerified] = useState(false)\r\n\r\n    const submitHandler = async () => {\r\n        // const taxData = await axios.post(`/api/tax/fetch`, {\r\n        //     line1: Array.isArray(data.data.XAVResponse.Candidate.AddressKeyFormat.AddressLine)\r\n        //         ? data.data.XAVResponse.Candidate.AddressKeyFormat.AddressLine[0]\r\n        //         : data.data.XAVResponse.Candidate.AddressKeyFormat.AddressLine,\r\n        //     line2: Array.isArray(data.data.XAVResponse.Candidate.AddressKeyFormat.AddressLine)\r\n        //         ? data.data.XAVResponse.Candidate.AddressKeyFormat.AddressLine[1]\r\n        //         : \"\",\r\n        //     city: data.data.XAVResponse.Candidate.AddressKeyFormat.PoliticalDivision2,\r\n        //     region: data.data.XAVResponse.Candidate.AddressKeyFormat.PoliticalDivision1,\r\n        //     country: data.data.XAVResponse.Candidate.AddressKeyFormat.CountryCode,\r\n        //     postalCode: data.data.XAVResponse.Candidate.AddressKeyFormat.PostcodePrimaryLow,\r\n        // })\r\n        // console.log(taxData.data)\r\n        updateCart({\r\n            type: \"ADD_SHIPPING\", shippingInfo: {\r\n                ...shipping,\r\n                address1: Array.isArray(data.data.XAVResponse.Candidate.AddressKeyFormat.AddressLine)\r\n                    ? data.data.XAVResponse.Candidate.AddressKeyFormat.AddressLine[0]\r\n                    : data.data.XAVResponse.Candidate.AddressKeyFormat.AddressLine,\r\n                address2: Array.isArray(data.data.XAVResponse.Candidate.AddressKeyFormat.AddressLine)\r\n                    ? data.data.XAVResponse.Candidate.AddressKeyFormat.AddressLine[1]\r\n                    : \"\",\r\n                city: data.data.XAVResponse.Candidate.AddressKeyFormat.PoliticalDivision2,\r\n                region: data.data.XAVResponse.Candidate.AddressKeyFormat.PoliticalDivision1,\r\n                country: data.data.XAVResponse.Candidate.AddressKeyFormat.CountryCode,\r\n                postalCode: data.data.XAVResponse.Candidate.AddressKeyFormat.PostcodePrimaryLow,\r\n                // taxRate: taxData.data\r\n                taxRate: data.data.XAVResponse.Candidate.AddressKeyFormat.PoliticalDivision1 === \"CA\"\r\n                    ? 0.0775 : 0\r\n            }\r\n        })\r\n        history.push('/shippingmethod')\r\n    }\r\n\r\n\r\n    const { data, error, isLoading, mutate } = useMutation(data => {\r\n        return axios.post(`/api/shipping/ups/AV`, data)\r\n    })\r\n\r\n\r\n    const verifyHandler = async (e) => {\r\n        e.preventDefault()\r\n        setVerified(true)\r\n        mutate(shipping)\r\n    }\r\n\r\n\r\n    return (\r\n        <Container className=\"my-5 py-3\">\r\n            <h2 className=\"text-danger\">Checkout</h2>\r\n            <Row>\r\n                <Col lg={6}>\r\n                    <Row className=\"mt-4 mb-3\">\r\n                        <Col xs={12} lg className=\"order-2 order-lg-1\">\r\n                            <h5 className=\"\">Contact Information</h5>\r\n                        </Col>\r\n                        <Col xs={12} lg=\"auto\" className=\"text-right order-1 order-lg-2\">\r\n                            Already have an account?\r\n                            <Link className=\"mx-2 text-danger\" to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                                Sign In\r\n                            </Link>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Form onSubmit={verifyHandler}>\r\n                        <Form.Group controlId='email'>\r\n                            <Form.Control type='text' placeholder='Email' value={shipping.email} required\r\n                                onChange={(e) => setShipping({ ...shipping, email: e.target.value })}>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Check id='news' type='checkbox' checked={shipping.news} label=\"Keep me up to date on news and offers\"\r\n                            onChange={(e) => setShipping({ ...shipping, news: e.target.checked })}>\r\n                        </Form.Check>\r\n\r\n                        <h5 className=\"mt-5 mb-4\">Shipping Address</h5>\r\n                        {verified\r\n                            ? (<>\r\n                                {isLoading && <Loader />}\r\n                                {error && <Message variant=\"danger\">{JSON.stringify(error.response.data.message)}</Message>}\r\n                                {data && (\r\n                                    <div className=\"border px-3 my-3\">\r\n                                        <p className=\"mt-4\">Is This Correct?</p>\r\n                                        {/* <p>{JSON.stringify(data.data)}</p> */}\r\n                                        {Array.isArray(data.data.XAVResponse.Candidate.AddressKeyFormat.AddressLine)\r\n                                            ? (<>\r\n                                                <h4> {data.data.XAVResponse.Candidate.AddressKeyFormat.AddressLine[0]}</h4>\r\n                                                <h4>{data.data.XAVResponse.Candidate.AddressKeyFormat.AddressLine[1]}</h4>\r\n                                            </>)\r\n                                            : <h4> {data.data.XAVResponse.Candidate.AddressKeyFormat.AddressLine}</h4>\r\n                                        }\r\n                                        <h4>{data.data.XAVResponse.Candidate.AddressKeyFormat.Region}, {data.data.XAVResponse.Candidate.AddressKeyFormat.CountryCode} </h4>\r\n                                        <br />\r\n                                    </div>)}\r\n                            </>)\r\n                            : (<>\r\n                                <Row>\r\n                                    <Col className=\"pr-1\">\r\n                                        <Form.Group controlId='firstName'>\r\n                                            <Form.Control type='text' placeholder='First name' value={shipping.firstName} required\r\n                                                onChange={(e) => setShipping({ ...shipping, firstName: e.target.value })}>\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col className=\"pl-1\">\r\n                                        <Form.Group controlId='lastName'>\r\n                                            <Form.Control type='text' placeholder='Last name' value={shipping.lastName} required\r\n                                                onChange={(e) => setShipping({ ...shipping, lastName: e.target.value })}>\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Form.Group controlId='company'>\r\n                                    <Form.Control type='text' placeholder='Company (Optional)' value={shipping.company}\r\n                                        onChange={(e) => setShipping({ ...shipping, company: e.target.value })}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group controlId='address'>\r\n                                    <Form.Control type='text' placeholder='Address' value={shipping.address1} required\r\n                                        onChange={(e) => setShipping({ ...shipping, address1: e.target.value })}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group controlId='address2'>\r\n                                    <Form.Control type='text' placeholder='Apartment, Suite, Etc. (Optional)' value={shipping.address2}\r\n                                        onChange={(e) => setShipping({ ...shipping, address2: e.target.value })}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group controlId='city'>\r\n                                    <Form.Control type='text' placeholder='City' value={shipping.city} required\r\n                                        onChange={(e) => setShipping({ ...shipping, city: e.target.value })}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Row>\r\n                                    <Col className=\"pr-1\">\r\n                                        <Form.Group controlId='country'>\r\n                                            <Form.Control type='text' placeholder='Country/Region' value={shipping.country} required\r\n                                                onChange={(e) => setShipping({ ...shipping, country: e.target.value })}>\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col className=\"px-1\">\r\n                                        <Form.Group controlId='region'>\r\n                                            <Form.Control type='text' placeholder='State' value={shipping.region} required\r\n                                                onChange={(e) => setShipping({ ...shipping, region: e.target.value })}>\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col className=\"pl-1\">\r\n                                        <Form.Group controlId='postalCode'>\r\n                                            <Form.Control type='text' placeholder='Postal code' value={shipping.postalCode} required\r\n                                                onChange={(e) => setShipping({ ...shipping, postalCode: e.target.value })}>\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Form.Group controlId='phone'>\r\n                                    <Form.Control type='tel' placeholder='Phone' value={shipping.phone} required\r\n                                        onChange={(e) => setShipping({ ...shipping, phone: e.target.value })}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                            </>)}\r\n                        {!verified && <Button type=\"submit\" disabled={verified && error} className=\"mt-2\">\r\n                            Verify and Continue\r\n                        </Button>}\r\n                        {verified && <Button type=\"button\" className=\"mt-2\"\r\n                            onClick={() => submitHandler()}\r\n                        >Accept and Continue</Button>}\r\n                        {verified && <Button type=\"button\" variant=\"secondary\" className=\"mx-2 mt-2\"\r\n                            onClick={() => setVerified(false)}\r\n                        >Go Back & Edit</Button>}\r\n                    </Form>\r\n\r\n                </Col>\r\n                <Col lg={6} className=\"pl-5 d-none d-lg-block\">\r\n                    <SideCart />\r\n                </Col>\r\n            </Row>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\PaymentScreen.js",["566","567","568","569","570","571","572","573","574"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { Form, Button, Col, Row, ListGroup, Modal, Container, DropdownButton, Dropdown, InputGroup } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { useMutation } from 'react-query'\r\nimport Message from '../components/Message'\r\nimport { SideCart } from '../components/SideCart'\r\nimport Loader from '../components/Loader'\r\nimport { CLOVER_RESET, CART_SET_DISCOUNT } from '../constants/cartConstants'\r\nimport { CartContext, CartContextUpdate } from '../contexts/CartContext'\r\nimport { UserContext } from '../contexts/UserContext'\r\nimport DiscountCode from '../components/DiscountCode'\r\nimport DiscountNewScreen from './DiscountNewScreen'\r\n\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n    const cart = useContext(CartContext)\r\n    const { shippingMethod, shippingInfo } = cart\r\n    const updateCart = useContext(CartContextUpdate)\r\n    const user = useContext(UserContext)\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(shippingMethod).length == 0) history.push('/shippingmethod')\r\n    }, [shippingMethod])\r\n\r\n    const [buttonDisable, setButtonDisable] = useState(false)\r\n    const [discountModal, setDiscountModal] = useState(false)\r\n\r\n\r\n    const styles = {\r\n        body: { fontFamily: 'Roboto, Open Sans, sans-serif', fontSize: '16px', },\r\n        input: {\r\n            fontSize: '13px',\r\n            border: \" 1px solid rgba(0, 0, 0, 0.125)\",\r\n            height: '50px',\r\n            padding: '8px'\r\n        },\r\n        img: { right: '10px !important', top: '10px !important', }\r\n    };\r\n    const elements = window.clover.elements();\r\n    const cardNumber = elements.create('CARD_NUMBER', styles);\r\n    const cardDate = elements.create('CARD_DATE', styles);\r\n    const cardCvv = elements.create('CARD_CVV', styles);\r\n    const cardPostalCode = elements.create('CARD_POSTAL_CODE', styles);\r\n\r\n\r\n    // Load iFrame \r\n    useEffect(() => {\r\n        cardNumber.mount('#card-number');\r\n        cardDate.mount('#card-date');\r\n        cardCvv.mount('#card-cvv');\r\n        cardPostalCode.mount('#card-postal-code');\r\n\r\n        const cloverFooter = document.getElementsByClassName('clover-footer')[0];\r\n        const footer = document.querySelector('footer');\r\n        if (cloverFooter) cloverFooter.style.display = \"block\"\r\n        cloverFooter && footer.insertBefore(cloverFooter, footer.childNodes[0])\r\n\r\n        return () => { if (cloverFooter) cloverFooter.style.display = \"none\" }\r\n    }, []);\r\n\r\n\r\n    const { data: order, error, isLoading: loading, mutate } = useMutation(data => {\r\n        return axios.post(`/api/clover`, data)\r\n    })\r\n\r\n    // Redirect to Order after Submit\r\n    useEffect(() => {\r\n        if (order) {\r\n            updateCart({ type: \"RESET_CART\" })\r\n            history.push(`/order/${order.data.id}`)\r\n        }\r\n    }, [order])\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        setButtonDisable(true)\r\n\r\n        window.clover.createToken()\r\n            .then((result) => {\r\n                if (result.errors) {\r\n                    const displayError = document.getElementById('card-errors');\r\n                    Object.values(result.errors).forEach(function (value) {\r\n                        displayError.textContent = value;\r\n                    });\r\n                    setButtonDisable(false)\r\n                } else {\r\n                    mutate({ cart, userInfo: user, token: result.token })\r\n                }\r\n                setButtonDisable(false)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Container className=\"my-5 py-3\">\r\n            <Modal show={loading} backdrop=\"static\" keyboard={false}>\r\n                <Modal.Header>\r\n                    <Modal.Title>Sumbitting Order...\r\n                        <br /> Please do not close this window</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body> <Loader /> </Modal.Body>\r\n            </Modal>\r\n            {error && <Message variant='danger'>{error.response ? \"!\" + JSON.stringify(error.response.data.message) : \"~\" + error.message}</Message>}\r\n            {order && <Message variant='success'>{\"Success! \" + order.id}</Message>}\r\n\r\n            <Row>\r\n                <Col lg={6}>\r\n                    {/* <h5 className=\"\">Shipping Information</h5> */}\r\n                    <ListGroup>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>\r\n                                    <strong>Contact:</strong> {shippingInfo.email}\r\n                                </Col>\r\n                                <Col xs=\"auto\" className=\"text-right\">\r\n                                    <Link to=\"/shipping\" className=\"text-muted\">Change</Link>\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>\r\n                                    <strong>Ship to: </strong>\r\n                                    <br /> {shippingInfo.address1} {shippingInfo.address2}\r\n                                    <br />{shippingInfo.city}, {shippingInfo.region}, {shippingInfo.country}, {shippingInfo.postalCode}\r\n                                </Col>\r\n                                <Col xs=\"auto\" className=\"text-right\">\r\n                                    <Link to=\"/shipping\" className=\"text-muted\">Change</Link>\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>\r\n                                    <strong>Shipping Method: </strong> {shippingMethod.method}\r\n                                </Col>\r\n                                <Col xs=\"auto\" className=\"text-right\">\r\n                                    <Link to=\"/shippingmethod\" className=\"text-muted\">Change</Link>\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                        <DiscountCode />\r\n\r\n                    </ListGroup>\r\n\r\n                    <h5 className=\"mt-5\">Payment Information</h5>\r\n\r\n                    <div className=\"App\" id=\"iframeapp\">\r\n                        <div id=\"card-errors\" role=\"alert\" style={{ color: \"red\" }} />\r\n                        <div className=\"flex justify-center mt-16\">\r\n                            <Form id=\"payment-form\" noValidate autoComplete=\"off\">\r\n                                <Form.Row >\r\n                                    <Col>\r\n                                        <div id=\"card-number\" className=\"\" style={{ height: \"60px\" }} />\r\n                                    </Col>\r\n                                </Form.Row>\r\n\r\n                                <Form.Row>\r\n                                    <Col >\r\n                                        <div id=\"card-date\" className=\"\" style={{ height: \"60px\" }} />\r\n                                    </Col>\r\n                                    <Col >\r\n                                        <div id=\"card-cvv\" className=\"\" style={{ height: \"60px\" }} />\r\n                                    </Col>\r\n                                    <Col >\r\n                                        <div id=\"card-postal-code\" className=\"\" style={{ height: \"60px\" }} />\r\n                                    </Col>\r\n                                </Form.Row>\r\n                                {/* </fieldset> */}\r\n                            </Form>\r\n\r\n                            <Button variant=\"primary\" size=\"large\" className=\"mt-3 px-5\"\r\n                                disabled={buttonDisable}\r\n                                onClick={submitHandler} >\r\n                                Pay Now\r\n                            </Button>\r\n\r\n                            {user.isStaff && <Button variant=\"outline-secondary\" size=\"large\" className=\"mt-3 px-3 ml-5\"\r\n                                onClick={() => setDiscountModal(true)} >\r\n                                Create Discount Code\r\n                            </Button>}\r\n                            <Modal show={discountModal} backdrop=\"static\" keyboard={false} onHide={() => setDiscountModal(false)}>\r\n                                <Modal.Header closeButton></Modal.Header>\r\n                                <Modal.Body><DiscountNewScreen popup={true} />  </Modal.Body>\r\n                            </Modal>\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n                <Col lg={6} className=\"pl-5 d-none d-lg-block\">\r\n                    <SideCart />\r\n                </Col>\r\n            </Row>\r\n        </Container >\r\n\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\PlaceOrderScreen.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\reducers\\orderReducers.js",["575","576","577","578","579","580","581"],"import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\n\r\nexport const orderDetailsReducer = (\r\n    state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return { loading: false, order: action.payload }\r\n        case ORDER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return { loading: true }\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case ORDER_DELIVER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return { loading: true }\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return { loading: false, orders: action.payload }\r\n        case ORDER_LIST_MY_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case ORDER_LIST_MY_RESET:\r\n            return { orders: [] }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return { loading: true }\r\n        case ORDER_LIST_SUCCESS:\r\n            return { loading: false, orders: action.payload }\r\n        case ORDER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\actions\\orderActions.js",["582","583","584","585","586","587","588","589","590","591"],"import axios from 'axios'\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n} from '../constants/orderConstants'\r\n\r\n\r\nexport const getOrderDetails = (orderId) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        // const { userLogin: { userInfo } } = getState()\r\n\r\n        // const config = { headers: { Authorization: `Bearer ${userInfo.token}` } }\r\n\r\n        // const { data } = await axios.get(`/api/orders/${orderId}`, config)\r\n        const { data } = await axios.get(`/api/orders/${orderId}`)\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.get(`/api/orders/myorders`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listOrders = (token) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                // Authorization: `Bearer ${userInfo.token}`\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        }\r\n        const { data } = await axios.get(`/api/orders`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n// export const deliverOrder = (order) => async (dispatch, getState) => {\r\n//     try {\r\n//         dispatch({\r\n//             type: ORDER_DELIVER_REQUEST\r\n//         })\r\n\r\n//         const { userLogin: { userInfo } } = getState()\r\n\r\n//         const config = {\r\n//             headers: {\r\n//                 Authorization: `Bearer ${userInfo.token}`\r\n//             }\r\n//         }\r\n//         const { data } = await axios.put(`/api/orders/${order._id}/deliver`, {}, config)\r\n\r\n//         dispatch({\r\n//             type: ORDER_DELIVER_SUCCESS,\r\n//             payload: data\r\n//         })\r\n\r\n//     } catch (error) {\r\n//         dispatch({\r\n//             type: ORDER_DELIVER_FAIL,\r\n//             payload: error.response && error.response.data.message\r\n//                 ? error.response.data.message : error.message\r\n//         })\r\n//     }\r\n// }","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\OrderScreen.js",["592","593","594","595","596","597","598","599","600","601","602","603"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport axios from 'axios'\r\nimport { useMutation, useQuery } from 'react-query'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Card, Button, Container, Nav, Form } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, deliverOrder } from '../actions/orderActions'\r\n// import { createUPS } from '../actions/shippingActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\nimport { envImage } from '../common'\r\nimport { UserContext } from '../contexts/UserContext'\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n    const orderID = match.params.id\r\n    const userInfo = useContext(UserContext)\r\n\r\n\r\n    const [size, setSize] = useState(\"\")\r\n    const [amount, setAmount] = useState(\"\")\r\n    const [lineID, setLineID] = useState(\"\")\r\n\r\n    const { order, loading, error } = useSelector(state => state.orderDetails)\r\n    // const { userInfo } = useSelector(state => state.userLogin)\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(getOrderDetails(orderID))\r\n        return () => { }\r\n    }, [])\r\n\r\n    // Check if Label already created\r\n    const { isLoading, isError, data: labelData, error: labelError, refetch } = useQuery('label', () =>\r\n        axios.get(`/api/shipping/tracking/${orderID}`)\r\n    )\r\n\r\n    // Shipping Label Mutations\r\n    const labelMutation = useMutation(data => {\r\n        return axios.post(`/api/shipping/ups/${orderID}/${size}`, data,\r\n            { headers: { Authorization: `Bearer ${userInfo.token}` } })\r\n    })\r\n    const handleUPS = () => {\r\n        labelMutation.mutate(order.shippingLabel)\r\n    }\r\n\r\n    // Refund Mutation\r\n    const refundMutation = useMutation(data => {\r\n        return axios.post(`/api/clover/refund`, data,\r\n            { headers: { Authorization: `Bearer ${userInfo.token}` } })\r\n    })\r\n    const handleRefund = () => {\r\n        refundMutation.mutate({ amount, lineID, orderID })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (labelMutation.data) { refetch() }\r\n        if (refundMutation.data) {\r\n            dispatch(getOrderDetails(orderID))\r\n            setAmount(\"\")\r\n            setLineID(\"\")\r\n        }\r\n    }, [labelMutation.isSuccess, refundMutation.isSuccess])\r\n\r\n    return (\r\n        <Container className=\"my-5\">\r\n            {loading ? <Loader />\r\n                : error ? <Message variant='danger'>{error.response && error.response.data.message\r\n                    ? error.response.data.message : error.message}</Message>\r\n                    : (\r\n                        <>\r\n                            <Row className=\"mt-5 mb-3\">\r\n                                <Col lg=\"auto\">\r\n                                    <h3 className=\"text-danger text-break m-0\">Order #{orderID}</h3>\r\n                                </Col>\r\n                                <Col className=\"mt-3 mt-lg-auto\">\r\n                                    <p className=\"my-0\">{Date(order.createdTime).toLocaleString().substr(4, 11)}</p>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col lg={12} xl={10}>\r\n                                    {order.lineItems &&\r\n                                        (\r\n                                            <ListGroup className=\"mb-5\">\r\n                                                <ListGroup.Item className=\"mb-3 border-left-0 border-right-0 px-0\">\r\n                                                    <Row>\r\n                                                        <Col xs={4} lg={3} className=\"mb-3 mb-lg-0 my-auto d-none d-lg-block\">\r\n                                                            <h6>Product</h6>\r\n                                                        </Col>\r\n                                                        <Col className=\"d-none d-lg-block my-auto\">\r\n                                                        </Col>\r\n                                                        <Col xs={5} lg={2} className=\"text-center my-auto\">\r\n                                                            <h6>Price</h6>\r\n                                                        </Col>\r\n                                                        <Col xs={2} lg={1} className=\"text-center my-auto\">\r\n                                                            <h6>Qty</h6>\r\n                                                        </Col>\r\n                                                        <Col xs={5} lg={2} className=\"text-center my-auto\">\r\n                                                            <h6>Total</h6>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n\r\n                                                {order.lineItems.map((item, index) => (\r\n                                                    <ListGroup.Item key={index} className=\"mb-3 border-0 px-0\">\r\n                                                        <Row>\r\n                                                            <Col xs={12} lg={3} className=\"mb-3 mb-lg-0\">\r\n                                                                {item.image &&\r\n                                                                    <Image src={envImage(item.image)} alt={item.name}\r\n                                                                        fluid rounded />}\r\n                                                            </Col>\r\n                                                            <Col xs={12} lg={4} className=\"mb-2 my-lg-auto text-center text-lg-left\">\r\n                                                                {item.name === \"Website Shipping\"\r\n                                                                    ? item.alternateName\r\n                                                                    : <Link to={`/product/${item.pID}`}\r\n                                                                        className=\" text-danger\" style={{ fontWeight: \"bold\" }}>\r\n                                                                        {item.name}\r\n                                                                    </Link>}\r\n                                                            </Col>\r\n                                                            <Col xs={5} lg={2} className=\"text-center my-auto\">\r\n                                                                {Number(item.price / 100).toLocaleString(\"en-US\", { style: \"currency\", currency: \"USD\" })}\r\n                                                            </Col>\r\n                                                            <Col xs={2} lg={1} className=\"text-center my-auto border\">\r\n                                                                {item.qty}\r\n                                                            </Col>\r\n                                                            <Col xs={5} lg={2} className=\"text-center my-auto\">\r\n                                                                {Number(item.qty * item.price / 100).toLocaleString(\"en-US\", { style: \"currency\", currency: \"USD\" })}\r\n                                                                {item.refunded && <p className=\"text-danger\">(refunded)</p>}\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                ))}\r\n                                            </ListGroup>\r\n                                        )}\r\n                                    {order.payment && (<ListGroup>\r\n                                        <ListGroup.Item>\r\n                                            <h4 className=\"mb-3\">Payment</h4>\r\n                                            {order.payment.state === \"PAID\" ? (\r\n                                                <>\r\n                                                    {\r\n                                                        order.payment.discounts &&\r\n                                                        <p><strong>Discount: </strong>{(order.payment.discounts.elements[0].amount / 100)\r\n                                                            .toLocaleString(\"en-US\", { style: \"currency\", currency: \"USD\" })}</p>\r\n                                                    }\r\n                                                    <p><strong>Tax: </strong>{(order.payment.tax / 100).toLocaleString(\"en-US\", { style: \"currency\", currency: \"USD\" })}</p>\r\n                                                    <p><strong>Total: </strong>{(order.payment.total / 100).toLocaleString(\"en-US\", { style: \"currency\", currency: \"USD\" })}</p>\r\n                                                </>\r\n                                            ) : <p><strong>Status: </strong>{order.payment.state === \"OPEN\" ? \"NOT PAID / PROCESSING\" : \"PAID\"}</p>\r\n                                            }\r\n                                            {order.employee && (\r\n                                                <p>\r\n                                                    <strong>Employee: </strong>\r\n                                                    <a>{order.employee}</a>\r\n                                                </p>\r\n                                            )}\r\n                                            {order.refunds && order.refunds.map(refund => (\r\n                                                <p>\r\n                                                    <strong>Refund: </strong>\r\n                                                    {Number(refund.amount / 100).toLocaleString(\"en-US\", { style: \"currency\", currency: \"USD\" })}\r\n                                                    {\" \"}({new Date(refund.createdTime).toLocaleString()})\r\n                                                </p>\r\n                                            ))\r\n                                            }\r\n\r\n\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>)}\r\n\r\n                                    {userInfo.isStaff && (<ListGroup>\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col >\r\n                                                    <h4 className=\"mb-3\">Refunds</h4>\r\n                                                    {order.refunds && order.refunds.map(refund => (\r\n                                                        <p>\r\n                                                            <strong>{new Date(refund.createdTime).toLocaleString()}: </strong>\r\n                                                            {Number(refund.amount / 100).toLocaleString(\"en-US\", { style: \"currency\", currency: \"USD\" })}\r\n                                                        </p>\r\n                                                    ))\r\n                                                    }\r\n                                                </Col>\r\n\r\n                                                {userInfo && userInfo.isStaff &&\r\n                                                    <Col className=\"text-center\">\r\n                                                        <Row>\r\n                                                            <Col>\r\n                                                                <Form.Control as=\"select\"\r\n                                                                    value={lineID}\r\n                                                                    onChange={(e) => setLineID(e.target.value)}\r\n                                                                >\r\n                                                                    <option value=\"\">Select Item</option>\r\n\r\n                                                                    {order.lineItems && order.lineItems.map(item => (\r\n                                                                        <option value={item.id}>{item.name}</option>\r\n                                                                    ))}\r\n                                                                </Form.Control>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                        <Row noGutters>\r\n                                                            <Col>\r\n                                                                <Form.Control type=\"number\" value={amount} placeholder=\"Refund Amount (Cents)\"\r\n                                                                    onChange={(e) => setAmount(e.target.value)}\r\n                                                                >\r\n                                                                </Form.Control>\r\n                                                            </Col>\r\n                                                            <Col xs=\"auto\">\r\n                                                                <Button\r\n                                                                    disabled={!lineID || !amount || refundMutation.isLoading}\r\n                                                                    block style={{ height: \"47px\" }}\r\n                                                                    onClick={handleRefund}\r\n                                                                >\r\n                                                                    {refundMutation.isLoading ? \"Loading\" : \"Refund\"}\r\n                                                                </Button>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                        <p className=\"text-danger\">{refundMutation.error && \"Error\"}</p>\r\n                                                        <p className=\"text-danger\">{refundMutation.error && JSON.parse(refundMutation.error.response.data.message).error.message}</p>\r\n                                                    </Col>\r\n                                                }\r\n\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>)}\r\n\r\n                                    {order.shippingLabel && (<ListGroup className=\"mb-4\">\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col>\r\n                                                    <h4>Shipping</h4>\r\n                                                    <p>\r\n                                                        {/* <strong>Name: </strong>{order.user.name} */}\r\n                                                    </p>\r\n                                                    <p>\r\n                                                        <strong>Email: </strong>\r\n                                                        <a href={`mailto:${order.shippingLabel.email}`}>{order.shippingLabel.email}</a>\r\n                                                    </p>\r\n                                                    <p>\r\n                                                        <strong>Address: </strong>\r\n                                                        {order.shippingLabel.address} {order.shippingLabel.address2}, {order.shippingLabel.city},\r\n                                                        {order.shippingLabel.region}, {order.shippingLabel.country}, {order.shippingLabel.postalCode}\r\n                                                    </p>\r\n                                                    {order.shippingLabel.phone &&\r\n                                                        (<p>\r\n                                                            <strong>Phone: </strong>\r\n                                                            {order.shippingLabel.phone}\r\n                                                        </p>)}\r\n                                                    {labelData && labelData.data.tracking &&\r\n                                                        (<p>\r\n                                                            <strong>Tracking Number: </strong>\r\n                                                            {labelData.data.tracking}\r\n                                                        </p>)}\r\n                                                </Col>\r\n\r\n                                                {userInfo && userInfo.isStaff &&\r\n                                                    <Col className=\"text-center\">\r\n                                                        {labelData && labelData.data.tracking\r\n                                                            ? <a href={`data:image/png;base64,${labelData.data.raw}`} target=\"_self\" type=\"image/png\">Right Click to Open Label</a>\r\n                                                            : (<>\r\n                                                                <Form.Control type=\"number\" value={size} placeholder=\"Weight in lbs\"\r\n                                                                    onChange={(e) => setSize(e.target.value)}\r\n                                                                >\r\n\r\n                                                                </Form.Control>\r\n                                                                <Button\r\n                                                                    disabled={labelMutation.isLoading || labelMutation.isSuccess || size === \"\"}\r\n                                                                    block\r\n                                                                    onClick={handleUPS}>\r\n                                                                    {labelMutation.isLoading ? \"Loading\" : \"Create UPS Label\"}\r\n                                                                </Button>\r\n                                                                <p className=\"text-danger\">{labelMutation.error && JSON.stringify(labelMutation.error)}</p>\r\n                                                            </>)\r\n                                                        }\r\n                                                    </Col>\r\n                                                }\r\n                                            </Row>\r\n\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>)}\r\n\r\n                                </Col>\r\n\r\n                            </Row>\r\n                        </>\r\n                    )\r\n            }\r\n        </Container >\r\n    )\r\n\r\n}\r\n\r\nexport default OrderScreen\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\UserListScreen.js",["604","605","606","607","608","609"],"import axios from 'axios'\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { Button, Col, Container, Form, InputGroup, Row, Table } from 'react-bootstrap'\r\nimport { useMutation, useQuery } from 'react-query'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { toUSD } from '../common'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { UserContext } from '../contexts/UserContext'\r\n\r\nconst UserListScreen = ({ history }) => {\r\n\r\n    // States and Contexts\r\n    const user = useContext(UserContext)\r\n    const [search, setSearch] = useState(\"\")\r\n    const [filtered, setFiltered] = useState([])\r\n    const [success, setSuccess] = useState(\"\")\r\n    const [error, setError] = useState(\"\")\r\n\r\n    // List Query\r\n    const { isLoading: qLoading, data, refetch } = useQuery(\"userListAdmin\", () => {\r\n        return axios.get(`/api/users`, {\r\n            headers: { Authorization: `Bearer ${user.token}` }\r\n        })\r\n    }, {\r\n        onError: (error) => {\r\n            setError(error.response && error.response.data.message\r\n                ? error.response.data.message : error.message)\r\n        }\r\n    })\r\n    const users = data && data.data\r\n\r\n    // Delete Mutation\r\n    // const { mutate, isLoading: mLoading, reset } = useMutation(userCode => {\r\n    //     return axios.delete(`/api/users/edit/${userCode}`, {\r\n    //         headers: { Authorization: `Bearer ${user.token}` }\r\n    //     })\r\n    // }, {\r\n    //     onSuccess: (data) => {\r\n    //         console.log(data.data)\r\n    //         setSuccess(`Deleted User ${data.data.userCode} Successfully`)\r\n    //         setError(\"\")\r\n    //         reset()\r\n    //         refetch()\r\n    //         window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n    //     },\r\n    //     onError: (error) => {\r\n    //         setError(error.response && error.response.data.message\r\n    //             ? error.response.data.message : error.message)\r\n    //     }\r\n    // })\r\n\r\n    // Filter Effect\r\n    useEffect(() => {\r\n        if (users && !search) setFiltered(users)\r\n        if (users && search)\r\n            setFiltered(users.filter(user =>\r\n                user.firstName.toLowerCase().includes(search.toLowerCase())\r\n                || user.lastName.toLowerCase().includes(search.toLowerCase())\r\n                || user.email.toLowerCase().includes(search.toLowerCase())\r\n            ))\r\n    }, [users, search])\r\n\r\n    // Handlers\r\n    // const createHandler = () => {\r\n    //     history.push('/admin/usernew')\r\n    // }\r\n    // const deleteHandler = (userCode) => {\r\n    //     if (window.confirm(`Delete User: ${userCode} \\nAre you sure?`)) mutate(userCode)\r\n    // }\r\n\r\n\r\n    return (\r\n        <Container className=\"my-5 pt-3 pb-5\">\r\n            <Row className='align-items-center'>\r\n                <Col className=\"my-auto\">\r\n                    <h2 className=\"my-0\">Users</h2>\r\n                </Col>\r\n                <Col className=\"my-auto\">\r\n                    <Form onSubmit={(e) => e.preventDefault()}>\r\n                        <InputGroup>\r\n                            <Form.Control placeholder=\"Search by Name or Email\" aria-label=\"Search by Name or email\"\r\n                                style={{ height: \"50px\" }}\r\n                                onChange={(e) => setSearch(e.target.value)}\r\n                            />\r\n                            <InputGroup.Append>\r\n                                <Button variant=\"primary\">\r\n                                    <i className=\"fas fa-search\"></i>\r\n                                </Button>\r\n                            </InputGroup.Append>\r\n                        </InputGroup>\r\n                    </Form>\r\n                </Col>\r\n                {/* <Col className=\"text-right\" xs=\"auto\">\r\n                    <Button variant=\"danger\" className='my-3' onClick={createHandler}>\r\n                        <i className='fas fa-plus'></i> New User\r\n                    </Button>\r\n                </Col> */}\r\n            </Row>\r\n            {error && <Message variant=\"danger\">{error}</Message>}\r\n            {success && <Message variant=\"success\">{success}</Message>}\r\n            {qLoading ? <Loader /> : (\r\n                <Table striped bordered hover responsive className='table-sm mt-3 mb-0'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>NAME</th>\r\n                            <th></th>\r\n                            <th>Email</th>\r\n                            <th>Staff</th>\r\n                            <th>Admin</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {users && filtered.map(user => (\r\n                            <tr key={user._id}>\r\n                                <td>{user.firstName + \" \" + user.lastName}</td>\r\n                                <td>{\"\"}</td>\r\n                                <td>{user.email}</td>\r\n                                <td>{\r\n                                    user.isStaff\r\n                                        ? <i className='fas fa-check text-success'></i>\r\n                                        : <i className='fas fa-times text-danger'></i>\r\n                                }</td>\r\n                                <td>\r\n                                    {user.isAdmin\r\n                                        ? <i className='fas fa-check text-success'></i>\r\n                                        : <i className='fas fa-times text-danger'></i>\r\n                                    }\r\n                                </td>\r\n                                {/* <td className=\"p-0 align-middle text-center\">\r\n                                    <LinkContainer to={`/admin/user/${user.userCode}/edit`} className=\"my-auto\">\r\n                                        <Button variant='dark' className='btn-sm'>\r\n                                            <i className='fas fa-edit'></i>\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                    <Button variant='danger' className='btn-sm ml-2'\r\n                                        onClick={() => deleteHandler(user.userCode)}>\r\n                                        <i className='fas fa-trash'></i>\r\n                                    </Button>\r\n                                </td> */}\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default UserListScreen\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\UserEditScreen.js",["610"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n    const userId = match.params.id\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isStaff, setIsStaff] = useState(false)\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = userUpdate\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET })\r\n            history.push('/admin/userlist')\r\n        } else {\r\n            if (userInfo && userInfo.isStaff) {\r\n                if (!user.name || user._id !== userId) {\r\n                    dispatch(getUserDetails(userId))\r\n                } else {\r\n                    setName(user.name)\r\n                    setEmail(user.email)\r\n                    setIsStaff(user.isStaff)\r\n                    setIsAdmin(user.isAdmin)\r\n                }\r\n            } else {\r\n                history.push('/login')\r\n            }\r\n        }\r\n        return () => { }\r\n    }, [user, userId, dispatch, successUpdate, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({ _id: userId, name, email, isAdmin, isStaff }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link to='/admin/userlist' className='btn btn-light my-3'> Go Back</Link>\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                {loadingUpdate && <Loader />}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control type='name' placeholder='Enter name' value={name} required\r\n                            onChange={(e) => setName(e.target.value)}>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control type='email' placeholder='Enter email' value={email} required\r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    {userInfo && userInfo.isAdmin &&\r\n                        (<>\r\n                            <Form.Group controlId='isStaff'>\r\n                                <Form.Check type='checkbox' label='Is Staff' checked={isStaff}\r\n                                    onChange={(e) => setIsStaff(e.target.checked)}>\r\n                                </Form.Check>\r\n                            </Form.Group>\r\n                            <Form.Group controlId='isAdmin'>\r\n                                <Form.Check type='checkbox' label='Is Admin' checked={isAdmin}\r\n                                    onChange={(e) => setIsAdmin(e.target.checked)}>\r\n                                </Form.Check>\r\n                            </Form.Group>\r\n                        </>)\r\n                    }\r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                    </Button>\r\n                </Form>\r\n\r\n            </FormContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserEditScreen\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\ProductListScreen.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\ProductEditScreen.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\OrderListScreen.js",["611"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col, Container, Form, InputGroup } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listOrders } from '../actions/orderActions'\r\nimport { UserContext } from '../contexts/UserContext'\r\n\r\nconst OrderListScreen = ({ history, match }) => {\r\n\r\n    const [search, setSearch] = useState(\"\")\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const user = useContext(UserContext)\r\n\r\n    useEffect(() => {\r\n        // if (userInfo && userInfo.isStaff) {\r\n        dispatch(listOrders(user.token))\r\n        // } else {\r\n        //     history.push('/login')\r\n        // }\r\n\r\n        return () => { }\r\n    }, [dispatch, history, userInfo])\r\n\r\n    const searchHandler = (e) => {\r\n        e.preventDefault()\r\n        alert(search)\r\n        // dispatch()\r\n    }\r\n    const printHandler = (e) => {\r\n        history.push('/admin/unshipped')\r\n    }\r\n\r\n    return (\r\n        <Container className=\"my-5 py-3\">\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>ORDERS</h1>\r\n                </Col>\r\n                <Col className=\"my-auto mr-4\">\r\n                    <Form onSubmit={searchHandler}>\r\n                        <InputGroup>\r\n                            <Form.Control\r\n                                placeholder=\"Search by Order ID\"\r\n                                aria-label=\"Search by Order ID\"\r\n                                style={{ height: \"50px\" }}\r\n                                onChange={(e) => setSearch(e.target.value)}\r\n                            />\r\n                            <InputGroup.Append>\r\n                                <Button variant=\"primary\" onClick={searchHandler}>\r\n                                    <i className=\"fas fa-search\"></i>\r\n                                </Button>\r\n                            </InputGroup.Append>\r\n                        </InputGroup>\r\n                    </Form>\r\n                </Col>\r\n                <Col className=\"text-right\" xs=\"auto\">\r\n                    <Button variant=\"danger\" className='my-3' onClick={printHandler}>\r\n                        Bulk Print Unshipped\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                : (\r\n                    <Table striped bordered hover responsive className='table-sm mt-3'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                {/* <th>USER</th> */}\r\n                                <th>DATE</th>\r\n                                <th>TOTAL</th>\r\n                                {/* <th>PAID</th> */}\r\n                                {/* <th>DELIVERED</th> */}\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {orders.map(order => (\r\n                                <tr key={order.id}>\r\n                                    <td>{order.id}</td>\r\n                                    {/* <td>{order.user && order.user.name}</td> */}\r\n                                    <td>{new Date(order.createdTime).toString().substring(4, 24)}</td>\r\n                                    {/* <td>{order.createdTime}</td> */}\r\n                                    <td>{Number(order.total / 100).toLocaleString(\"en-US\", { style: \"currency\", currency: \"USD\" })}</td>\r\n                                    {/* <td>{order.isPaid ? (\r\n                                        order.paidAt.substring(0, 10)\r\n                                    ) : (\r\n                                        <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                    )}\r\n                                    </td>\r\n                                    <td>{order.isDelivered ? (\r\n                                        order.deliveredAt.substring(0, 10)\r\n                                    ) : (\r\n                                        <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                    )}\r\n                                    </td> */}\r\n                                    <td>\r\n                                        <LinkContainer to={`/order/${order.id}`}>\r\n                                            <Button variant='light' className='btn-sm'>\r\n                                                Details\r\n                                            </Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\SearchBox.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\Paginate.js",["612","613"],"import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst Paginate = ({ pages, page, keyword, location, brands, grey }) => {\r\n\r\n    const BRAND = brands ? \"/brands/\" + brands : \"\"\r\n    const history = useHistory()\r\n    const nextHandler = () => {\r\n        history.push(location + \"/\" + keyword + \"/page/\" + (Number(page) + 1) + BRAND)\r\n    }\r\n    const prevHandler = () => {\r\n        history.push(location + \"/\" + keyword + \"/page/\" + (Number(page) - 1) + BRAND)\r\n    }\r\n\r\n    return (pages > 1 && (\r\n        <Pagination className=\"\">\r\n            <Pagination.Item to=\"\" disabled={page == 1}\r\n                onClick={prevHandler}\r\n            >&laquo;</Pagination.Item>\r\n            <Pagination.Item to=\"\" disabled>{page}</Pagination.Item>\r\n            <Pagination.Item to=\"\" disabled >of</Pagination.Item>\r\n            <Pagination.Item to=\"\" disabled>{pages}</Pagination.Item>\r\n            <Pagination.Item to=\"\" disabled={grey}\r\n                onClick={nextHandler}\r\n            >&raquo;</Pagination.Item>\r\n        </Pagination>\r\n    ))\r\n}\r\n\r\nexport default Paginate\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\ProductCarousel.js",[],["614","615"],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\Meta.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\SubNav.js",["616","617","618","619","620"],"import React from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\nimport '../styles/Header.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst SubNav = () => {\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <LinkContainer to='/categories' className=''>\r\n                <Nav.Link active={false} className='mx-4'>Categories</Nav.Link>\r\n            </LinkContainer>\r\n            <LinkContainer to='/products'>\r\n                <Nav.Link active={false} className='mx-4'>Products</Nav.Link>\r\n            </LinkContainer>\r\n            <LinkContainer to='/brands'>\r\n                <Nav.Link active={false} className='mx-4'>Brands</Nav.Link>\r\n            </LinkContainer>\r\n            <a href=\"http://www.coastairbrushtv.com/\"\r\n                className='nav-link mx-4'\r\n                target='_blank'\r\n            > Coast TV </a>\r\n        </ >\r\n    )\r\n}\r\n\r\nexport default SubNav\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\ProfileNav.js",["621","622","623","624"],"import React from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Navbar, Nav, Container, Col, Row } from 'react-bootstrap'\r\nimport '../styles/Header.css'\r\n\r\nconst ProfileNav = () => {\r\n\r\n\r\n    return (\r\n        <Navbar bg=\"white\" variant='light' expand=\"lg\" fill>\r\n            {/* <Nav fill>\r\n                <LinkContainer to='/aaa'>\r\n                    <Nav.Link active={false} className='text-center'>Order History</Nav.Link>\r\n                </LinkContainer>\r\n                <LinkContainer to='/bbb'>\r\n                    <Nav.Link active={false} className='text-center'>My Information</Nav.Link>\r\n                </LinkContainer>\r\n                <LinkContainer to='/ccc'>\r\n                    <Nav.Link active={false} className='text-center'>Wish List</Nav.Link>\r\n                </LinkContainer>\r\n            </Nav> */}\r\n            <Nav variant=\"pills\" fill >\r\n\r\n                <Nav.Link href=\"/home\">Active</Nav.Link>\r\n\r\n\r\n                <Nav.Link eventKey=\"link-1\">Loooonger NavLink</Nav.Link>\r\n\r\n\r\n                <Nav.Link eventKey=\"link-2\">Link</Nav.Link>\r\n\r\n\r\n                <Nav.Link eventKey=\"disabled\" disabled>\r\n                    Disabled\r\n                </Nav.Link>\r\n\r\n            </Nav>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default ProfileNav\r\n",["625","626"],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\OrderHistoryScreen.js",["627","628","629","630","631","632"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Table, Form, Button, Row, Col, Image, ListGroup, Container, Navbar, Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listMyOrders } from '../actions/orderActions'\r\nimport { UserNavBar } from '../components/UserNavBar'\r\nimport { envImage } from '../common'\r\n\r\nconst OrderHistoryScreen = ({ history }) => {\r\n\r\n    const { userInfo } = useSelector(state => state.userLogin)\r\n    const { loading, error, orders } = useSelector(state => state.orderListMy)\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            dispatch(listMyOrders())\r\n        }\r\n        return () => { }\r\n    }, [history, userInfo])\r\n\r\n\r\n\r\n    return (\r\n        <Container className=\"my-5\">\r\n            <UserNavBar></UserNavBar>\r\n            {loading ? <Loader />\r\n                : error ? <Message variant='danger'>{error}</Message>\r\n                    : orders && orders.length ? (\r\n                        <ListGroup >\r\n                            {orders.map(order => (\r\n                                <ListGroup.Item key={order.id} className=\"border-0 mb-3\">\r\n                                    <Row className=\"justify-content-center\">\r\n                                        <Col lg={4} className=\"text-center\">\r\n                                            {order.orderImage &&\r\n                                                <Image src={envImage(order.orderImage)}\r\n                                                    alt={order.lineItems.elements[0].name} fluid rounded\r\n                                                    style={{ height: \"200px\" }}\r\n                                                />}\r\n                                        </Col>\r\n                                        <Col lg={4} className=\"my-auto\">\r\n                                            <Row className=\"justify-content-center mt-3\">\r\n                                                <h4 className=\"text-danger\" style={{ letterSpacing: \"0px\" }}>\r\n                                                    {Number(order.total / 100).toLocaleString(\"en-US\", { style: \"currency\", currency: \"USD\" })}\r\n                                                </h4>\r\n                                            </Row>\r\n                                            <Row className=\"justify-content-center\">\r\n                                                <p>\r\n                                                    {Date(order.createdTime).substring(4, 24)}\r\n                                                </p>\r\n                                            </Row>\r\n                                            <Row className=\"justify-content-center\">\r\n                                                <LinkContainer to={`/order/${order.id}`}>\r\n                                                    <Button className='btn-sm' variant='dark'>View Details</Button>\r\n                                                </LinkContainer>\r\n                                            </Row>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))\r\n                            }\r\n                        </ListGroup>\r\n                    ) : (\r\n                        <div className=\"my-5\">\r\n                            <Message variant=\"success\" >No Orders Yet</Message>\r\n                        </div>\r\n                    )\r\n\r\n\r\n            }\r\n        </Container >\r\n    )\r\n}\r\n\r\nexport default OrderHistoryScreen\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\static\\ReturnStatic.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\static\\ShippingStatic.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\static\\InternationalStatic.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\static\\AboutStatic.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\CategoryScreen.js",["633","634","635","636","637","638","639"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getCategoryDetails, getCategoryProducts } from '../actions/categoryActions'\r\n\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, Breadcrumb, Container } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Suggested from '../components/Suggested'\r\nimport BreadCrumbs from '../components/BreadCrumbs'\r\nimport ProductDetailsCard from '../components/ProductDetailsCard'\r\nimport CategoryCard from '../components/CategoryCard'\r\n\r\n\r\nconst CategoryScreen = ({ match }) => {\r\n    const categoryId = match.params.id\r\n    const { loading, error, category } = useSelector(state => state.categoryDetails)\r\n    const { loading: loadingProducts, error: errorProducts, products } = useSelector(state => state.categoryProducts)\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n\r\n        dispatch(getCategoryDetails(match.params.id))\r\n        dispatch(getCategoryProducts(match.params.id))\r\n\r\n        return () => { }\r\n    }, [dispatch, match])\r\n\r\n    return (\r\n        <Container className=\"my-5\">\r\n            {loading || loadingProducts ? <Loader /> : error ? (<Message variant='danger'>{error}</Message>)\r\n                : (<>\r\n                    <BreadCrumbs category={category} />\r\n\r\n\r\n                    {category.children && category.children.length ? (\r\n                        <Row>\r\n                            {category.children.map(child => (\r\n                                <Col key={child.sectionID} xs='6' lg='3' className='p-4'>\r\n                                    <CategoryCard category={child} />\r\n                                </Col>\r\n                            ))}\r\n                        </Row>\r\n                    ) : (\r\n                        <>\r\n                            {products && products.length ? (\r\n                                <>\r\n                                    <Row>\r\n                                        {products.map(product => (\r\n                                            <Col key={product.pID} xs='6' lg='3' className=''>\r\n                                                <ProductDetailsCard product={product} />\r\n                                            </Col>\r\n                                        ))}\r\n                                    </Row>\r\n                                </>\r\n                            ) : (\r\n                                <Message variant=\"warning\" className=\"text-danger mb-5\">No products to show</Message>\r\n                            )}\r\n                            <h4 className=\"text-danger mb-4 my-5\">You May Also Like</h4>\r\n                            <Suggested />\r\n                        </>\r\n\r\n                    )\r\n\r\n                    }\r\n\r\n                </>)\r\n            }\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CategoryScreen\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\reducers\\categoryReducers.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\constants\\categoryConstants.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\actions\\categoryActions.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\ProductDetailsCard.js",["640","641"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, Breadcrumb } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport \"../styles/Cards.css\"\r\nimport { HeartList } from './HeartList'\r\nimport { envImage, firstImage } from '../common'\r\n\r\nconst ProductDetailsCard = ({ product }) => {\r\n    return (\r\n        <Link to={`/product/${product.pID}`} className=\"linkBox\">\r\n            <div className=\"mb-5 productDetailsCard\">\r\n                <p className=\"bg-danger text-light text-center py-1 mb-2\">\r\n                    {\"Product ID \" + product.pID}\r\n                </p>\r\n                <Image className=\"px-2\" style={{ width: \"100%\", height: \"200px\", objectFit: \"contain\" }}\r\n                    src={envImage(firstImage(product))}\r\n                />\r\n                <p className=\"text-center mt-4\">\r\n                    {product.pName}\r\n                </p>\r\n                <Row className=\"px-4 mb-3\">\r\n                    <Col className=\"p-0\">\r\n                        <h5 className=\"text-center text-danger m-0\">\r\n                            {product.optionGroup\r\n                                ? \"See Options\"\r\n                                : Number(product.pPrice / 100).toLocaleString(\"en-US\", { style: \"currency\", currency: \"USD\" })\r\n                            }\r\n                        </h5>\r\n                    </Col>\r\n                    <Col xs=\"auto\" className=\"px-2 my-auto\">\r\n                        {/* <i className='far fa-heart fa-1x text-danger'></i> */}\r\n                        <HeartList pID={product.pID} size=\"1x\" />\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default ProductDetailsCard\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\Suggested.js",["642","643","644"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport { getSuggestedProducts } from '../actions/productActions'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport ProductSimpleCard from './ProductSimpleCard'\r\n\r\nconst Suggested = () => {\r\n\r\n    const { loading, error, suggested } = useSelector(state => state.productSuggested)\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(getSuggestedProducts())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <>\r\n            {error ? (<Message variant='danger'>{error}</Message>)\r\n                : suggested && (\r\n                    <Row>\r\n                        {suggested.map(product => (\r\n                            <Col key={product.pID} xs='6' lg='3' className='px-4'>\r\n                                <ProductSimpleCard product={product} />\r\n                            </Col>\r\n                        ))}\r\n                    </Row>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Suggested\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\ProductSimpleCard.js",["645","646","647","648"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, Breadcrumb, Button } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport \"../styles/Cards.css\"\r\nimport { envImage, firstImage } from '../common'\r\n\r\n\r\nconst ProductSimpleCard = ({ product }) => {\r\n    return (\r\n        <Link to={`/product/${product.pID}`} className=\"linkBox\">\r\n            <div className=\"mb-5 productSimpleCard\">\r\n                <Image className=\"px-2\" style={{ width: \"100%\", height: \"200px\", objectFit: \"contain\" }}\r\n                    src={envImage(firstImage(product))}\r\n                />\r\n                <p className=\"text-center mt-4 text-danger\">\r\n                    {product.pName}\r\n                </p>\r\n                <div className=\"overlay\">\r\n                    <Button className=\"middle\">See More</Button>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default ProductSimpleCard\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\Breadcrumbs.js",["649","650","651","652","653"],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\BreadCrumbs.js",["654","655","656","657","658"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Breadcrumb } from 'react-bootstrap'\r\nimport { getCategoryDetails } from '../actions/categoryActions'\r\n\r\nconst BreadCrumbs = ({ category }) => {\r\n\r\n    return (\r\n        <>\r\n            {\r\n                category && category.breadcrumbs && category.breadcrumbs[0] && (\r\n                    <Breadcrumb className=\"mt-5\">\r\n                        <LinkContainer to=\"/\">\r\n                            <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n                        </LinkContainer>\r\n                        {category.breadcrumbs.slice(1).reverse().map(crumb => (\r\n                            <LinkContainer key={crumb.sectionID} to={`/category/${crumb.sectionID}`}>\r\n                                <Breadcrumb.Item>{crumb.sectionName}</Breadcrumb.Item>\r\n                            </LinkContainer>\r\n                        ))}\r\n                        {\r\n                            category.breadcrumbs[0] &&\r\n                            <Breadcrumb.Item active className=\"text-danger\">\r\n                                {category.breadcrumbs[0].sectionName}\r\n                            </Breadcrumb.Item>\r\n                        }\r\n                    </Breadcrumb>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BreadCrumbs\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\ProductCrumbs.js",["659"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Breadcrumb } from 'react-bootstrap'\r\nimport { getCategoryDetails } from '../actions/categoryActions'\r\n\r\nconst Breadcrumbs = ({ product }) => {\r\n\r\n    const { category } = useSelector(state => state.categoryDetails)\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        if (product) {\r\n            dispatch(getCategoryDetails(product.pSection))\r\n        }\r\n    }, [dispatch, product])\r\n\r\n    return (\r\n        <>\r\n            {\r\n                category && category.breadcrumbs && category.breadcrumbs[0] && (\r\n                    <Breadcrumb className=\"mb-4\">\r\n                        <LinkContainer to=\"/\">\r\n                            <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n                        </LinkContainer>\r\n                        {category.breadcrumbs.slice().reverse().map(crumb => (\r\n                            <LinkContainer key={crumb.sectionID} to={`/category/${crumb.sectionID}`}>\r\n                                <Breadcrumb.Item>{crumb.sectionName}</Breadcrumb.Item>\r\n                            </LinkContainer>\r\n                        ))}\r\n                        {\r\n                            <Breadcrumb.Item active className=\"text-danger\">\r\n                                {product.pName}\r\n                            </Breadcrumb.Item>\r\n                        }\r\n                    </Breadcrumb>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Breadcrumbs\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\TopThree.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\CategoryCard.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\ShippingMethodScreen.js",["660","661","662","663","664","665","666","667","668","669","670"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { Form, Button, Row, Col, ListGroup, Container } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingInfo, saveShippingMethod } from '../actions/cartActions'\r\nimport { SideCart } from '../components/SideCart'\r\nimport { CartContext, CartContextUpdate } from '../contexts/CartContext'\r\n\r\n\r\nconst ShippingMethodScreen = ({ history, location }) => {\r\n\r\n    const { cartItems, shippingInfo, shippingMethod } = useContext(CartContext)\r\n    const updateCart = useContext(CartContextUpdate)\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(shippingInfo).length == 0) history.push('/shipping')\r\n    }, [shippingInfo])\r\n\r\n    const emptyMethod = { method: \"\", price: 0 }\r\n    const subtotal = cartItems.reduce((acc, curr) => acc + curr.qty * curr.price, 0)\r\n    const fixedMethods = [\r\n        { method: \"UPS Ground\", price: subtotal < 10000 ? 900 : subtotal * 0.09, disabled: false },\r\n        { method: \"USPS (Coming Soon)\", price: subtotal < 10000 ? 900 : subtotal * 0.09, disabled: true },\r\n    ]\r\n\r\n    const [methods, setMethods] = useState(fixedMethods)\r\n    const [selected, setSelected] = useState(Object.keys(shippingMethod).length != 0 ? shippingMethod : emptyMethod)\r\n\r\n    console.log(selected)\r\n\r\n    const radioHandler = (e) => {\r\n        setSelected(methods[e.target.value])\r\n        updateCart({ type: \"ADD_SHIPPING_METHOD\", shippingMethod: fixedMethods[0] })\r\n    }\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <Container className=\"my-5 py-3\">\r\n            <Row>\r\n                <Col lg={6}>\r\n                    <ListGroup>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>\r\n                                    <strong>Contact:</strong> {shippingInfo.email}\r\n                                </Col>\r\n                                <Col xs=\"auto\" className=\"text-right\">\r\n                                    <Link to=\"/shipping\" className=\"text-muted\">Change</Link>\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>\r\n                                    <strong>Ship to: </strong>\r\n                                    <br /> {shippingInfo.address1}\r\n                                    {shippingInfo.address2 && <><br /> {shippingInfo.address2}</>}\r\n                                    <br />{shippingInfo.city}, {shippingInfo.region}, {shippingInfo.country}, {shippingInfo.postalCode}\r\n                                </Col>\r\n                                <Col xs=\"auto\" className=\"text-right\">\r\n                                    <Link to=\"/shipping\" className=\"text-muted\">Change</Link>\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n\r\n                    <h5 className=\"mt-5\">Shipping Method</h5>\r\n                    <Form onSubmit={submitHandler}>\r\n                        <ListGroup>\r\n                            {methods.map((method, index) => (\r\n                                <ListGroup.Item key={index}>\r\n                                    <Row >\r\n                                        <Col>\r\n                                            <Form.Check type=\"radio\" name=\"method\" id=\"standard\" value={index} label={method.method}\r\n                                                defaultChecked={method.method == selected.method} disabled={method.disabled}\r\n                                                onChange={radioHandler} />\r\n                                        </Col>\r\n                                        <Col xs=\"auto\" className=\"text-right\">\r\n                                            {Number(method.price / 100).toLocaleString(\"en-US\", { style: \"currency\", currency: \"USD\" })}\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                        <Button className=\"mt-5\" type=\"submit\"\r\n                            disabled={!selected.method}>\r\n                            Continue to Checkout\r\n                        </Button>\r\n                    </Form>\r\n\r\n                </Col>\r\n                <Col lg={6} className=\"pl-5 d-none d-lg-block\">\r\n                    <SideCart />\r\n                </Col>\r\n            </Row>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ShippingMethodScreen\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\SideCart.js",["671","672","673","674","675","676","677","678","679","680","681","682","683"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { Card, Button, Row, Col, ListGroup, Image } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { CartContext } from '../contexts/CartContext'\r\nimport { envImage, toUSD } from '../common'\r\n\r\n\r\nexport const SideCart = () => {\r\n\r\n    const { cartItems, shippingInfo, shippingMethod, discount } = useContext(CartContext)\r\n    const { discountAmount, discountType, discountDescription, discountExclude, categoryExclude, discountTotal } = discount\r\n\r\n\r\n    const subtotal = cartItems.reduce((acc, curr) => acc + curr.qty * curr.price, 0)\r\n    const taxRate = shippingInfo.taxRate\r\n    // const taxRate = 0\r\n    const shippingTotal = shippingMethod.price\r\n\r\n\r\n    var totalTax = (discountTotal ? subtotal - discountTotal : subtotal) * taxRate\r\n    var totalTotal = subtotal + totalTax + shippingTotal - (discountTotal ? discountTotal : 0)\r\n\r\n    const percentDiscount = (cents) => {\r\n        if (discountType === \"PERCENT\")\r\n            return (Number(cents) * discountAmount) / 100\r\n    }\r\n\r\n    return (\r\n        <Card>\r\n            <ListGroup className=\"border p-4\">\r\n                {cartItems.map((item) => (\r\n                    <ListGroup.Item key={item.name} className=\"border-0\">\r\n                        <Row className=\"m-0\">\r\n                            <Col xs=\"auto\" className=\"pl-0 my-auto\">\r\n                                ({item.qty})\r\n                            </Col>\r\n                            <Col xs={2} className=\"p-0\">\r\n                                <Image src={envImage(item.image)}\r\n                                    alt={item.name} fluid rounded\r\n                                // style={{ height: \"100px\" }} \r\n                                />\r\n                            </Col>\r\n                            <Col xs className=\"my-auto\">\r\n                                {item.name}\r\n                            </Col>\r\n                            <Col xs=\"auto\" className=\"pr-0 my-auto\">\r\n                                {toUSD(item.qty * item.price)}\r\n                            </Col>\r\n                        </Row>\r\n                        {discountType == \"PERCENT\" &&\r\n                            (discountExclude.split(',').map(item => item.trim()).includes(item.pID)\r\n                                ? <Row className=\"m-0\">\r\n                                    <Col xs=\"auto\" className=\"pl-0 my-auto text-danger\">\r\n                                        Discounts cannot be applied on this item\r\n                                    </Col>\r\n                                </Row>\r\n                                : categoryExclude.split(',').map(item => item.trim()).includes(String(item.category))\r\n                                    ? <Row className=\"m-0\">\r\n                                        <Col xs=\"auto\" className=\"pl-0 my-auto text-danger\">\r\n                                            Discounts cannot be applied on this item\r\n                                        </Col>\r\n                                    </Row>\r\n                                    : <Row className=\"m-0\">\r\n                                        <Col xs=\"auto\" className=\"pl-0 my-auto text-success\">\r\n                                            {discountDescription}\r\n                                        </Col>\r\n                                        <Col xs=\"auto\" className=\"ml-auto pr-0 my-auto text-success\">\r\n                                            -{toUSD(percentDiscount(item.qty * item.price))}\r\n                                        </Col>\r\n                                    </Row>)\r\n                        }\r\n                    </ListGroup.Item>\r\n                ))}\r\n                {discountType == \"FLAT\" &&\r\n                    <ListGroup.Item className=\"border-0 text-success\">\r\n                        <Row className=\"m-0\">\r\n                            <Col xs=\"auto\" className=\"pl-0 my-auto text-success\">\r\n                                {discountDescription}\r\n                            </Col>\r\n                            <Col xs=\"auto\" className=\"ml-auto pr-0 my-auto text-success\">\r\n                                -{toUSD(discountTotal)}\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                }\r\n\r\n                <div style={{ height: \"2px\" }} />\r\n\r\n                <ListGroup.Item className=\" border-bottom-0 border-left-0 border-right-0 pt-4\">\r\n                    <Row className=\"m-0\">\r\n                        <Col xs className=\"pl-0\">\r\n                            Subtotal:\r\n                        </Col>\r\n                        <Col xs=\"auto\" className=\"pr-0\">\r\n                            {toUSD(subtotal)}\r\n                        </Col>\r\n                    </Row>\r\n                </ListGroup.Item>\r\n                {Object.keys(discount).length != 0 &&\r\n                    <ListGroup.Item className=\"border-0\">\r\n                        <Row className=\"m-0\">\r\n                            <Col xs className=\"pl-0\">\r\n                                Discount Total:\r\n                            </Col>\r\n                            {/* <Col>{discountDescription}</Col> */}\r\n                            <Col xs=\"auto\" className=\"pr-0\">\r\n                                {\"(\" + toUSD(discountTotal) + \")\"}\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                }\r\n                {Object.keys(shippingInfo).length != 0 &&\r\n                    <ListGroup.Item className=\"border-0\">\r\n                        <Row className=\"m-0\">\r\n                            <Col xs className=\"pl-0\">\r\n                                Tax: ({taxRate * 100}%)\r\n                            </Col>\r\n                            <Col xs=\"auto\" className=\"pr-0\">\r\n                                {toUSD(totalTax)}\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                }\r\n                {Object.keys(shippingMethod).length != 0 &&\r\n                    <ListGroup.Item className=\"border-top-0 border-left-0 border-right-0 pb-4\">\r\n                        <Row className=\"m-0\">\r\n                            <Col xs className=\"pl-0\">\r\n                                Shipping:\r\n                            </Col>\r\n                            <Col xs=\"auto\" className=\"pr-0\">\r\n                                {toUSD(shippingMethod.price)}\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                }\r\n\r\n\r\n                <div style={{ height: \"2px\" }} />\r\n\r\n                {Object.keys(shippingMethod).length != 0 && Object.keys(shippingInfo).length != 0 &&\r\n                    <ListGroup.Item className=\"border-0 pt-4\">\r\n                        <Row className=\"m-0\">\r\n                            <Col xs className=\"pl-0\">\r\n                                Total:\r\n                            </Col>\r\n                            <Col xs=\"auto\" className=\"pr-0\">\r\n                                {toUSD(totalTotal)}\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                }\r\n            </ListGroup>\r\n        </Card >\r\n    )\r\n}\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\SearchScreen.js",["684","685","686","687","688","689","690","691","692","693","694","695","696","697","698","699"],"import React, { useEffect, useState } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col, Container, Card, Form, ListGroup } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\nimport ProductDetailsCard from '../components/ProductDetailsCard'\r\nimport Suggested from '../components/Suggested'\r\nimport BrandFilter from '../components/BrandFilter'\r\nimport { useQuery } from 'react-query'\r\nimport axios from 'axios'\r\n\r\nconst SearchScreen = ({ history, match }) => {\r\n    const pageNumber = match.params.pageNumber || 1\r\n    const keyword = match.params.keyword || \"ALL\"\r\n    const brands = match.params.brands || \"\"\r\n\r\n    // List Query\r\n    const { isFetching: loading, data, error, refetch } = useQuery(`productListAdmin`, () => {\r\n        return axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}&brands=${brands}`)\r\n    })\r\n    const products = data && data.data && data.data.products\r\n    const page = data && data.data && data.data.page\r\n    const pages = data && data.data && data.data.pages\r\n\r\n    useEffect(() => {\r\n        window.scrollTo({ top: 0, behavior: \"smooth\" })\r\n        refetch()\r\n    }, [keyword, pageNumber, brands])\r\n\r\n\r\n    return (\r\n        <Container className=\"my-5 pt-5\">\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error.response && error.response.data.message\r\n                ? error.response.data.message : error.message}</Message>\r\n                : (<>\r\n                    <Row>\r\n                        <Col xs={12} lg={3}>\r\n                            <BrandFilter keyword={keyword} brands={brands} pageNumber={pageNumber} />\r\n                        </Col>\r\n                        <Col xs={12} lg={9}>\r\n                            {products.length === 0\r\n                                ? <Message variant='warning'>\r\n                                    No Products Found {keyword && `that match keyword(s) \\\"${keyword}\\\"`} {brands && `under brand(s) ${brands}`}\r\n                                </Message>\r\n                                : <Row>\r\n                                    {products.map(product => (\r\n                                        <Col key={product.pID} xs='6' lg='3' className=''>\r\n                                            <ProductDetailsCard product={product} />\r\n                                        </Col>\r\n\r\n                                    ))}\r\n                                </Row>}\r\n\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"justify-content-center\">\r\n                        <Col xs=\"auto\">\r\n                            <Paginate pages={pages} page={page} location={\"/search\"} keyword={keyword} brands={brands} />\r\n                        </Col>\r\n                    </Row>\r\n                    <h4 className=\"text-danger mb-4 my-5\">You May Also Like</h4>\r\n                    <Suggested />\r\n                </>\r\n                )}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default SearchScreen\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\UserNavBar.js",["700"],"import React, { useContext } from 'react'\r\nimport { UserContext } from '../contexts/UserContext'\r\nimport { Navbar, Nav } from 'react-bootstrap'\r\nimport { useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nexport const UserNavBar = () => {\r\n\r\n    const user = useContext(UserContext)\r\n\r\n    return (\r\n        <Navbar variant='light' expand=\"lg\" collapseOnSelect className='pb-4 mb-5 pt-0'\r\n            style={{\r\n                borderStyle: \"none none solid none\",\r\n                borderWidth: \"1px\",\r\n            }}\r\n        >\r\n            <Nav className='mx-auto'>\r\n                <LinkContainer to='/wishlist'>\r\n                    <Nav.Link active={false} className='mx-2 mx-xl-4'>Wish List</Nav.Link>\r\n                </LinkContainer>\r\n                <LinkContainer to='/profile'>\r\n                    <Nav.Link active={false} className='mx-2 mx-xl-4'>About</Nav.Link>\r\n                </LinkContainer>\r\n                {user.isStaff\r\n                    ? <LinkContainer to='/admin/employeehistory'>\r\n                        <Nav.Link active={false} className='mx-2 mx-xl-4'>Employee History</Nav.Link>\r\n                    </LinkContainer>\r\n                    : <LinkContainer to='/orderhistory'>\r\n                        <Nav.Link active={false} className='mx-2 mx-xl-4'>Order History</Nav.Link>\r\n                    </LinkContainer>}\r\n            </Nav>\r\n        </Navbar >\r\n    )\r\n}\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\static\\ContactStatic.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\static\\CategoryStatic.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\ReportsScreen.js",["701","702","703","704","705","706","707","708","709","710","711","712","713"],"import React, { useEffect, useState } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col, Container, Form } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getAverage, getLowInv } from '../actions/reportActions'\r\nimport ReportCustomRange from '../components/ReportCustomRange'\r\nimport ReportDoD from '../components/ReportDoD'\r\nimport ReportMoM from '../components/ReportMoM'\r\nimport ReportYoY from '../components/ReportYoY'\r\nimport ReportLowInv from '../components/ReportLowInv'\r\n\r\nconst ReportScreen = ({ history, match }) => {\r\n\r\n\r\n    return (\r\n        <Container className=\"my-5\">\r\n            <Row className='pb-4'>\r\n                <h2 className=\"mx-auto\">Reports</h2>\r\n            </Row>\r\n\r\n            <ReportCustomRange />\r\n            <ReportDoD />\r\n            <ReportMoM />\r\n            <ReportYoY />\r\n            <ReportLowInv />\r\n\r\n        </Container >\r\n    )\r\n}\r\n\r\nexport default ReportScreen\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\reducers\\reportReducers.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\constants\\reportConstants.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\actions\\reportActions.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\ImageDisplay.js",["714","715","716","717"],"import React, { useState, useEffect } from 'react'\r\nimport { Image, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { envImage } from '../common'\r\n\r\n\r\nconst ImageDisplay = ({ product }) => {\r\n\r\n    var images = product.images\r\n    var thumbs = [images[0]]\r\n    var bigs = [images[0]]\r\n    images.sort((a, b) => {\r\n        if (a.imageNumber < b.imageNumber) return -1\r\n        if (a.imageNumber > b.imageNumber) return 1\r\n        if (a.imageType < b.imageType) return -1\r\n        if (a.imageType > b.imageType) return 1\r\n    })\r\n\r\n    for (var i = 1; i < images.length; i++) {\r\n        if (images[i].imageNumber == thumbs[thumbs.length - 1].imageNumber) {\r\n            bigs.pop()\r\n            bigs.push(images[i])\r\n            continue;\r\n        }\r\n        else {\r\n            thumbs.push(images[i])\r\n            bigs.push(images[i])\r\n        }\r\n    }\r\n\r\n    const [selected, setSelected] = useState(0)\r\n\r\n    useEffect(() => {\r\n\r\n    }, [])\r\n\r\n\r\n    if (product.images.length === 0) {\r\n        return (\r\n            <Image src={\"/static/sample.jpg\"} alt={product.pName} style={{ width: \"100%\", objectFit: \"contain\" }} />\r\n        )\r\n    }\r\n    return (\r\n        <>\r\n            <Image src={envImage(bigs[selected].imageSrc)} alt={product.pName}\r\n                style={{ width: \"100%\", objectFit: \"contain\", maxHeight: \"500px\" }}\r\n            />\r\n            {(images.length > 1) && <Row className=\"my-5 justify-content-center\" >\r\n                {thumbs.map((thumb, index) => (\r\n                    <Col key={index} xs=\"auto\"\r\n                    // className={selected == index && \"border border-danger\"}\r\n                    >\r\n                        <Image src={envImage(thumb.imageSrc)} alt={product.pName}\r\n                            style={{ height: \"75px\", textAlign: \"center\" }}\r\n                            onClick={() => setSelected(index)}\r\n                        />\r\n                    </Col>\r\n                ))}\r\n            </Row>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ImageDisplay\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\UploadsScreen.js",["718","719","720","721","722","723","724","725","726","727","728"],"import axios from 'axios'\r\nimport React, { useState, useEffect, useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Container, Modal } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\nimport ExampleDoc from '../assest/productdata.csv'\r\nimport { UserContext } from '../contexts/UserContext'\r\n\r\n\r\nconst UploadsScreen = () => {\r\n\r\n    const [uploading, setUploading] = useState(false)\r\n    const [success, setSuccess] = useState(\"\")\r\n    const [error, setError] = useState(\"\")\r\n\r\n    // const { userInfo } = useSelector(state => state.userLogin);\r\n    const user = useContext(UserContext)\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append('image', file)\r\n        setUploading(true)\r\n        setSuccess(\"\")\r\n        setError(\"\")\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    Authorization: `Bearer ${user.token}`,\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n            const { data } = await axios.post('/api/upload', formData, config)\r\n            setUploading(false)\r\n            setSuccess(data)\r\n        } catch (error) {\r\n            console.error(error)\r\n            setUploading(false)\r\n            setError(error)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Container className=\"my-5 py-3\">\r\n            <h2 className=\"mb-5\">Uploads</h2>\r\n            <Modal show={uploading} backdrop=\"static\" keyboard={false}>\r\n                <Modal.Header>\r\n                    <Modal.Title>Uploading File...\r\n                        <br /> Please do not close this window</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body> <Loader /> </Modal.Body>\r\n            </Modal>\r\n\r\n            <Form>\r\n                <Form.Group controlId='image'>\r\n                    <Form.Label>Product Images:</Form.Label>\r\n                    <Form.File id='image-file' label='Choose File' custom\r\n                        onChange={uploadFileHandler}>\r\n                    </Form.File>\r\n                    {uploading && <Loader />}\r\n                </Form.Group>\r\n                {success && `Successfully uploaded: prodimages/${success}`}\r\n                {error && `error: ${error}`}\r\n            </Form>\r\n\r\n\r\n\r\n            {/* <a href={ExampleDoc} download=\"bulkUpload.csv\" target='_blank'>\r\n                <Button className=\"\">CSV Template</Button>\r\n            </a> */}\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default UploadsScreen\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\ImageEditer.js",["729","730","731","732","733","734","735","736","737","738","739","740","741","742"],"import axios from 'axios'\r\nimport React, { useState, useEffect, useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Modal } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateImages } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\nimport { set } from 'mongoose'\r\nimport { useMutation, useQuery } from 'react-query'\r\nimport { UserContext } from '../contexts/UserContext'\r\n\r\n\r\nconst ImageEditer = ({ pID }) => {\r\n\r\n    const [thumb1, setThumb1] = useState(\"\")\r\n    const [full1, setFull1] = useState(\"\")\r\n    const [thumb2, setThumb2] = useState(\"\")\r\n    const [full2, setFull2] = useState(\"\")\r\n    const [thumb3, setThumb3] = useState(\"\")\r\n    const [full3, setFull3] = useState(\"\")\r\n    const [thumb4, setThumb4] = useState(\"\")\r\n    const [full4, setFull4] = useState(\"\")\r\n    const [thumb5, setThumb5] = useState(\"\")\r\n    const [full5, setFull5] = useState(\"\")\r\n    const [thumb6, setThumb6] = useState(\"\")\r\n    const [full6, setFull6] = useState(\"\")\r\n    const [thumb7, setThumb7] = useState(\"\")\r\n    const [full7, setFull7] = useState(\"\")\r\n    const [thumb8, setThumb8] = useState(\"\")\r\n    const [full8, setFull8] = useState(\"\")\r\n    const [thumb9, setThumb9] = useState(\"\")\r\n    const [full9, setFull9] = useState(\"\")\r\n    const [thumb10, setThumb10] = useState(\"\")\r\n    const [full10, setFull10] = useState(\"\")\r\n\r\n    const [images, setImages] = useState(\"\")\r\n    const [success, setSuccess] = useState(\"\")\r\n    const [error, setError] = useState(\"\")\r\n    const user = useContext(UserContext)\r\n\r\n    // const { loading, error, } = useSelector(state => state.productUpdateImages)\r\n    // const dispatch = useDispatch()\r\n\r\n    // Query: Product Details  \r\n    const { isLoading: queryLoading, refetch } = useQuery([\"productEdit\", pID], () => {\r\n        return axios.get(`/api/products/edit/${pID}`, {\r\n            headers: { Authorization: `Bearer ${user.token}` }\r\n        })\r\n    }, {\r\n        onSuccess: (data) => {\r\n            setImages(data.data.images)\r\n            console.log(images)\r\n        },\r\n        onError: (error) => {\r\n            setError(error.response && error.response.data.message\r\n                ? error.response.data.message : error.message)\r\n        }\r\n    })\r\n\r\n\r\n\r\n    // Mutation: Update Product\r\n    const { mutate, isLoading, reset } = useMutation(data => {\r\n        return axios.put(`/api/products/images/${pID}`, data, {\r\n            headers: { Authorization: `Bearer ${user.token}` }\r\n        })\r\n    }, {\r\n        onSuccess: (data) => {\r\n            console.log(data.data)\r\n            setSuccess(\"Product Update Success!\")\r\n            setError(\"\")\r\n            reset()\r\n            refetch()\r\n        },\r\n        onError: (error) => {\r\n            setError(error.response && error.response.data.message\r\n                ? error.response.data.message : error.message)\r\n        }\r\n    })\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(\"images:\", images)\r\n        images && images.forEach((image) => {\r\n            if (image.imageType === 0) {\r\n                if (image.imageNumber === 0) setThumb1(image.imageSrc)\r\n                if (image.imageNumber === 1) setThumb2(image.imageSrc)\r\n                if (image.imageNumber === 2) setThumb3(image.imageSrc)\r\n                if (image.imageNumber === 3) setThumb4(image.imageSrc)\r\n                if (image.imageNumber === 4) setThumb5(image.imageSrc)\r\n                if (image.imageNumber === 5) setThumb6(image.imageSrc)\r\n                if (image.imageNumber === 6) setThumb7(image.imageSrc)\r\n                if (image.imageNumber === 7) setThumb8(image.imageSrc)\r\n                if (image.imageNumber === 8) setThumb9(image.imageSrc)\r\n                if (image.imageNumber === 9) setThumb10(image.imageSrc)\r\n            }\r\n            if (image.imageType === 1) {\r\n                if (image.imageNumber === 0) setFull1(image.imageSrc)\r\n                if (image.imageNumber === 1) setFull2(image.imageSrc)\r\n                if (image.imageNumber === 2) setFull3(image.imageSrc)\r\n                if (image.imageNumber === 3) setFull4(image.imageSrc)\r\n                if (image.imageNumber === 4) setFull5(image.imageSrc)\r\n                if (image.imageNumber === 5) setFull6(image.imageSrc)\r\n                if (image.imageNumber === 6) setFull7(image.imageSrc)\r\n                if (image.imageNumber === 7) setFull8(image.imageSrc)\r\n                if (image.imageNumber === 8) setFull9(image.imageSrc)\r\n                if (image.imageNumber === 9) setFull10(image.imageSrc)\r\n            }\r\n        })\r\n        return () => {\r\n\r\n        }\r\n    }, [images])\r\n\r\n\r\n    function saveHandler() {\r\n        var arr = [];\r\n        [thumb1, thumb2, thumb3, thumb4, thumb5, thumb6, thumb7, thumb8, thumb9, thumb10].forEach((thumb, index) => {\r\n            if (thumb != \"\") arr.push({\r\n                \"imageProduct\": pID,\r\n                \"imageSrc\": thumb,\r\n                \"imageType\": 0,\r\n                \"imageNumber\": index\r\n            })\r\n        });\r\n        [full1, full2, full3, full4, full5, full6, full7, full8, full9, full10].forEach((full, index) => {\r\n            if (full != \"\") arr.push({\r\n                \"imageProduct\": pID,\r\n                \"imageSrc\": full,\r\n                \"imageType\": 1,\r\n                \"imageNumber\": index\r\n            })\r\n        })\r\n\r\n        console.log(arr)\r\n        // dispatch(updateImages(arr, pID))\r\n        mutate(arr)\r\n    }\r\n\r\n    return (\r\n        <Form>\r\n            <Row className=\"mb-3 mr-4\">\r\n                <Col xs={1} className=\"text-right\">\r\n                    #\r\n                </Col>\r\n                <Col>\r\n                    Thumbnail\r\n                </Col>\r\n                <Col>\r\n                    Full Size\r\n                </Col>\r\n            </Row>\r\n            {images &&\r\n                [{ thumb: thumb1, full: full1, setThumb: setThumb1, setFull: setFull1 },\r\n                { thumb: thumb2, full: full2, setThumb: setThumb2, setFull: setFull2 },\r\n                { thumb: thumb3, full: full3, setThumb: setThumb3, setFull: setFull3 },\r\n                { thumb: thumb4, full: full4, setThumb: setThumb4, setFull: setFull4 },\r\n                { thumb: thumb5, full: full5, setThumb: setThumb5, setFull: setFull5 },\r\n                { thumb: thumb6, full: full6, setThumb: setThumb6, setFull: setFull6 },\r\n                { thumb: thumb7, full: full7, setThumb: setThumb7, setFull: setFull7 },\r\n                { thumb: thumb8, full: full8, setThumb: setThumb8, setFull: setFull8 },\r\n                { thumb: thumb9, full: full9, setThumb: setThumb9, setFull: setFull9 },\r\n                { thumb: thumb10, full: full10, setThumb: setThumb10, setFull: setFull10 },\r\n                ].map((row, index) =>\r\n                (<Row key={index} className=\"mr-4\">\r\n                    <Col xs={1} className=\"text-right my-3\" >\r\n                        {index + 1}\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group controlId={`thumb_${index + 1}`}>\r\n\r\n                            <Form.Control type='text' placeholder='prodimages/example.png' value={row.thumb}\r\n                                onChange={(e) => row.setThumb(e.target.value)}>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group controlId={`full_${index + 1}`}>\r\n\r\n                            <Form.Control type='text' placeholder='prodimages/example.png' value={row.full}\r\n                                onChange={(e) => row.setFull(e.target.value)}>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>)\r\n                )\r\n            }\r\n            <Row className=\"justify-content-end mr-4 pr-3\">\r\n                {success && <h6 className=\"text-success mr-3 my-auto\">{success}</h6>}\r\n                {error && <h6 className=\"text-danger mr-3 my-auto\">{error}</h6>}\r\n                <Button disabled={isLoading || success}\r\n                    onClick={saveHandler}>\r\n                    Save\r\n                </Button>\r\n            </Row>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default ImageEditer\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\actions\\shippingActions.js",["743","744","745"],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\InventoryListScreen.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\HeartList.js",["746","747","748","749","750","751","752","753"],"import React, { useContext } from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { addWishListItem, removeWishListItem } from '../actions/userActions'\r\nimport { useLocation } from 'react-router'\r\nimport { UserContext, UserContextUpdate } from '../contexts/UserContext'\r\nimport { useMutation } from 'react-query'\r\nimport axios from 'axios'\r\n\r\nexport const HeartList = ({ pID, size }) => {\r\n    const { pathname } = useLocation()\r\n    const user = useContext(UserContext)\r\n    const updateUser = useContext(UserContextUpdate)\r\n\r\n\r\n    const { mutate, isLoading, reset } = useMutation((type) => {\r\n        if (type === \"ADD\") {\r\n            return axios.put(`/api/users/wish/${pID}`, \"\", {\r\n                headers: { Authorization: `Bearer ${user.token}` }\r\n            })\r\n        }\r\n        if (type === \"DELETE\") {\r\n            return axios.delete(`/api/users/wish/${pID}`, {\r\n                headers: { Authorization: `Bearer ${user.token}` }\r\n            })\r\n        }\r\n    }, {\r\n        onSuccess: (data) => {\r\n            console.log(data && data.data)\r\n            updateUser({ type: \"UPDATE\", payload: data.data.userData })\r\n        },\r\n        onError: (error) => {\r\n            console.log(error.response && error.response.data.message\r\n                ? error.response.data.message : error.message)\r\n        }\r\n    })\r\n\r\n    const addHandler = () => {\r\n        mutate(\"ADD\")\r\n    }\r\n    const removeHandler = () => {\r\n        mutate(\"DELETE\")\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {user._id\r\n                ? user.wishList.includes(pID)\r\n                    ? <i className={`fas fa-heart fa-${size} text-danger`}\r\n                        onClick={removeHandler}\r\n                        style={{ cursor: \"pointer\" }}>\r\n                    </i>\r\n\r\n                    : <i className={`far fa-heart fa-${size} text-danger`}\r\n                        onClick={addHandler}\r\n                        style={{ cursor: \"pointer\" }}>\r\n                    </i>\r\n                : <LinkContainer to={\"/login?redirect=\" + pathname} style={{ cursor: \"pointer\" }} >\r\n                    <i className={`far fa-heart fa-${size} text-danger`}></i>\r\n                </LinkContainer>\r\n            }\r\n        </div >\r\n    )\r\n}\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\UnshippedScreen.js",["754","755","756","757","758","759","760","761","762","763"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport { useQuery } from 'react-query'\r\nimport { Table, Button, Row, Col, Container, Form, InputGroup } from 'react-bootstrap'\r\nimport { useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { UserContext } from '../contexts/UserContext'\r\n\r\n\r\nconst OrderListScreen = ({ history, match }) => {\r\n\r\n    // const [number, setNumber] = useState(0)\r\n\r\n    // const dispatch = useDispatch()\r\n\r\n    // const orderList = useSelector(state => state.orderList)\r\n    // const { loading, error, orders } = orderList\r\n\r\n    const { userInfo } = useSelector(state => state.userLogin)\r\n\r\n    const user = useContext(UserContext)\r\n\r\n\r\n    useEffect(() => {\r\n        // if (userInfo && userInfo.isStaff) {\r\n        remove()\r\n        refetch()\r\n        // } else {\r\n        //     history.push('/login')\r\n        // }\r\n\r\n    }, [history, userInfo])\r\n\r\n    const { isLoading, isError, data, error, refetch, remove } = useQuery('unshipped', () =>\r\n        axios.get(`/api/orders/unshipped`)\r\n    )\r\n\r\n\r\n    return (\r\n        <Container className=\"my-5 \">\r\n            <h4 className=\"mb-5\">Unshipped Orders</h4>\r\n            {isLoading ? <Loader /> : isError ? <Message variant='danger'>{error}</Message>\r\n                : (<>\r\n                    {/* <p>{JSON.stringify(orders)}</p> */}\r\n                    {\r\n                        data && data.data.map(order => (\r\n                            <>\r\n                                <h5><Link to={`/order/${order.id}`}>{order.id}:</Link></h5>\r\n                                {order.lineItems &&\r\n                                    order.lineItems.map(line => (\r\n                                        <>{line.name != \"Website Shipping\" && <p>( {line.qty} ) {line.name}</p>}</>\r\n                                    ))\r\n                                }\r\n\r\n                            </>\r\n                        ))\r\n                    }\r\n\r\n                </>)}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\WishListScreen.js",["764"],"import React, { useContext } from 'react'\r\nimport { Col, Container, Row } from 'react-bootstrap'\r\nimport { useSelector } from 'react-redux'\r\nimport { UserNavBar } from '../components/UserNavBar'\r\nimport WishListCard from '../components/WishListCard'\r\nimport { UserContext } from '../contexts/UserContext'\r\n\r\nexport const WishListScreen = () => {\r\n\r\n    // const { userInfo } = useSelector(state => state.userLogin)\r\n\r\n    const user = useContext(UserContext)\r\n\r\n    return (\r\n        <Container className=\"my-5 py-3\">\r\n            <UserNavBar></UserNavBar>\r\n            <h2 className=\"mb-4\">Wish List</h2>\r\n            <Row>\r\n                {user && user.wishList\r\n                    ? user.wishList.map(item => (\r\n                        <Col xs={12} lg={4} key={item} >\r\n                            <WishListCard pID={item} />\r\n                        </Col>\r\n                        // <p>{item}</p>\r\n                    ))\r\n                    : <p>No Items in WishList </p>\r\n                }\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\nexport default WishListScreen\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\WishListCard.js",["765","766","767","768"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Image, Button, Row, Col } from 'react-bootstrap'\r\nimport \"../styles/Cards.css\"\r\nimport { useQuery } from 'react-query'\r\nimport axios from 'axios'\r\nimport { HeartList } from './HeartList'\r\nimport { envImage, firstImage } from '../common'\r\n\r\n\r\nconst WishListCard = ({ pID }) => {\r\n\r\n    const { isLoading, isError, data, error } = useQuery(pID, () =>\r\n        axios.get(`/api/products/details/${pID}`))\r\n    const product = data && data.data\r\n\r\n\r\n    return (\r\n        // <p>{JSON.stringify(product)}</p>\r\n        <>\r\n            {product &&\r\n                <Link to={`/product/${product.pID}`} className=\"linkBox\">\r\n                    <div className=\"mb-5 productDetailsCard\">\r\n                        <p className=\"bg-danger text-light text-center py-1 mb-2\">\r\n                            {\"Product ID \" + product.pID}\r\n                        </p>\r\n                        <Image className=\"px-2\" style={{ width: \"100%\", height: \"200px\", objectFit: \"contain\" }}\r\n                            src={envImage(firstImage(product))}\r\n                        />\r\n                        <p className=\"text-center mt-4\">\r\n                            {product.pName}\r\n                        </p>\r\n                        <Row className=\"px-4 mb-3\">\r\n                            <Col className=\"p-0\">\r\n                                <h5 className=\"text-center text-danger m-0\">\r\n                                    {product.pPrice\r\n                                        ? Number(product.pPrice / 100).toLocaleString(\"en-US\", { style: \"currency\", currency: \"USD\" })\r\n                                        : \"See Options\"\r\n                                    }\r\n                                </h5>\r\n                            </Col>\r\n                            <Col xs=\"auto\" className=\"px-2 my-auto\">\r\n                                {/* <i className='far fa-heart fa-1x text-danger'></i> */}\r\n                                <HeartList pID={product.pID} size=\"1x\" />\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Link>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WishListCard\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\EmployeeHistoryScreen.js",["769","770","771","772","773","774","775","776","777","778"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Table, Form, Button, Row, Col, Image, ListGroup, Container, Navbar, Nav, useAccordionToggle } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listMyOrders } from '../actions/orderActions'\r\nimport { UserNavBar } from '../components/UserNavBar'\r\nimport { useQuery } from 'react-query'\r\nimport axios from 'axios'\r\nimport { envImage } from '../common'\r\nimport { UserContext } from '../contexts/UserContext'\r\n\r\nconst EmployeeHistoryScreen = ({ history }) => {\r\n\r\n    const { userInfo } = useSelector(state => state.userLogin)\r\n    // const { loading, error, orders } = useSelector(state => state.orderListMy)\r\n    const user = useContext(UserContext)\r\n\r\n\r\n    const { isLoading, isError, data, error } = useQuery('employeeHistory', () =>\r\n        axios.get(`/api/orders/employee`,\r\n            { headers: { Authorization: `Bearer ${user.token}` } }))\r\n    const orders = data && data.data\r\n\r\n    // const dispatch = useDispatch()\r\n    // useEffect(() => {\r\n    //     if (userInfo) {\r\n    //         // dispatch(listMyOrders())\r\n    //         if (!userInfo.isStaff) history.push('/')\r\n\r\n    //     } else {\r\n    //         history.push('/login')\r\n    //     }\r\n    //     return () => { }\r\n    // }, [history, userInfo])\r\n\r\n\r\n\r\n    return (\r\n        <Container className=\"my-5\">\r\n            {/* <p>{JSON.stringify(data && data.data)}</p> */}\r\n            {/* <p>{JSON.stringify(orders)}</p> */}\r\n            <UserNavBar></UserNavBar>\r\n            {isLoading ? <Loader />\r\n                : isError ? <Message variant='danger'>{error.response && error.response.data.message\r\n                    ? error.response.data.message : error.message}</Message>\r\n                    : orders && orders.length ? (\r\n                        <ListGroup >\r\n                            {orders.map(order => (\r\n                                <ListGroup.Item key={order.id} className=\"border-0 mb-3\">\r\n                                    <Row className=\"justify-content-center\">\r\n                                        <Col lg={4} className=\"text-center\">\r\n                                            {order.orderImage &&\r\n                                                <Image src={envImage(order.orderImage)}\r\n                                                    alt={order.lineItems.elements[0].name} fluid rounded\r\n                                                    style={{ height: \"200px\" }}\r\n                                                />}\r\n                                        </Col>\r\n                                        <Col lg={4} className=\"my-auto\">\r\n                                            <Row className=\"justify-content-center mt-3\">\r\n                                                <h4 className=\"text-danger\" style={{ letterSpacing: \"0px\" }}>\r\n                                                    {Number(order.total / 100).toLocaleString(\"en-US\", { style: \"currency\", currency: \"USD\" })}\r\n                                                </h4>\r\n                                            </Row>\r\n                                            <Row className=\"justify-content-center\">\r\n                                                <p>\r\n                                                    {new Date(order.createdTime).toLocaleString()}\r\n                                                </p>\r\n                                            </Row>\r\n                                            <Row className=\"justify-content-center\">\r\n                                                <LinkContainer to={`/order/${order.id}`}>\r\n                                                    <Button className='btn-sm' variant='dark'>View Details</Button>\r\n                                                </LinkContainer>\r\n                                            </Row>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))\r\n                            }\r\n                        </ListGroup>\r\n                    ) : (\r\n                        <div className=\"my-5\">\r\n                            <Message variant=\"success\" >No Orders Yet</Message>\r\n                        </div>\r\n                    )\r\n\r\n\r\n            }\r\n        </Container >\r\n    )\r\n}\r\n\r\nexport default EmployeeHistoryScreen\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\contexts\\userContext.js",["779"],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\contexts\\UserContext.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\MainNav.js",["780","781","782","783","784","785"],"import React, { useContext } from 'react'\r\nimport { Nav, NavDropdown } from 'react-bootstrap'\r\nimport { useHistory, useLocation } from 'react-router'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { CartContext, CartContextUpdate } from '../contexts/CartContext'\r\nimport { UserContext, UserContextUpdate } from '../contexts/UserContext'\r\n\r\nconst MainNav = () => {\r\n\r\n    const history = useHistory()\r\n    const { pathname } = useLocation()\r\n    const user = useContext(UserContext)\r\n    const updateUser = useContext(UserContextUpdate)\r\n    const { cartItems, shippingInfo, shippingMethod } = useContext(CartContext)\r\n    const updateCart = useContext(CartContextUpdate)\r\n\r\n    const logoutHandler = () => {\r\n        updateUser({ type: \"LOGOUT\" })\r\n        updateCart({ type: \"RESET_CART\" })\r\n        history.push('/')\r\n    }\r\n\r\n    const cartLink = (cartItems, shippingInfo, shippingMethod) => {\r\n        if (pathname == '/payment' || pathname == '/shippingmethod' || pathname == '/shipping') return '/cart'\r\n        if (cartItems.length == 0) return '/cart'\r\n        if (Object.keys(shippingInfo).length == 0) return '/shipping'\r\n        if (Object.keys(shippingMethod).length == 0) return '/shippingmethod'\r\n        return '/payment'\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <LinkContainer exact to='/'>\r\n                <Nav.Link active={false} className='mx-2 mx-xl-4'>Home</Nav.Link>\r\n            </LinkContainer>\r\n            <LinkContainer to='/about'>\r\n                <Nav.Link active={false} className='mx-2 mx-xl-4'>About</Nav.Link>\r\n            </LinkContainer>\r\n            <LinkContainer to={cartLink(cartItems, shippingInfo, shippingMethod)} style={{ minWidth: \"100px\" }}>\r\n                <Nav.Link active={false} className='mx-2 mx-xl-4 text-center' >\r\n                    <i className='fas fa-shopping-cart mx-1'></i>\r\n                    Cart\r\n                    {cartItems.length > 0 && (<span className='badge badge-warning' id='lblCartCount'>{cartItems.length}</span>)}\r\n                </Nav.Link>\r\n            </LinkContainer>\r\n            {user._id ? (\r\n                <NavDropdown alignRight title={user.firstName} id='username'\r\n                    className='mx-2 mx-xl-4 my-3 my-lg-0'>\r\n                    <LinkContainer to='/profile'>\r\n                        <NavDropdown.Item active={false}>Profile</NavDropdown.Item>\r\n                    </LinkContainer>\r\n                    {user.isStaff\r\n                        ? (<>\r\n                            <LinkContainer to='/admin/userlist'>\r\n                                <NavDropdown.Item active={false}>User List</NavDropdown.Item>\r\n                            </LinkContainer>\r\n                            <LinkContainer to='/admin/orderlist'>\r\n                                <NavDropdown.Item active={false}>Order List</NavDropdown.Item>\r\n                            </LinkContainer>\r\n                            <LinkContainer to='/admin/productlist'>\r\n                                <NavDropdown.Item active={false}>Product Page List</NavDropdown.Item>\r\n                            </LinkContainer>\r\n                            <LinkContainer to='/admin/inventorylist'>\r\n                                <NavDropdown.Item active={false}>Inventory List</NavDropdown.Item>\r\n                            </LinkContainer>\r\n                            <LinkContainer to='/admin/categorylist'>\r\n                                <NavDropdown.Item active={false}>Category List</NavDropdown.Item>\r\n                            </LinkContainer>\r\n                            <LinkContainer to='/admin/brandlist'>\r\n                                <NavDropdown.Item active={false}>Brand List</NavDropdown.Item>\r\n                            </LinkContainer>\r\n                            <LinkContainer to='/admin/discountlist'>\r\n                                <NavDropdown.Item active={false}>Discount List</NavDropdown.Item>\r\n                            </LinkContainer>\r\n                            <LinkContainer to='/admin/reports'>\r\n                                <NavDropdown.Item active={false}>Custom Reports</NavDropdown.Item>\r\n                            </LinkContainer>\r\n                            <LinkContainer to='/admin/uploads'>\r\n                                <NavDropdown.Item active={false}>File Uploads</NavDropdown.Item>\r\n                            </LinkContainer>\r\n                        </>)\r\n                        : <LinkContainer to='/orderhistory'>\r\n                            <NavDropdown.Item active={false}>Order History</NavDropdown.Item>\r\n                        </LinkContainer>}\r\n                    <NavDropdown.Item onClick={logoutHandler}>\r\n                        Log Out\r\n                    </NavDropdown.Item>\r\n                </NavDropdown>\r\n            ) : (\r\n                <LinkContainer to='/login'>\r\n                    <Nav.Link active={false} href=\"/login\" className='loginButton px-4 ml-4 mb-3 mb-lg-0'>\r\n                        Login\r\n                    </Nav.Link>\r\n                </LinkContainer>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainNav\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\EditPassword.js",["786"],"import React, { useState, useContext } from 'react'\r\nimport { UserContext } from '../contexts/UserContext'\r\nimport { useMutation } from 'react-query'\r\nimport axios from 'axios'\r\n\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\n\r\nconst EditPassword = () => {\r\n\r\n    const user = useContext(UserContext)\r\n\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n\r\n    const [edit, setEdit] = useState(false)\r\n    const [message, setMessage] = useState('')\r\n    const [success, setSuccess] = useState('')\r\n\r\n    // Mutation\r\n    const { mutate, isLoading, reset } = useMutation(data => {\r\n        return axios.put('/api/users/profile', data, {\r\n            headers: { Authorization: `Bearer ${user.token}` }\r\n        })\r\n    }, {\r\n        onSuccess: (data) => {\r\n            setSuccess(data.data.message)\r\n            setMessage(\"\")\r\n            setEdit(false)\r\n            reset()\r\n\r\n        },\r\n        onError: (error) => {\r\n            setMessage(error.response && error.response.data.message\r\n                ? error.response.data.message : error.message)\r\n        }\r\n    })\r\n\r\n    const editHandler = () => {\r\n        setPassword(\"\")\r\n        setMessage(\"\")\r\n        setSuccess(\"\")\r\n        setConfirmPassword(\"\")\r\n        setEdit(true)\r\n    }\r\n\r\n    const passwordHandler = (e) => {\r\n        e.preventDefault()\r\n        if (password == confirmPassword) {\r\n            mutate({ password })\r\n        } else { // Passwords not match\r\n            setMessage(\"Passwords Do Not Match\")\r\n        }\r\n        setPassword(\"\")\r\n        setConfirmPassword(\"\")\r\n    }\r\n\r\n    if (isLoading) return <Loader />\r\n    else return (\r\n        <>\r\n            {success && <Message variant='success'>{success}</Message>}\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {edit ?\r\n                <Form className=\"my-3\" onSubmit={passwordHandler}>\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Control type='password' placeholder='New Password' required value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='confirmPassword'>\r\n                        <Form.Control type='password' placeholder='Confirm Password' value={confirmPassword} required\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Button id=\"passwordBtn\" variant='secondary' className=\"text-danger p-0\" type=\"submit\">\r\n                        Save\r\n                    </Button>\r\n                    <Button id=\"passwordBtn\" variant='secondary' className=\"p-0 ml-5\" type=\"button\"\r\n                        onClick={() => setEdit(false)}>\r\n                        Cancel\r\n                    </Button>\r\n                </Form>\r\n                :\r\n                <>\r\n                    <p className=\"mt-3 mb-3\">*********</p>\r\n                    <Button id=\"passwordBtn\" variant='secondary' className=\"text-danger p-0\"\r\n                        onClick={editHandler}>\r\n                        Edit\r\n                    </Button>\r\n                </>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditPassword\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\EditAddress.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\ProtectedRoute.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\StaffRoute.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\CategoryListScreen.js",["787"],"import axios from 'axios'\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { Button, Col, Container, Form, InputGroup, Row, Table } from 'react-bootstrap'\r\nimport { useMutation, useQuery } from 'react-query'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { UserContext } from '../contexts/UserContext'\r\n\r\nconst CategoryListScreen = ({ history }) => {\r\n\r\n    // States and Contexts\r\n    const user = useContext(UserContext)\r\n    const [search, setSearch] = useState(\"\")\r\n    const [filtered, setFiltered] = useState([])\r\n    const [success, setSuccess] = useState(\"\")\r\n    const [error, setError] = useState(\"\")\r\n\r\n    // List Query\r\n    const { isLoading: qLoading, data, refetch } = useQuery(\"categoryListAdmin\", () => {\r\n        return axios.get(`/api/categories`, {\r\n            headers: { Authorization: `Bearer ${user.token}` }\r\n        })\r\n    }, {\r\n        onError: (error) => {\r\n            setError(error.response && error.response.data.message\r\n                ? error.response.data.message : error.message)\r\n        }\r\n    })\r\n    const categories = data && data.data\r\n\r\n    // Delete Mutation\r\n    const { mutate, isLoading: mLoading, reset } = useMutation(sectionID => {\r\n        return axios.delete(`/api/categories/edit/${sectionID}`, {\r\n            headers: { Authorization: `Bearer ${user.token}` }\r\n        })\r\n    }, {\r\n        onSuccess: (data) => {\r\n            console.log(data.data)\r\n            setSuccess(`Deleted Category ${data.data.sectionID} Successfully`)\r\n            setError(\"\")\r\n            reset()\r\n            refetch()\r\n            window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n        },\r\n        onError: (error) => {\r\n            setError(error.response && error.response.data.message\r\n                ? error.response.data.message : error.message)\r\n        }\r\n    })\r\n\r\n    // Filter Effect\r\n    useEffect(() => {\r\n        if (categories && !search) setFiltered(categories)\r\n        if (categories && search)\r\n            setFiltered(categories.filter(cat =>\r\n                cat.sectionName.toLowerCase().includes(search.toLowerCase()) || cat.sectionID.toString().includes(search) || cat.topSection == search\r\n            ))\r\n    }, [categories, search])\r\n\r\n    // Handlers\r\n    const createHandler = () => {\r\n        history.push('/admin/categorynew')\r\n    }\r\n    const deleteHandler = (sectionID) => {\r\n        if (window.confirm(`Delete Category: ${sectionID} \\nAre you sure?`)) mutate(sectionID)\r\n    }\r\n\r\n\r\n    return (\r\n        <Container className=\"my-5 py-3\">\r\n            <Row className='align-items-center'>\r\n                <Col className=\"my-auto\">\r\n                    <h2 className=\"my-0\">Categories</h2>\r\n                </Col>\r\n                <Col className=\"my-auto\">\r\n                    <Form onSubmit={(e) => e.preventDefault()}>\r\n                        <InputGroup>\r\n                            <Form.Control placeholder=\"Search by Name or ID\" aria-label=\"Search by Name or ID\"\r\n                                style={{ height: \"50px\" }}\r\n                                onChange={(e) => setSearch(e.target.value)}\r\n                            />\r\n                            <InputGroup.Append>\r\n                                <Button variant=\"primary\">\r\n                                    <i className=\"fas fa-search\"></i>\r\n                                </Button>\r\n                            </InputGroup.Append>\r\n                        </InputGroup>\r\n                    </Form>\r\n                </Col>\r\n                <Col className=\"text-right\" xs=\"auto\">\r\n                    <Button variant=\"danger\" className='my-3' onClick={createHandler}>\r\n                        <i className='fas fa-plus'></i> New Category\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            {error && <Message variant=\"danger\">{error}</Message>}\r\n            {success && <Message variant=\"success\">{success}</Message>}\r\n            {qLoading || mLoading ? <Loader /> : (\r\n                <Table striped bordered hover responsive className='table-sm mt-3 mb-0'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>PARENT ID</th>\r\n                            <th>NAME</th>\r\n                            <th>DISPLAY</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {categories && filtered.map(category => (\r\n                            <tr key={category.sectionID}>\r\n                                <td>{category.sectionID}</td>\r\n                                <td>{category.topSection}</td>\r\n                                <td><Link to={`/category/${category.sectionID}`}>{category.sectionName}</Link></td>\r\n                                <td>\r\n                                    {!category.sectionDisabled\r\n                                        ? <i className='fas fa-check text-success'></i>\r\n                                        : <i className='fas fa-times text-danger'></i>\r\n                                    }\r\n                                </td>\r\n                                <td className=\"p-0 align-middle text-center\">\r\n                                    <LinkContainer to={`/admin/category/${category.sectionID}/edit`} className=\"my-auto\">\r\n                                        <Button variant='dark' className='btn-sm'>\r\n                                            <i className='fas fa-edit'></i>\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                    <Button variant='danger' className='btn-sm ml-2'\r\n                                        onClick={() => deleteHandler(category.sectionID)}>\r\n                                        <i className='fas fa-trash'></i>\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CategoryListScreen\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\CategoryEditScreen.js",["788","789","790","791","792"],"import axios from 'axios'\r\nimport { modelNames } from 'mongoose'\r\nimport React, { useContext, useEffect, useRef, useState } from 'react'\r\nimport { Button, Col, Container, Form, Row } from 'react-bootstrap'\r\nimport { useMutation, useQuery } from 'react-query'\r\nimport { Link } from 'react-router-dom'\r\nimport FormContainer from '../components/FormContainer'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { UserContext } from '../contexts/UserContext'\r\n\r\nconst CategoryEditScreen = ({ match }) => {\r\n\r\n    // States and Contexts\r\n    const ID = match.params.id\r\n    const user = useContext(UserContext)\r\n\r\n    const [sectionID, setSectionID] = useState(ID)\r\n    const [sectionName, setSectionName] = useState(\"\")\r\n    const [sectionWorkingName, setSectionWorkingName] = useState(\"\")\r\n    const [topSection, setTopSection] = useState(\"\")\r\n    const [sectionImage, setSectionImage] = useState(\"\")\r\n    const [sectionDisabled, setSectionDisabled] = useState(true)\r\n\r\n    const [edit, setEdit] = useState(false)\r\n    const [success, setSuccess] = useState(\"\")\r\n    const [error, setError] = useState(\"\")\r\n\r\n    // Query: Get Details\r\n    const { isLoading: queryLoading, error: queryError, refetch } = useQuery([`categoryEdit`, ID], () => {\r\n        return axios.get(`/api/categories/edit/${ID}`, {\r\n            headers: { Authorization: `Bearer ${user.token}` }\r\n        })\r\n    }, {\r\n        onSuccess: (data) => {\r\n            console.log(data.data)\r\n            setSectionName(data.data.sectionName)\r\n            setSectionWorkingName(data.data.sectionWorkingName)\r\n            setTopSection(data.data.topSection)\r\n            setSectionID(data.data.sectionID)\r\n            setSectionImage(data.data.sectionImage)\r\n            setSectionDisabled(data.data.sectionDisabled)\r\n        },\r\n        onError: (error) => {\r\n            setError(error.response && error.response.data.message\r\n                ? error.response.data.message : error.message)\r\n        }\r\n    })\r\n\r\n    // Mutation: Update Category \r\n    const { mutate, isLoading: mutationLoading, reset } = useMutation(data => {\r\n        return axios.put(`/api/categories/edit/${ID}`, data, {\r\n            headers: { Authorization: `Bearer ${user.token}` }\r\n        })\r\n    }, {\r\n        onSuccess: (data) => {\r\n            console.log(data.data)\r\n            setSuccess(\"Category Update Success\")\r\n            setError(\"\")\r\n            setEdit(false)\r\n            reset()\r\n            refetch()\r\n        },\r\n        onError: (error) => {\r\n            setError(error.response && error.response.data.message\r\n                ? error.response.data.message : error.message)\r\n        }\r\n    })\r\n\r\n    // Handlers\r\n    const saveHandler = (e) => {\r\n        e.preventDefault()\r\n        mutate({ sectionName, sectionID, topSection, sectionWorkingName, sectionImage, sectionDisabled })\r\n    }\r\n    const editHandler = (e) => {\r\n        e.preventDefault()\r\n        setEdit(true)\r\n        setError(\"\")\r\n        setSuccess(\"\")\r\n    }\r\n    const cancelHandler = () => {\r\n        setEdit(false)\r\n        refetch()\r\n    }\r\n\r\n    return (\r\n        <Container className=\"my-5 pb-5\">\r\n            <Row>\r\n                <Col xs={8}>\r\n                    <Row>\r\n                        <Col>\r\n                            <Link to=\"/admin/categorylist\">{\"<-- Category List\"}</Link>\r\n                        </Col>\r\n                        <Col className=\"text-right\">\r\n                            <Link to={`/category/${ID}`}>{\"Go to Category -->\"}</Link>\r\n                        </Col>\r\n                    </Row>\r\n                    <h2 className=\"mt-3\">Edit Category</h2>\r\n                    {queryLoading ? <Loader />\r\n                        : mutationLoading ? <Loader /> : (\r\n                            <Form className=\"my-5\" onSubmit={saveHandler}>\r\n                                {error && <Message variant=\"danger\">{error}</Message>}\r\n                                {success && <Message variant=\"success\">{success}</Message>}\r\n                                <Form.Group controlId='SectionID'>\r\n                                    <Form.Label>Category ID</Form.Label>\r\n                                    <Form.Control type='number' placeholder='Category ID' value={sectionID} required disabled={true}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group controlId='Name'>\r\n                                    <Form.Label>Name</Form.Label>\r\n                                    <Form.Control type='text' placeholder='Name' value={sectionName} required disabled={!edit}\r\n                                        onChange={(e) => setSectionName(e.target.value)}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group controlId='Internal Name'>\r\n                                    <Form.Label>Internal Name</Form.Label>\r\n                                    <Form.Control type='text' placeholder='Internal Name' value={sectionWorkingName} required disabled={!edit}\r\n                                        onChange={(e) => setSectionWorkingName(e.target.value)}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group controlId='ParentID'>\r\n                                    <Form.Label>Parent ID</Form.Label>\r\n                                    <Form.Control type='number' placeholder='Parent ID' value={topSection} required disabled={!edit}\r\n                                        onChange={(e) => setTopSection(e.target.value)}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group controlId='Image'>\r\n                                    <Form.Label>Image</Form.Label>\r\n                                    <Form.Control type='text' placeholder='Image URL' value={sectionImage} disabled={!edit}\r\n                                        onChange={(e) => setSectionImage(e.target.value)}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Check label=\"Display Category\" disabled={!edit}\r\n                                    type=\"checkbox\" id=\"disabledCheck\" className=\"mb-3\" custom\r\n                                    checked={!sectionDisabled}\r\n                                    onChange={(e) => setSectionDisabled(!e.target.checked)}>\r\n                                </Form.Check>\r\n                                {edit ? (\r\n                                    <>\r\n                                        <Button variant='secondary' className=\"text-danger p-0\" type=\"submit\">\r\n                                            Save\r\n                                        </Button>\r\n                                        <Button variant='secondary' className=\"p-0 ml-5\" type=\"button\"\r\n                                            onClick={cancelHandler}>\r\n                                            Cancel\r\n                                        </Button>\r\n                                    </>\r\n                                ) : (\r\n                                    <Button variant='secondary' className=\"text-danger p-0\" type=\"button\"\r\n                                        onClick={editHandler}>\r\n                                        Edit\r\n                                    </Button>\r\n                                )}\r\n                            </Form>\r\n                        )}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CategoryEditScreen\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\CategoryNewScreen.js",["793","794"],"import axios from 'axios'\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { Button, Col, Container, Form, Row } from 'react-bootstrap'\r\nimport { useMutation, useQuery } from 'react-query'\r\nimport { Link } from 'react-router-dom'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { UserContext } from '../contexts/UserContext'\r\n\r\nconst CategoryNewScreen = ({ history }) => {\r\n\r\n    // States and Contexts\r\n    const user = useContext(UserContext)\r\n\r\n    const [sectionID, setSectionID] = useState(\"\")\r\n    const [sectionName, setSectionName] = useState(\"\")\r\n    const [sectionWorkingName, setSectionWorkingName] = useState(\"\")\r\n    const [topSection, setTopSection] = useState(\"\")\r\n    const [sectionImage, setSectionImage] = useState(\"\")\r\n    const [sectionDisabled, setSectionDisabled] = useState(false)\r\n\r\n    const [available, setAvailable] = useState(true)\r\n    const [edit, setEdit] = useState(true)\r\n    const [success, setSuccess] = useState(\"\")\r\n    const [error, setError] = useState(\"\")\r\n\r\n    // Query: All Categories  \r\n    const { isLoading: queryLoading, data: queryData } = useQuery(\"categoryListAdmin\", () => {\r\n        return axios.get(`/api/categories`, {\r\n            headers: { Authorization: `Bearer ${user.token}` }\r\n        })\r\n    }, {\r\n        onError: (error) => {\r\n            setError(error.response && error.response.data.message\r\n                ? error.response.data.message : error.message)\r\n        }\r\n    })\r\n\r\n    // Mutation: New Category\r\n    const { mutate, isLoading: mutationLoading, reset } = useMutation(data => {\r\n        return axios.post(`/api/categories/edit/${sectionID}`, data, {\r\n            headers: { Authorization: `Bearer ${user.token}` }\r\n        })\r\n    }, {\r\n        onSuccess: (data) => {\r\n            console.log(data.data)\r\n            setSuccess(\"Category Creation Success!\")\r\n            setError(\"\")\r\n            setEdit(false)\r\n            reset()\r\n        },\r\n        onError: (error) => {\r\n            setError(error.response && error.response.data.message\r\n                ? error.response.data.message : error.message)\r\n        }\r\n    })\r\n\r\n    // Effect: Check if Category ID is already Taken\r\n    useEffect(() => {\r\n        if (queryData && queryData.data) {\r\n            const match = queryData.data.filter(category => category.sectionID == sectionID)\r\n            if (match.length) setAvailable(false)\r\n            else setAvailable(true)\r\n        }\r\n        if (sectionID == \"\") setAvailable(true)\r\n    }, [sectionID, queryData])\r\n\r\n    // Handlers\r\n    const saveHandler = (e) => {\r\n        e.preventDefault()\r\n        mutate({ sectionName, sectionID, topSection, sectionWorkingName, sectionImage, sectionDisabled })\r\n    }\r\n    const cancelHandler = (e) => {\r\n        e.preventDefault()\r\n        history.push('/admin/categorylist')\r\n    }\r\n\r\n    return (\r\n        <Container className=\"my-5 pb-5\">\r\n            <Row>\r\n                <Col xs={8}>\r\n                    <Row>\r\n                        <Col>\r\n                            <Link to=\"/admin/categorylist\">{\"<-- Category List\"}</Link>\r\n                        </Col>\r\n                    </Row>\r\n                    <h2 className=\"mt-3\">New Category</h2>\r\n                    {queryLoading ? <Loader />\r\n                        : mutationLoading ? <Loader /> : (\r\n                            <Form className=\"my-5\" onSubmit={saveHandler}>\r\n                                {error && <Message variant=\"danger\">{error}</Message>}\r\n                                {success && <Message variant=\"success\">{success}</Message>}\r\n                                <Form.Group controlId='SectionID'>\r\n                                    <Form.Label>Category ID</Form.Label>\r\n                                    <Form.Control type='number' placeholder='Category ID' value={sectionID} required disabled={!edit}\r\n                                        isInvalid={!available}\r\n                                        onChange={(e) => setSectionID(e.target.value)}>\r\n                                    </Form.Control>\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {sectionID} is already in use\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n                                <Form.Group controlId='Name'>\r\n                                    <Form.Label>Name</Form.Label>\r\n                                    <Form.Control type='text' placeholder='Name' value={sectionName} required disabled={!edit}\r\n                                        onChange={(e) => setSectionName(e.target.value)}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group controlId='Internal Name'>\r\n                                    <Form.Label>Internal Name</Form.Label>\r\n                                    <Form.Control type='text' placeholder='Internal Name' value={sectionWorkingName} required disabled={!edit}\r\n                                        onChange={(e) => setSectionWorkingName(e.target.value)}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group controlId='ParentID'>\r\n                                    <Form.Label>Parent ID</Form.Label>\r\n                                    <Form.Control type='number' placeholder='Parent ID' value={topSection} required disabled={!edit}\r\n                                        onChange={(e) => setTopSection(e.target.value)}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group controlId='Image'>\r\n                                    <Form.Label>Image</Form.Label>\r\n                                    <Form.Control type='text' placeholder='Image URL' value={sectionImage} disabled={!edit}\r\n                                        onChange={(e) => setSectionImage(e.target.value)}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Check type=\"checkbox\" id=\"disabledCheck\" className=\"mb-3\" custom\r\n                                    label=\"Disable Category\" disabled={!edit}\r\n                                    checked={sectionDisabled}\r\n                                    onChange={(e) => setSectionDisabled(e.target.checked)}>\r\n                                </Form.Check>\r\n                                {edit && (\r\n                                    <>\r\n                                        <Button variant='secondary' className=\"text-danger p-0\" type=\"submit\" disabled={!available}>\r\n                                            Save\r\n                                        </Button>\r\n                                        <Button variant='secondary' className=\"p-0 ml-5\" type=\"button\"\r\n                                            onClick={cancelHandler}>\r\n                                            Cancel\r\n                                        </Button>\r\n                                    </>\r\n                                )}\r\n                            </Form>\r\n                        )}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CategoryNewScreen\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\ProductNewScreen.js",["795","796"],"import axios from 'axios'\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { Button, Col, Container, Form, Row } from 'react-bootstrap'\r\nimport { useMutation, useQuery } from 'react-query'\r\nimport { Link } from 'react-router-dom'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { UserContext } from '../contexts/UserContext'\r\n\r\nconst ProductNewScreen = ({ history }) => {\r\n\r\n    // States and Contexts\r\n    const user = useContext(UserContext)\r\n\r\n    const [pID, setPID] = useState(\"\")\r\n    const [pName, setPName] = useState(\"\")\r\n    const [pSection, setPSection] = useState(\"\")\r\n    const [pManufacturer, setPManufacturer] = useState(\"\")\r\n    const [pDescription, setPDescription] = useState(\"\")\r\n    const [hasOptions, setHasOptions] = useState(false)\r\n    const [optionGroup, setOptionGroup] = useState(\"\")\r\n    const [pDisplay, setPDisplay] = useState(false)\r\n\r\n    const [available, setAvailable] = useState(true)\r\n    const [edit, setEdit] = useState(true)\r\n    const [success, setSuccess] = useState(\"\")\r\n    const [error, setError] = useState(\"\")\r\n\r\n    // Query: All Categories  \r\n    const { isLoading: queryLoading, data: queryData } = useQuery(\"productListAdmin\", () => {\r\n        return axios.get(`/api/products/PIDs`, {\r\n            headers: { Authorization: `Bearer ${user.token}` }\r\n        })\r\n    }, {\r\n        onError: (error) => {\r\n            setError(error.response && error.response.data.message\r\n                ? error.response.data.message : error.message)\r\n        }\r\n    })\r\n\r\n    // Mutation: New Product\r\n    const { mutate, isLoading: mutationLoading, reset } = useMutation(data => {\r\n        return axios.post(`/api/products/edit/${pID}`, data, {\r\n            headers: { Authorization: `Bearer ${user.token}` }\r\n        })\r\n    }, {\r\n        onSuccess: (data) => {\r\n            console.log(data.data)\r\n            setSuccess(\"Product Creation Success!\")\r\n            setError(\"\")\r\n            setEdit(false)\r\n            reset()\r\n        },\r\n        onError: (error) => {\r\n            setError(error.response && error.response.data.message\r\n                ? error.response.data.message : error.message)\r\n        }\r\n    })\r\n\r\n    // Effect: Check if Product ID is already Taken\r\n    useEffect(() => {\r\n        if (queryData && queryData.data.length > 0) {\r\n            const match = queryData.data.filter(product => product.pID == pID)\r\n            if (match.length) setAvailable(false)\r\n            else setAvailable(true)\r\n        }\r\n        if (pID == \"\") setAvailable(true)\r\n    }, [pID, queryData])\r\n\r\n\r\n    // Handlers\r\n    const saveHandler = (e) => {\r\n        e.preventDefault()\r\n        mutate({ pName, pID, pSection, pManufacturer, pDescription, pDisplay })\r\n    }\r\n    const cancelHandler = (e) => {\r\n        e.preventDefault()\r\n        history.push('/admin/productlist')\r\n    }\r\n\r\n    return (\r\n        <Container className=\"my-5 pb-5\">\r\n            <Row>\r\n                <Col xs={8}>\r\n                    <Row>\r\n                        <Col>\r\n                            <Link to=\"/admin/productlist\">{\"<-- Product Page List\"}</Link>\r\n                        </Col>\r\n                    </Row>\r\n                    <h2 className=\"mt-3\">New Product Page</h2>\r\n                    {queryLoading ? <Loader />\r\n                        : mutationLoading ? <Loader /> : (\r\n                            <Form className=\"my-5\" onSubmit={saveHandler}>\r\n                                {error && <Message variant=\"danger\">{error}</Message>}\r\n                                {success && <Message variant=\"success\">{success}</Message>}\r\n                                <Form.Group controlId='Product ID'>\r\n                                    <Form.Label>Product SKU</Form.Label>\r\n                                    <Form.Control type='text' placeholder='Product SKU' value={pID} required disabled={!edit}\r\n                                        isInvalid={!available}\r\n                                        onChange={(e) => setPID(e.target.value)}>\r\n                                    </Form.Control>\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {pID} is already in use\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n                                <Form.Group controlId='Name'>\r\n                                    <Form.Label>Name</Form.Label>\r\n                                    <Form.Control type='text' placeholder='Name' value={pName} required disabled={!edit}\r\n                                        onChange={(e) => setPName(e.target.value)}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group controlId='Category'>\r\n                                    <Form.Label>Category ID</Form.Label>\r\n                                    <Form.Control type='number' placeholder='Category' value={pSection} required disabled={!edit}\r\n                                        onChange={(e) => setPSection(e.target.value)}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group controlId='Manufacturer'>\r\n                                    <Form.Label>Brand ID</Form.Label>\r\n                                    <Form.Control type='number' placeholder='Manufacturer' value={pManufacturer} required disabled={!edit}\r\n                                        onChange={(e) => setPManufacturer(e.target.value)}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group controlId='Description'>\r\n                                    <Form.Label>Description</Form.Label>\r\n                                    <Form.Control as='textarea' placeholder='Description' value={pDescription} disabled={!edit}\r\n                                        onChange={(e) => setPDescription(e.target.value)}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Check type=\"checkbox\" id=\"optionsCheck\" className=\"mb-3\" custom\r\n                                    label=\"Has Options\" disabled={!edit}\r\n                                    checked={hasOptions}\r\n                                    onChange={(e) => setHasOptions(e.target.checked)}>\r\n                                </Form.Check>\r\n                                {hasOptions && <Form.Group controlId='hasOptions'>\r\n                                    <Form.Label>Option Group Text</Form.Label>\r\n                                    <Form.Control type='text' placeholder='ex: Select Size' value={optionGroup} required disabled={!edit}\r\n                                        onChange={(e) => setOptionGroup(e.target.value)}>\r\n                                    </Form.Control>\r\n                                </Form.Group>}\r\n                                <Form.Check type=\"checkbox\" id=\"displayCheck\" className=\"mb-3\" custom\r\n                                    label=\"Display Product\" disabled={!edit}\r\n                                    checked={pDisplay}\r\n                                    onChange={(e) => setPDisplay(e.target.checked)}>\r\n                                </Form.Check>\r\n                                {edit && (\r\n                                    <>\r\n                                        <Button variant='secondary' className=\"text-danger p-0\" type=\"submit\" disabled={!available}>\r\n                                            Save\r\n                                        </Button>\r\n                                        <Button variant='secondary' className=\"p-0 ml-5\" type=\"button\"\r\n                                            onClick={cancelHandler}>\r\n                                            Cancel\r\n                                        </Button>\r\n                                    </>\r\n                                )}\r\n                            </Form>\r\n                        )}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ProductNewScreen\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\InventoryEditScreen.js",["797","798"],"import axios from 'axios'\r\nimport React, { useContext, useState } from 'react'\r\nimport { Button, Col, Container, Form, Modal, Row } from 'react-bootstrap'\r\nimport { useMutation, useQuery } from 'react-query'\r\nimport { Link } from 'react-router-dom'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { UserContext } from '../contexts/UserContext'\r\n\r\nconst InventoryEditScreen = ({ match }) => {\r\n\r\n    // States and Contexts\r\n    const ID = match.params.id\r\n    const user = useContext(UserContext)\r\n\r\n    const [cloverID, setCloverID] = useState(\"\")\r\n    const [cloverName, setCloverName] = useState(\"\")\r\n    const [iParent, setParent] = useState(\"\")\r\n    const [iStock, setStock] = useState(0)\r\n    const [iPrice, setPrice] = useState(0)\r\n    const [iListPrice, setListPrice] = useState(0)\r\n    const [isOption, setIsOption] = useState(false)\r\n    const [iSelectionName, setSelectionName] = useState(\"\")\r\n    const [iSell, setSell] = useState(false)\r\n\r\n    const [edit, setEdit] = useState(false)\r\n    const [success, setSuccess] = useState(\"\")\r\n    const [error, setError] = useState(\"\")\r\n\r\n    // Query: Inventory Details  \r\n    const { isLoading: queryLoading, error: queryError, refetch } = useQuery([\"InventoryEdit\", ID], () => {\r\n        return axios.get(`/api/inventory/edit/${ID}`, {\r\n            headers: { Authorization: `Bearer ${user.token}` }\r\n        })\r\n    }, {\r\n        onSuccess: (data) => {\r\n            // console.log(data.data)\r\n            setCloverID(data.data.cloverID)\r\n            setCloverName(data.data.cloverName)\r\n            setParent(data.data.iParent)\r\n            setStock(data.data.iStock)\r\n            setPrice(data.data.iPrice)\r\n            setListPrice(data.data.iListPrice)\r\n            setIsOption(!!data.data.iSelectionName)\r\n            setSelectionName(data.data.iSelectionName)\r\n            setSell(data.data.iSell)\r\n        },\r\n        onError: (error) => {\r\n            setError(error.response && error.response.data.message\r\n                ? error.response.data.message : error.message)\r\n        }\r\n    })\r\n\r\n    // Mutation: Update Product\r\n    const { mutate, isLoading: mutationLoading, reset } = useMutation(data => {\r\n        return axios.put(`/api/inventory/edit/${ID}`, data, {\r\n            headers: { Authorization: `Bearer ${user.token}` }\r\n        })\r\n    }, {\r\n        onSuccess: (data) => {\r\n            // console.log(data.data)\r\n            setSuccess(\"Inventory Update Success!\")\r\n            setError(\"\")\r\n            setEdit(false)\r\n            reset()\r\n            refetch()\r\n        },\r\n        onError: (error) => {\r\n            setError(error.response && error.response.data.message\r\n                ? error.response.data.message : error.message)\r\n        }\r\n    })\r\n\r\n    // Handlers\r\n    const saveHandler = (e) => {\r\n        e.preventDefault()\r\n        mutate({ cloverID, cloverName, iParent, iStock, iPrice, iListPrice, iSelectionName, iSell })\r\n    }\r\n    const editHandler = (e) => {\r\n        e.preventDefault()\r\n        setEdit(true)\r\n        setError(\"\")\r\n        setSuccess(\"\")\r\n    }\r\n    const cancelHandler = () => {\r\n        setEdit(false)\r\n        refetch()\r\n    }\r\n\r\n    return (\r\n        <Container className=\"my-5 pb-5\">\r\n            <Row>\r\n                <Col xs={8}>\r\n                    <Row>\r\n                        <Col>\r\n                            <Link to=\"/admin/inventorylist\">{\"<-- Inventory List\"}</Link>\r\n                        </Col>\r\n                    </Row>\r\n                    <h2 className=\"mt-3\">Edit Inventory</h2>\r\n                    {queryLoading ? <Loader />\r\n                        : mutationLoading ? <Loader /> : (\r\n                            <Form className=\"my-5\" onSubmit={saveHandler}>\r\n                                {error && <Message variant=\"danger\">{error}</Message>}\r\n                                {success && <Message variant=\"success\">{success}</Message>}\r\n                                <Form.Group controlId='Product ID'>\r\n                                    <Form.Label>Clover ID</Form.Label>\r\n                                    <Form.Control type='text' placeholder='Clover ID' value={cloverID} required disabled={true}\r\n                                        onChange={(e) => setCloverID(e.target.value)}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group controlId='Name'>\r\n                                    <Form.Label>Clover Name</Form.Label>\r\n                                    <Form.Control type='text' placeholder='Name' value={cloverName} required disabled={!edit}\r\n                                        onChange={(e) => setCloverName(e.target.value)}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group controlId='Parent Page'>\r\n                                    <Form.Label>Parent Page</Form.Label>\r\n                                    <Form.Control type='text' placeholder='Parent Page' value={iParent} disabled={!edit}\r\n                                        onChange={(e) => setParent(e.target.value)}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group controlId='Stock'>\r\n                                    <Form.Label>Stock</Form.Label>\r\n                                    <Form.Control type='number' placeholder='Stock' value={iStock} required disabled={!edit}\r\n                                        onChange={(e) => setStock(e.target.value)}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group controlId='Price'>\r\n                                    <Form.Label>Price</Form.Label>\r\n                                    <Form.Control type='number' placeholder='Price' value={iPrice} required disabled={!edit}\r\n                                        onChange={(e) => setPrice(e.target.value)}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group controlId='List Price'>\r\n                                    <Form.Label>List Price</Form.Label>\r\n                                    <Form.Control type='number' placeholder='List Price' value={iListPrice} disabled={!edit}\r\n                                        onChange={(e) => setListPrice(e.target.value)}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Check type=\"checkbox\" id=\"optionsCheck\" className=\"mb-3\" custom\r\n                                    label=\"Is An Option\" disabled={!edit}\r\n                                    checked={isOption}\r\n                                    onChange={(e) => { setIsOption(e.target.checked); setSelectionName(null) }}>\r\n                                </Form.Check>\r\n                                {isOption && <Form.Group controlId='isOption'>\r\n                                    <Form.Label>Variation Name</Form.Label>\r\n                                    <Form.Control type='text' placeholder='ex: 2oz' value={iSelectionName} required disabled={!edit}\r\n                                        onChange={(e) => setSelectionName(e.target.value)}>\r\n                                    </Form.Control>\r\n                                </Form.Group>}\r\n                                <Form.Check type=\"checkbox\" id=\"sellCheck\" className=\"mb-3\" custom\r\n                                    label=\"Sell\" disabled={!edit}\r\n                                    checked={iSell}\r\n                                    onChange={(e) => setSell(e.target.checked)}>\r\n                                </Form.Check>\r\n                                {edit ? (\r\n                                    <>\r\n                                        <Button variant='secondary' className=\"text-danger p-0\" type=\"submit\">\r\n                                            Save\r\n                                        </Button>\r\n                                        <Button variant='secondary' className=\"p-0 ml-5\" type=\"button\"\r\n                                            onClick={cancelHandler}>\r\n                                            Cancel\r\n                                        </Button>\r\n                                    </>\r\n                                ) : (\r\n                                    <Button variant='secondary' className=\"text-danger p-0\" type=\"button\"\r\n                                        onClick={editHandler}>\r\n                                        Edit\r\n                                    </Button>\r\n                                )}\r\n                            </Form>\r\n                        )}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default InventoryEditScreen\r\n\r\n\r\n// const [imageEdit, setImageEdit] = useState(false)\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\InventoryNewScreen.js",["799","800","801"],"import axios from 'axios'\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { Button, Col, Container, Form, Row } from 'react-bootstrap'\r\nimport { useMutation, useQuery } from 'react-query'\r\nimport { Link } from 'react-router-dom'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { UserContext } from '../contexts/UserContext'\r\n\r\nconst InventoryNewScreen = ({ history }) => {\r\n\r\n    // States and Contexts\r\n    const user = useContext(UserContext)\r\n\r\n    // const [cloverID, setCloverID] = useState(\"\")\r\n    const [cloverName, setCloverName] = useState(\"\")\r\n    const [iParent, setParent] = useState(\"\")\r\n    const [iStock, setStock] = useState(0)\r\n    const [iPrice, setPrice] = useState(0)\r\n    const [iListPrice, setListPrice] = useState(0)\r\n    const [isOption, setIsOption] = useState(false)\r\n    const [iSelectionName, setSelectionName] = useState(\"\")\r\n    const [iSell, setSell] = useState(false)\r\n\r\n    const [available, setAvailable] = useState(true)\r\n    const [edit, setEdit] = useState(true)\r\n    const [success, setSuccess] = useState(\"\")\r\n    const [error, setError] = useState(\"\")\r\n\r\n\r\n    // Mutation: New Inv\r\n    const { mutate, isLoading: mutationLoading, reset } = useMutation(data => {\r\n        return axios.post(`/api/inventory/new`, data, {\r\n            headers: { Authorization: `Bearer ${user.token}` }\r\n        })\r\n    }, {\r\n        onSuccess: (data) => {\r\n            console.log(data.data)\r\n            setSuccess(`Inventory Item ${data.data.cloverID} Created!`)\r\n            setError(\"\")\r\n            setEdit(false)\r\n            reset()\r\n        },\r\n        onError: (error) => {\r\n            setError(error.response && error.response.data.message\r\n                ? error.response.data.message : error.message)\r\n        }\r\n    })\r\n\r\n\r\n    // Handlers\r\n    const saveHandler = (e) => {\r\n        e.preventDefault()\r\n        mutate({ cloverName, iParent, iStock, iPrice, iListPrice, iSelectionName, iSell })\r\n    }\r\n    const cancelHandler = (e) => {\r\n        e.preventDefault()\r\n        history.push('/admin/inventorylist')\r\n    }\r\n\r\n    return (\r\n        <Container className=\"my-5 pb-5\">\r\n            <Row>\r\n                <Col xs={8}>\r\n                    <Row>\r\n                        <Col>\r\n                            <Link to=\"/admin/inventorylist\">{\"<-- Inventory List\"}</Link>\r\n                        </Col>\r\n                    </Row>\r\n                    <h2 className=\"mt-3\">New Inventory Page</h2>\r\n                    {mutationLoading ? <Loader /> : (\r\n                        <Form className=\"my-5\" onSubmit={saveHandler}>\r\n                            {error && <Message variant=\"danger\">{error}</Message>}\r\n                            {success && <Message variant=\"success\">{success}</Message>}\r\n                            {/* <Form.Group controlId='Product ID'>\r\n                                    <Form.Label>Clover ID</Form.Label>\r\n                                    <Form.Control type='text' placeholder='Clover ID' value={cloverID} required disabled={true}\r\n                                        onChange={(e) => setCloverID(e.target.value)}>\r\n                                    </Form.Control>\r\n                                </Form.Group> */}\r\n                            <Form.Group controlId='Name'>\r\n                                <Form.Label>Clover Name</Form.Label>\r\n                                <Form.Control type='text' placeholder='Name' value={cloverName} required disabled={!edit}\r\n                                    onChange={(e) => setCloverName(e.target.value)}>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId='Parent Page'>\r\n                                <Form.Label>Parent Page</Form.Label>\r\n                                <Form.Control type='text' placeholder='Parent Page' value={iParent} required disabled={!edit}\r\n                                    onChange={(e) => setParent(e.target.value)}>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId='Stock'>\r\n                                <Form.Label>Stock</Form.Label>\r\n                                <Form.Control type='number' placeholder='Stock' value={iStock} required disabled={!edit}\r\n                                    onChange={(e) => setStock(e.target.value)}>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId='Price'>\r\n                                <Form.Label>Price (In Cents)</Form.Label>\r\n                                <Form.Control type='number' placeholder='Price (In Cents)' value={iPrice} required disabled={!edit}\r\n                                    onChange={(e) => setPrice(e.target.value)}>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId='List Price'>\r\n                                <Form.Label>List Price</Form.Label>\r\n                                <Form.Control type='number' placeholder='List Price' value={iListPrice} disabled={!edit}\r\n                                    onChange={(e) => setListPrice(e.target.value)}>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Check type=\"checkbox\" id=\"optionsCheck\" className=\"mb-3\" custom\r\n                                label=\"Is An Option\" disabled={!edit}\r\n                                checked={isOption}\r\n                                onChange={(e) => { setIsOption(e.target.checked); setSelectionName(null) }}>\r\n                            </Form.Check>\r\n                            {isOption && <Form.Group controlId='isOption'>\r\n                                <Form.Label>Variation Name</Form.Label>\r\n                                <Form.Control type='text' placeholder='ex: 2oz' value={iSelectionName} required disabled={!edit}\r\n                                    onChange={(e) => setSelectionName(e.target.value)}>\r\n                                </Form.Control>\r\n                            </Form.Group>}\r\n                            <Form.Check type=\"checkbox\" id=\"sellCheck\" className=\"mb-3\" custom\r\n                                label=\"Sell\" disabled={!edit}\r\n                                checked={iSell}\r\n                                onChange={(e) => setSell(e.target.checked)}>\r\n                            </Form.Check>\r\n                            {edit && (\r\n                                <>\r\n                                    <Button variant='secondary' className=\"text-danger p-0\" type=\"submit\" disabled={!available}>\r\n                                        Save\r\n                                    </Button>\r\n                                    <Button variant='secondary' className=\"p-0 ml-5\" type=\"button\"\r\n                                        onClick={cancelHandler}>\r\n                                        Cancel\r\n                                    </Button>\r\n                                </>\r\n                            )}\r\n                        </Form>\r\n                    )}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default InventoryNewScreen\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\BrandEditScreen.js",["802","803","804"],"import axios from 'axios'\r\nimport React, { useContext, useEffect, useRef, useState } from 'react'\r\nimport { Button, Col, Container, Form, Row } from 'react-bootstrap'\r\nimport { useMutation, useQuery } from 'react-query'\r\nimport { Link } from 'react-router-dom'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { UserContext } from '../contexts/UserContext'\r\n\r\nconst BrandEditScreen = ({ match }) => {\r\n\r\n    // States and Contexts\r\n    const ID = match.params.id\r\n    const user = useContext(UserContext)\r\n\r\n    const [brandID, setBrandID] = useState(ID)\r\n    const [brandName, setBrandName] = useState(\"\")\r\n\r\n    const [edit, setEdit] = useState(false)\r\n    const [success, setSuccess] = useState(\"\")\r\n    const [error, setError] = useState(\"\")\r\n\r\n    // Query: Get Details\r\n    const { isLoading: queryLoading, refetch } = useQuery([`brandEdit`, ID], () => {\r\n        return axios.get(`/api/brands/edit/${ID}`, {\r\n            headers: { Authorization: `Bearer ${user.token}` }\r\n        })\r\n    }, {\r\n        onSuccess: (data) => {\r\n            console.log(data.data)\r\n            setBrandName(data.data.brandName)\r\n        },\r\n        onError: (error) => {\r\n            setError(error.response && error.response.data.message\r\n                ? error.response.data.message : error.message)\r\n        }\r\n    })\r\n\r\n    // Mutation: Update Brand \r\n    const { mutate, isLoading: mutationLoading, reset } = useMutation(data => {\r\n        return axios.put(`/api/brands/edit/${ID}`, data, {\r\n            headers: { Authorization: `Bearer ${user.token}` }\r\n        })\r\n    }, {\r\n        onSuccess: (data) => {\r\n            console.log(data.data)\r\n            setSuccess(\"Brand Update Success\")\r\n            setError(\"\")\r\n            setEdit(false)\r\n            reset()\r\n            refetch()\r\n        },\r\n        onError: (error) => {\r\n            setError(error.response && error.response.data.message\r\n                ? error.response.data.message : error.message)\r\n        }\r\n    })\r\n\r\n    // Handlers\r\n    const saveHandler = (e) => {\r\n        e.preventDefault()\r\n        mutate({ brandName, brandID })\r\n    }\r\n    const editHandler = (e) => {\r\n        e.preventDefault()\r\n        setEdit(true)\r\n        setError(\"\")\r\n        setSuccess(\"\")\r\n    }\r\n    const cancelHandler = () => {\r\n        setEdit(false)\r\n        refetch()\r\n    }\r\n\r\n    return (\r\n        <Container className=\"my-5 pb-5\">\r\n            <Row>\r\n                <Col xs={8}>\r\n                    <Row>\r\n                        <Col>\r\n                            <Link to=\"/admin/brandlist\">{\"<-- Brand List\"}</Link>\r\n                        </Col>\r\n                        <Col className=\"text-right\">\r\n                            <Link to={`/brand/${ID}`}>{\"Go to Brand -->\"}</Link>\r\n                        </Col>\r\n                    </Row>\r\n                    <h2 className=\"mt-3\">Edit Brand</h2>\r\n                    {queryLoading ? <Loader />\r\n                        : mutationLoading ? <Loader /> : (\r\n                            <Form className=\"my-5\" onSubmit={saveHandler}>\r\n                                {error && <Message variant=\"danger\">{error}</Message>}\r\n                                {success && <Message variant=\"success\">{success}</Message>}\r\n                                <Form.Group controlId='SectionID'>\r\n                                    <Form.Label>Brand ID</Form.Label>\r\n                                    <Form.Control type='number' placeholder='Brand ID' value={brandID} required disabled={true}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group controlId='Name'>\r\n                                    <Form.Label>Brand Name</Form.Label>\r\n                                    <Form.Control type='text' placeholder='Name' value={brandName} required disabled={!edit}\r\n                                        onChange={(e) => setBrandName(e.target.value)}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                {edit ? (\r\n                                    <>\r\n                                        <Button variant='secondary' className=\"text-danger p-0\" type=\"submit\">\r\n                                            Save\r\n                                        </Button>\r\n                                        <Button variant='secondary' className=\"p-0 ml-5\" type=\"button\"\r\n                                            onClick={cancelHandler}>\r\n                                            Cancel\r\n                                        </Button>\r\n                                    </>\r\n                                ) : (\r\n                                    <Button variant='secondary' className=\"text-danger p-0\" type=\"button\"\r\n                                        onClick={editHandler}>\r\n                                        Edit\r\n                                    </Button>\r\n                                )}\r\n                            </Form>\r\n                        )}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default BrandEditScreen\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\DiscountListScreen.js",["805"],"import axios from 'axios'\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { Button, Col, Container, Form, InputGroup, Row, Table } from 'react-bootstrap'\r\nimport { useMutation, useQuery } from 'react-query'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { toUSD } from '../common'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { UserContext } from '../contexts/UserContext'\r\n\r\nconst DiscountListScreen = ({ history }) => {\r\n\r\n    // States and Contexts\r\n    const user = useContext(UserContext)\r\n    const [search, setSearch] = useState(\"\")\r\n    const [filtered, setFiltered] = useState([])\r\n    const [success, setSuccess] = useState(\"\")\r\n    const [error, setError] = useState(\"\")\r\n\r\n    // List Query\r\n    const { isLoading: qLoading, data, refetch } = useQuery(\"discountListAdmin\", () => {\r\n        return axios.get(`/api/discounts`, {\r\n            headers: { Authorization: `Bearer ${user.token}` }\r\n        })\r\n    }, {\r\n        onError: (error) => {\r\n            setError(error.response && error.response.data.message\r\n                ? error.response.data.message : error.message)\r\n        }\r\n    })\r\n    const discounts = data && data.data\r\n\r\n    // Delete Mutation\r\n    const { mutate, isLoading: mLoading, reset } = useMutation(discountCode => {\r\n        return axios.delete(`/api/discounts/edit/${discountCode}`, {\r\n            headers: { Authorization: `Bearer ${user.token}` }\r\n        })\r\n    }, {\r\n        onSuccess: (data) => {\r\n            console.log(data.data)\r\n            setSuccess(`Deleted Discount ${data.data.discountCode} Successfully`)\r\n            setError(\"\")\r\n            reset()\r\n            refetch()\r\n            window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n        },\r\n        onError: (error) => {\r\n            setError(error.response && error.response.data.message\r\n                ? error.response.data.message : error.message)\r\n        }\r\n    })\r\n\r\n    // Filter Effect\r\n    useEffect(() => {\r\n        if (discounts && !search) setFiltered(discounts)\r\n        if (discounts && search)\r\n            setFiltered(discounts.filter(cat =>\r\n                cat.discountCode.toLowerCase().includes(search.toLowerCase()) || cat.discountDescription.toLowerCase().includes(search.toLowerCase())\r\n            ))\r\n    }, [discounts, search])\r\n\r\n    // Handlers\r\n    const createHandler = () => {\r\n        history.push('/admin/discountnew')\r\n    }\r\n    const deleteHandler = (discountCode) => {\r\n        if (window.confirm(`Delete Discount: ${discountCode} \\nAre you sure?`)) mutate(discountCode)\r\n    }\r\n\r\n\r\n    return (\r\n        <Container className=\"my-5 pt-3 pb-5\">\r\n            <Row className='align-items-center'>\r\n                <Col className=\"my-auto\">\r\n                    <h2 className=\"my-0\">Discounts</h2>\r\n                </Col>\r\n                <Col className=\"my-auto\">\r\n                    <Form onSubmit={(e) => e.preventDefault()}>\r\n                        <InputGroup>\r\n                            <Form.Control placeholder=\"Search by Code or Description\" aria-label=\"Search by Name or ID\"\r\n                                style={{ height: \"50px\" }}\r\n                                onChange={(e) => setSearch(e.target.value)}\r\n                            />\r\n                            <InputGroup.Append>\r\n                                <Button variant=\"primary\">\r\n                                    <i className=\"fas fa-search\"></i>\r\n                                </Button>\r\n                            </InputGroup.Append>\r\n                        </InputGroup>\r\n                    </Form>\r\n                </Col>\r\n                <Col className=\"text-right\" xs=\"auto\">\r\n                    <Button variant=\"danger\" className='my-3' onClick={createHandler}>\r\n                        <i className='fas fa-plus'></i> New Discount\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            {error && <Message variant=\"danger\">{error}</Message>}\r\n            {success && <Message variant=\"success\">{success}</Message>}\r\n            {qLoading || mLoading ? <Loader /> : (\r\n                <Table striped bordered hover responsive className='table-sm mt-3 mb-0'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>CODE</th>\r\n                            <th>DESCRIPTION</th>\r\n                            <th>TYPE</th>\r\n                            <th>AMOUNT</th>\r\n                            <th>LIVE</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {discounts && filtered.map(discount => (\r\n                            <tr key={discount.discountCode}>\r\n                                <td>{discount.discountCode}</td>\r\n                                <td>{discount.discountDescription}</td>\r\n                                <td>{discount.discountType}</td>\r\n                                <td>{discount.discountType === \"FLAT\"\r\n                                    ? toUSD(discount.discountAmount)\r\n                                    : discount.discountAmount + \"%\"}</td>\r\n                                <td>\r\n                                    {discount.discountLive\r\n                                        ? <i className='fas fa-check text-success'></i>\r\n                                        : <i className='fas fa-times text-danger'></i>\r\n                                    }\r\n                                </td>\r\n                                <td className=\"p-0 align-middle text-center\">\r\n                                    <LinkContainer to={`/admin/discount/${discount.discountCode}/edit`} className=\"my-auto\">\r\n                                        <Button variant='dark' className='btn-sm'>\r\n                                            <i className='fas fa-edit'></i>\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                    <Button variant='danger' className='btn-sm ml-2'\r\n                                        onClick={() => deleteHandler(discount.discountCode)}>\r\n                                        <i className='fas fa-trash'></i>\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default DiscountListScreen\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\DiscountNewScreen.js",["806","807","808","809","810","811","812","813","814"],"import axios from 'axios'\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { Button, Col, Container, Form, Row } from 'react-bootstrap'\r\nimport { useMutation, useQuery } from 'react-query'\r\nimport { Link } from 'react-router-dom'\r\nimport { useHistory } from 'react-router'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { UserContext } from '../contexts/UserContext'\r\n\r\nconst DiscountNewScreen = ({ popup }) => {\r\n\r\n    const history = useHistory()\r\n    // States and Contexts\r\n    const user = useContext(UserContext)\r\n\r\n    const [discountCode, setDiscountCode] = useState(\"\")\r\n    const [discountDescription, setDiscountDescription] = useState(\"\")\r\n    const [discountType, setDiscountType] = useState(\"FLAT\")\r\n    const [discountAmount, setDiscountAmount] = useState(\"\")\r\n    const [discountLive, setDiscountLive] = useState(true)\r\n    const [discountExclude, setDiscountExclude] = useState(\"\")\r\n    const [categoryExclude, setCategoryExclude] = useState(\"\")\r\n\r\n    const [available, setAvailable] = useState(true)\r\n    const [edit, setEdit] = useState(true)\r\n    const [success, setSuccess] = useState(\"\")\r\n    const [error, setError] = useState(\"\")\r\n\r\n    // Query: All Categories  \r\n    const { isLoading: queryLoading, data: queryData } = useQuery(\"discountListAdmin\", () => {\r\n        return axios.get(`/api/discounts`, {\r\n            headers: { Authorization: `Bearer ${user.token}` }\r\n        })\r\n    }, {\r\n        onError: (error) => {\r\n            setError(error.response && error.response.data.message\r\n                ? error.response.data.message : error.message)\r\n        }\r\n    })\r\n\r\n    // Mutation: New Discount\r\n    const { mutate, isLoading: mutationLoading, reset } = useMutation(data => {\r\n        return axios.post(`/api/discounts/edit/${discountCode}`, data, {\r\n            headers: { Authorization: `Bearer ${user.token}` }\r\n        })\r\n    }, {\r\n        onSuccess: (data) => {\r\n            console.log(data.data)\r\n            setSuccess(\"Discount Creation Success!\")\r\n            setError(\"\")\r\n            setEdit(false)\r\n            reset()\r\n        },\r\n        onError: (error) => {\r\n            setError(error.response && error.response.data.message\r\n                ? error.response.data.message : error.message)\r\n        }\r\n    })\r\n\r\n    // Effect: Check if Discount ID is already Taken\r\n    useEffect(() => {\r\n        if (queryData && queryData.data) {\r\n            const match = queryData.data.filter(discount => discount.discountCode == discountCode)\r\n            if (match.length) setAvailable(false)\r\n            else setAvailable(true)\r\n        }\r\n        if (discountCode == \"\") setAvailable(true)\r\n    }, [discountCode, queryData])\r\n\r\n    // Handlers\r\n    const saveHandler = (e) => {\r\n        e.preventDefault()\r\n        mutate({ discountDescription, discountCode, discountAmount, discountType, discountLive, discountExclude, categoryExclude })\r\n    }\r\n    const cancelHandler = (e) => {\r\n        e.preventDefault()\r\n        history.push('/admin/discountlist')\r\n    }\r\n\r\n    const excludeHandler = (e) => {\r\n        setDiscountExclude(e.target.value)\r\n    }\r\n    const categoryHandler = (e) => {\r\n        setCategoryExclude(e.target.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <Container className={popup ? \"\" : \"my-5 pb-5\"}>\r\n            <Row>\r\n                <Col xs={popup ? 12 : 8}>\r\n                    <Row>\r\n                        <Col>\r\n                            <Link to=\"/admin/discountlist\">{\"<-- Discount List\"}</Link>\r\n                        </Col>\r\n                    </Row>\r\n                    <h2 className=\"mt-3\">New Discount</h2>\r\n                    {queryLoading ? <Loader />\r\n                        : mutationLoading ? <Loader /> : (\r\n                            <Form className=\"my-5\" onSubmit={saveHandler}>\r\n                                {error && <Message variant=\"danger\">{error}</Message>}\r\n                                {success && <Message variant=\"success\">{success}</Message>}\r\n                                <Form.Group controlId='SectionID'>\r\n                                    <Form.Label>Discount ID</Form.Label>\r\n                                    <Form.Control type='text' placeholder='Discount ID' value={discountCode} required disabled={!edit}\r\n                                        isInvalid={!available}\r\n                                        onChange={(e) => setDiscountCode(e.target.value.toUpperCase())}>\r\n                                    </Form.Control>\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {discountCode} is already in use\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n                                <Form.Group controlId='Name'>\r\n                                    <Form.Label>Description</Form.Label>\r\n                                    <Form.Control type='text' placeholder='Name' value={discountDescription} required disabled={!edit}\r\n                                        onChange={(e) => setDiscountDescription(e.target.value)}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group controlId='Type'>\r\n                                    <Form.Label>Type</Form.Label>\r\n                                    <Form.Control as='select' placeholder='Type' value={discountType} required disabled={!edit}\r\n                                        onChange={(e) => { setDiscountType(e.target.value); console.log(e.target.value) }}>\r\n                                        <option value=\"PERCENT\">PERCENT</option>\r\n                                        <option value=\"FLAT\">FLAT</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group controlId='Amount Off'>\r\n                                    <Form.Label>{discountType == 'FLAT' ? 'Amount Off (Cents)' : \"Percent Off\"}</Form.Label>\r\n                                    <Form.Control type='number' placeholder={discountType == 'FLAT' ? 'Amount Off In Cents' : \"Percent Off\"}\r\n                                        value={discountAmount} required disabled={!edit}\r\n                                        onChange={(e) => setDiscountAmount(e.target.value)}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group controlId='Exclude'>\r\n                                    <Form.Label>{discountType == 'FLAT' ? \"Minimun Order (Cents)\" : \"Excluded Products\"}</Form.Label>\r\n                                    <Form.Control\r\n                                        as={discountType == 'FLAT' ? \"input\" : 'textarea'}\r\n                                        type={discountType == 'FLAT' ? \"number\" : 'textarea'}\r\n                                        placeholder={discountType == 'FLAT' ? \"Minimun Order Value (Cents)\"\r\n                                            : `Product SKU's Seperated by Commas, No Spaces\r\n                                        ex: T6131,126823,50-0231`}\r\n                                        value={discountExclude} disabled={!edit}\r\n                                        onChange={excludeHandler}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                {discountType == 'PERCENT' &&\r\n                                    <Form.Group controlId='CategoryExclude'>\r\n                                        <Form.Label>Excluded Categories</Form.Label>\r\n                                        <Form.Control\r\n                                            as='textarea'\r\n                                            type='textarea'\r\n                                            placeholder={`Category ID's Seperated by Commas, No Spaces\r\n                                        ex: 3,56,217`}\r\n                                            value={categoryExclude} disabled={!edit}\r\n                                            onChange={categoryHandler}>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                }\r\n                                <Form.Check label=\"Discount Live\" disabled={!edit}\r\n                                    type=\"checkbox\" id=\"disabledCheck\" className=\"mb-3\" custom\r\n                                    checked={discountLive}\r\n                                    onChange={(e) => setDiscountLive(e.target.checked)}>\r\n                                </Form.Check>\r\n                                {edit && (\r\n                                    <>\r\n                                        <Button variant='secondary' className=\"text-danger p-0\" type=\"submit\" disabled={!available}>\r\n                                            Save\r\n                                        </Button>\r\n                                        <Button variant='secondary' className=\"p-0 ml-5\" type=\"button\"\r\n                                            onClick={popup ? () => { } : cancelHandler}>\r\n                                            Cancel\r\n                                        </Button>\r\n                                    </>\r\n                                )}\r\n                            </Form>\r\n                        )}\r\n                </Col>\r\n            </Row>\r\n        </Container >\r\n    )\r\n}\r\n\r\nexport default DiscountNewScreen\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\DiscountEditScreen.js",["815","816","817","818","819","820","821"],"import axios from 'axios'\r\nimport React, { useContext, useState } from 'react'\r\nimport { Button, Col, Container, Form, Row } from 'react-bootstrap'\r\nimport { useMutation, useQuery } from 'react-query'\r\nimport { Link } from 'react-router-dom'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { UserContext } from '../contexts/UserContext'\r\n\r\nconst DiscountEditScreen = ({ match }) => {\r\n\r\n    // States and Contexts\r\n    const ID = match.params.id\r\n    const user = useContext(UserContext)\r\n\r\n    const [discountCode, setDiscountCode] = useState(ID)\r\n    const [discountDescription, setDiscountDescription] = useState(\"\")\r\n    const [discountType, setDiscountType] = useState(\"\")\r\n    const [discountAmount, setDiscountAmount] = useState(\"\")\r\n    const [discountLive, setDiscountLive] = useState(true)\r\n    const [discountExclude, setDiscountExclude] = useState(\"\")\r\n    const [categoryExclude, setCategoryExclude] = useState(\"\")\r\n\r\n    const [edit, setEdit] = useState(false)\r\n    const [success, setSuccess] = useState(\"\")\r\n    const [error, setError] = useState(\"\")\r\n\r\n    // Query: Get Details\r\n    const { isLoading: queryLoading, refetch } = useQuery([`discountEdit`, ID], () => {\r\n        return axios.get(`/api/discounts/edit/${ID}`, {\r\n            headers: { Authorization: `Bearer ${user.token}` }\r\n        })\r\n    }, {\r\n        onSuccess: (data) => {\r\n            console.log(data.data)\r\n            setDiscountDescription(data.data.discountDescription)\r\n            setDiscountType(data.data.discountType)\r\n            setDiscountAmount(data.data.discountAmount)\r\n            setDiscountCode(data.data.discountCode)\r\n            setDiscountLive(data.data.discountLive)\r\n            setDiscountExclude(data.data.discountExclude)\r\n            setCategoryExclude(data.data.categoryExclude)\r\n        },\r\n        onError: (error) => {\r\n            setError(error.response && error.response.data.message\r\n                ? error.response.data.message : error.message)\r\n        }\r\n    })\r\n\r\n    // Mutation: Update Discount \r\n    const { mutate, isLoading: mutationLoading, reset } = useMutation(data => {\r\n        return axios.put(`/api/discounts/edit/${ID}`, data, {\r\n            headers: { Authorization: `Bearer ${user.token}` }\r\n        })\r\n    }, {\r\n        onSuccess: (data) => {\r\n            console.log(data.data)\r\n            setSuccess(\"Discount Update Success\")\r\n            setError(\"\")\r\n            setEdit(false)\r\n            reset()\r\n            refetch()\r\n        },\r\n        onError: (error) => {\r\n            setError(error.response && error.response.data.message\r\n                ? error.response.data.message : error.message)\r\n        }\r\n    })\r\n\r\n    // Handlers\r\n    const saveHandler = (e) => {\r\n        e.preventDefault()\r\n        mutate({\r\n            discountDescription, discountCode, discountAmount, discountType, discountLive,\r\n            discountExclude, categoryExclude\r\n        })\r\n    }\r\n    const editHandler = (e) => {\r\n        e.preventDefault()\r\n        setEdit(true)\r\n        setError(\"\")\r\n        setSuccess(\"\")\r\n    }\r\n    const cancelHandler = () => {\r\n        setEdit(false)\r\n        refetch()\r\n    }\r\n    const excludeHandler = (e) => {\r\n        setDiscountExclude(e.target.value)\r\n    }\r\n    const categoryHandler = (e) => {\r\n        setCategoryExclude(e.target.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <Container className=\"my-5 pb-5\">\r\n            <Row>\r\n                <Col xs={8}>\r\n                    <Row>\r\n                        <Col>\r\n                            <Link to=\"/admin/discountlist\">{\"<-- Discount List\"}</Link>\r\n                        </Col>\r\n                        <Col className=\"text-right\">\r\n                            {/* <Link to={`/discount/${ID}`}>{\"Go to Discount -->\"}</Link> */}\r\n                        </Col>\r\n                    </Row>\r\n                    <h2 className=\"mt-3\">Edit Discount</h2>\r\n                    {queryLoading ? <Loader />\r\n                        : mutationLoading ? <Loader /> : (\r\n                            <Form className=\"my-5\" onSubmit={saveHandler}>\r\n                                {error && <Message variant=\"danger\">{error}</Message>}\r\n                                {success && <Message variant=\"success\">{success}</Message>}\r\n                                <Form.Group controlId='SectionID'>\r\n                                    <Form.Label>Discount CODE</Form.Label>\r\n                                    <Form.Control type='text' placeholder='Discount ID' value={discountCode} required disabled={true}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group controlId='Name'>\r\n                                    <Form.Label>Description</Form.Label>\r\n                                    <Form.Control type='text' placeholder='Name' value={discountDescription} disabled={!edit}\r\n                                        onChange={(e) => setDiscountDescription(e.target.value)}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group controlId='Type'>\r\n                                    <Form.Label>Type</Form.Label>\r\n                                    <Form.Control as='select' placeholder='Type' value={discountType} required disabled={!edit}\r\n                                        onChange={(e) => { setDiscountType(e.target.value); console.log(e.target.value) }}>\r\n                                        <option value=\"PERCENT\">PERCENT</option>\r\n                                        <option value=\"FLAT\">FLAT</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group controlId='Amount Off'>\r\n                                    <Form.Label>{discountType == 'FLAT' ? 'Amount Off In Cents' : \"Percent Off\"}</Form.Label>\r\n                                    <Form.Control type='number' placeholder={discountType == 'FLAT' ? 'Amount Off In Cents' : \"Percent Off\"}\r\n                                        value={discountAmount} required disabled={!edit}\r\n                                        onChange={(e) => setDiscountAmount(e.target.value)}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group controlId='Exclude'>\r\n                                    <Form.Label>{discountType == 'FLAT' ? \"Minimun Order (Cents)\" : \"Excluded Products\"}</Form.Label>\r\n                                    <Form.Control\r\n                                        as={discountType == 'FLAT' ? \"input\" : 'textarea'}\r\n                                        type={discountType == 'FLAT' ? \"number\" : 'textarea'}\r\n                                        placeholder={discountType == 'FLAT' ? \"Minimun Order Value (Cents)\"\r\n                                            : `Product SKU's Seperated by Commas, No Spaces\r\n                                        ex: T6131,126823,50-0231`}\r\n                                        value={discountExclude} disabled={!edit}\r\n                                        onChange={excludeHandler}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                {discountType == 'PERCENT' &&\r\n                                    <Form.Group controlId='CategoryExclude'>\r\n                                        <Form.Label>Excluded Categories</Form.Label>\r\n                                        <Form.Control\r\n                                            as='textarea'\r\n                                            type='textarea'\r\n                                            placeholder={`Category ID's Seperated by Commas, No Spaces\r\n                                        ex: 3,56,217`}\r\n                                            value={categoryExclude} disabled={!edit}\r\n                                            onChange={categoryHandler}>\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                }\r\n                                <Form.Check label=\"Discount Live\" disabled={!edit}\r\n                                    type=\"checkbox\" id=\"disabledCheck\" className=\"mb-3\" custom\r\n                                    checked={discountLive}\r\n                                    onChange={(e) => setDiscountLive(e.target.checked)}>\r\n                                </Form.Check>\r\n                                {edit ? (\r\n                                    <>\r\n                                        <Button variant='secondary' className=\"text-danger p-0\" type=\"submit\">\r\n                                            Save\r\n                                        </Button>\r\n                                        <Button variant='secondary' className=\"p-0 ml-5\" type=\"button\"\r\n                                            onClick={cancelHandler}>\r\n                                            Cancel\r\n                                        </Button>\r\n                                    </>\r\n                                ) : (\r\n                                    <Button variant='secondary' className=\"text-danger p-0\" type=\"button\"\r\n                                        onClick={editHandler}>\r\n                                        Edit\r\n                                    </Button>\r\n                                )}\r\n                            </Form>\r\n                        )}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default DiscountEditScreen\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\BrandListScreen.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\BrandNewScreen.js",["822","823"],"import axios from 'axios'\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { Button, Col, Container, Form, Row } from 'react-bootstrap'\r\nimport { useMutation, useQuery } from 'react-query'\r\nimport { Link } from 'react-router-dom'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { UserContext } from '../contexts/UserContext'\r\n\r\nconst BrandNewScreen = ({ history }) => {\r\n\r\n    // States and Contexts\r\n    const user = useContext(UserContext)\r\n\r\n    const [brandID, setBrandID] = useState(\"\")\r\n    const [brandName, setBrandName] = useState(\"\")\r\n\r\n    const [available, setAvailable] = useState(true)\r\n    const [edit, setEdit] = useState(true)\r\n    const [success, setSuccess] = useState(\"\")\r\n    const [error, setError] = useState(\"\")\r\n\r\n    // Query: All Categories  \r\n    const { isLoading: queryLoading, data: queryData } = useQuery(\"brandListAdmin\", () => {\r\n        return axios.get(`/api/brands`, {\r\n            headers: { Authorization: `Bearer ${user.token}` }\r\n        })\r\n    }, {\r\n        onError: (error) => {\r\n            setError(error.response && error.response.data.message\r\n                ? error.response.data.message : error.message)\r\n        }\r\n    })\r\n\r\n    // Mutation: New Brand\r\n    const { mutate, isLoading: mutationLoading, reset } = useMutation(data => {\r\n        return axios.post(`/api/brands/edit/${brandID}`, data, {\r\n            headers: { Authorization: `Bearer ${user.token}` }\r\n        })\r\n    }, {\r\n        onSuccess: (data) => {\r\n            console.log(data.data)\r\n            setSuccess(\"Brand Creation Success!\")\r\n            setError(\"\")\r\n            setEdit(false)\r\n            reset()\r\n        },\r\n        onError: (error) => {\r\n            setError(error.response && error.response.data.message\r\n                ? error.response.data.message : error.message)\r\n        }\r\n    })\r\n\r\n    // Effect: Check if Brand ID is already Taken\r\n    useEffect(() => {\r\n        if (queryData && queryData.data) {\r\n            const match = queryData.data.filter(brand => brand.brandID == brandID)\r\n            if (match.length) setAvailable(false)\r\n            else setAvailable(true)\r\n        }\r\n        if (brandID == \"\") setAvailable(true)\r\n    }, [brandID, queryData])\r\n\r\n    // Handlers\r\n    const saveHandler = (e) => {\r\n        e.preventDefault()\r\n        mutate({ brandName, brandID })\r\n    }\r\n    const cancelHandler = (e) => {\r\n        e.preventDefault()\r\n        history.push('/admin/brandlist')\r\n    }\r\n\r\n    return (\r\n        <Container className=\"my-5 pb-5\">\r\n            <Row>\r\n                <Col xs={8}>\r\n                    <Row>\r\n                        <Col>\r\n                            <Link to=\"/admin/brandlist\">{\"<-- Brand List\"}</Link>\r\n                        </Col>\r\n                    </Row>\r\n                    <h2 className=\"mt-3\">New Brand</h2>\r\n                    {queryLoading ? <Loader />\r\n                        : mutationLoading ? <Loader /> : (\r\n                            <Form className=\"my-5\" onSubmit={saveHandler}>\r\n                                {error && <Message variant=\"danger\">{error}</Message>}\r\n                                {success && <Message variant=\"success\">{success}</Message>}\r\n                                <Form.Group controlId='SectionID'>\r\n                                    <Form.Label>Brand ID</Form.Label>\r\n                                    <Form.Control type='number' placeholder='Brand ID' value={brandID} required disabled={!edit}\r\n                                        isInvalid={!available}\r\n                                        onChange={(e) => setBrandID(e.target.value)}>\r\n                                    </Form.Control>\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {brandID} is already in use\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n                                <Form.Group controlId='Name'>\r\n                                    <Form.Label>Brand Name</Form.Label>\r\n                                    <Form.Control type='text' placeholder='Brand Name' value={brandName} required disabled={!edit}\r\n                                        onChange={(e) => setBrandName(e.target.value)}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                {edit && (\r\n                                    <>\r\n                                        <Button variant='secondary' className=\"text-danger p-0\" type=\"submit\" disabled={!available}>\r\n                                            Save\r\n                                        </Button>\r\n                                        <Button variant='secondary' className=\"p-0 ml-5\" type=\"button\"\r\n                                            onClick={cancelHandler}>\r\n                                            Cancel\r\n                                        </Button>\r\n                                    </>\r\n                                )}\r\n                            </Form>\r\n                        )}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default BrandNewScreen\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\contexts\\CartContext.js",["824","825","826"],"import React, { createContext, useReducer, useEffect, useContext } from 'react'\r\nimport { UserContext, UserContextUpdate } from './UserContext'\r\n\r\nexport const CartContext = createContext()\r\nexport const CartContextUpdate = createContext()\r\n\r\n\r\n\r\nconst initialState = { cartItems: [], shippingInfo: {}, shippingMethod: {}, discount: {} }\r\n\r\nconst cartReducer = (state, action) => {\r\n    console.log(action)\r\n    let newCartItems\r\n    switch (action.type) {\r\n        case \"ADD_ITEM\":\r\n            newCartItems = state.cartItems.filter(item => item.cloverID !== action.cartItem.cloverID)\r\n            newCartItems.push(action.cartItem)\r\n            return { ...state, cartItems: newCartItems, shippingMethod: {}, discount: {} };\r\n        case \"QTY_ITEM\":\r\n            newCartItems = state.cartItems.map(item => {\r\n                if (item.cloverID == action.cartItem.cloverID) return action.cartItem\r\n                else return item\r\n            })\r\n            return { ...state, cartItems: newCartItems, shippingMethod: {}, discount: {} };\r\n        case \"REMOVE_ITEM\":\r\n            newCartItems = state.cartItems.filter(item => item.cloverID !== action.cloverID)\r\n            return { ...state, cartItems: newCartItems, shippingMethod: {}, discount: {} };\r\n\r\n        case \"RESET_CART\":\r\n            return initialState;\r\n        case \"LOAD_USER_CART\":\r\n            return { ...state, cartItems: action.userCartItems };\r\n        case \"LOAD_URL_CART\":\r\n            return { ...state, cartItems: action.urlCartItems };\r\n\r\n        case \"ADD_SHIPPING\":\r\n            return { ...state, shippingInfo: action.shippingInfo };\r\n        case \"ADD_SHIPPING_METHOD\":\r\n            return { ...state, shippingMethod: action.shippingMethod };\r\n        case \"CLEAR_SHIPPING_METHOD\":\r\n            return { ...state, shippingMethod: {} };\r\n        case \"ADD_DISCOUNT\":\r\n            return { ...state, discount: action.discount };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const CartContextProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(cartReducer, initialState, () => {\r\n        const localData = localStorage.getItem(\"cart\")\r\n        return localData ? JSON.parse(localData) : initialState\r\n    })\r\n\r\n    const user = useContext(UserContext)\r\n    const userUpdate = useContext(UserContextUpdate)\r\n\r\n    // User Login\r\n    useEffect(() => {\r\n        if (user._id) { dispatch({ type: \"LOAD_USER_CART\", userCartItems: user.cartItems }) }\r\n    }, [user._id])\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"cart\", JSON.stringify(state))\r\n        console.log(state)\r\n        if (user._id) userUpdate({ type: \"CART\", cartItems: state.cartItems })\r\n    }, [state])\r\n\r\n\r\n\r\n    return (\r\n        <CartContext.Provider value={state}>\r\n            <CartContextUpdate.Provider value={dispatch}>\r\n                {children}\r\n            </CartContextUpdate.Provider>\r\n        </CartContext.Provider>\r\n    )\r\n}\r\n\r\n\r\n\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\DiscountCode.js",["827","828","829","830","831","832","833","834","835"],"import axios from 'axios'\r\nimport React, { useContext, useState } from 'react'\r\nimport { Button, Col, FormControl, InputGroup, ListGroup, Modal, Row } from 'react-bootstrap'\r\nimport { useMutation } from 'react-query'\r\nimport { CartContext, CartContextUpdate } from '../contexts/CartContext'\r\nimport { UserContext } from '../contexts/UserContext'\r\nimport Message from './Message'\r\n\r\nconst DiscountCode = () => {\r\n\r\n    const user = useContext(UserContext)\r\n    const cart = useContext(CartContext)\r\n    const updateCart = useContext(CartContextUpdate)\r\n    const [code, setCode] = useState(\"\")\r\n    const [success, setSuccess] = useState(\"\")\r\n    const [error, setError] = useState(\"\")\r\n\r\n\r\n    const { mutate, reset } = useMutation(data => {\r\n        return axios.post(`/api/discounts/apply/${data.code}`, data.cartItems)\r\n    }, {\r\n        onSuccess: (data) => {\r\n            // console.log(data.data)\r\n            setSuccess(`Added Discount ${data.data.discountCode} Successfully`)\r\n            setError(\"\")\r\n            updateCart({ type: \"ADD_DISCOUNT\", discount: data.data })\r\n            // reset()\r\n        },\r\n        onError: (error) => {\r\n            setSuccess(\"\")\r\n            setError(error.response && error.response.data.message\r\n                ? error.response.data.message : error.message)\r\n        }\r\n    })\r\n\r\n    const applyHandler = () => {\r\n        if (code) mutate({ code, cartItems: cart.cartItems })\r\n        setCode(\"\")\r\n    }\r\n\r\n    const removeHandler = () => {\r\n        updateCart({ type: \"ADD_DISCOUNT\", discount: {} })\r\n        setSuccess(\"\")\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {Object.keys(cart.discount) != 0 &&\r\n                <ListGroup.Item className=\"\">\r\n                    <Row>\r\n                        <Col>\r\n                            <strong>Discount: </strong> {cart.discount.discountDescription}\r\n                        </Col>\r\n                        <Col xs=\"auto\" className=\"text-right\">\r\n                            <a className=\"text-muted\" style={{ cursor: \"pointer\" }}\r\n                                onClick={removeHandler}>\r\n                                Remove\r\n                            </a>\r\n                        </Col>\r\n                    </Row>\r\n                </ListGroup.Item>}\r\n            <ListGroup.Item className=\"py-0 pl-0\">\r\n                <Row>\r\n                    <Col>\r\n                        <FormControl placeholder=\"Enter Discount Code\" value={code}\r\n                            onChange={(e) => setCode(e.target.value.toUpperCase())}\r\n                        />\r\n                    </Col>\r\n                    <Col xs=\"auto\" className=\"px-4 my-auto\">\r\n                        <a className=\"text-muted\" style={{ cursor: \"pointer\" }}\r\n                            onClick={applyHandler}>\r\n                            Apply\r\n                        </a>\r\n                    </Col>\r\n                </Row>\r\n            </ListGroup.Item>\r\n            {error && <p className=\"text-danger px-4\">{error}</p>}\r\n            {success && <p className=\"text-success px-4\">{success}</p>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DiscountCode\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\common.js",["836"],"export const toUSD = (cents) => {\r\n    if (!cents) return \"\"\r\n    return (Number(cents) / 100).toLocaleString(\"en-US\", { style: \"currency\", currency: \"USD\" })\r\n}\r\n\r\nexport const envImage = (url) => {\r\n    if (url && url.substr(0, 6) === \"static\") return \"/\" + url\r\n    if (url) {\r\n        // console.log(url)\r\n        if (process.env.NODE_ENV == \"development\") {\r\n            return \"https://www.coastairbrush.com/\" + url\r\n        }\r\n        else {\r\n            return \"/\" + url\r\n        }\r\n    }\r\n    else return \"/static/sample.jpg\"\r\n}\r\n\r\nexport const firstImage = (product) => {\r\n    if (product && product.images && product.images[0]) return product.images[0].imageSrc\r\n    else return \"static/sample.jpg\"\r\n}\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\BrandFilter.js",["837","838","839","840"],"import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Button, Card, Form, ListGroup } from 'react-bootstrap'\r\nimport { useQuery } from 'react-query'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst BrandFilter = ({ keyword, brands: selectedBrands, pageNumber: page }) => {\r\n\r\n    const { isLoading, data, refetch } = useQuery('brandList', () => {\r\n        return axios.get(`/api/brands`)\r\n    })\r\n    const brands = data && data.data\r\n\r\n    const [filter, setFilter] = useState([])\r\n\r\n    const history = useHistory()\r\n\r\n    const addBrand = (e) => {\r\n        setFilter(arr => {\r\n            if (filter.includes(e)) return arr\r\n            else return [...arr, e]\r\n        })\r\n    }\r\n    const removeBrand = (e) => {\r\n        setFilter(arr => arr.filter(el => el != e))\r\n    }\r\n\r\n\r\n    const filterHandler = (e) => {\r\n        history.push(\"/search/\" + keyword + \"/page/\" + 1 + \"/brands/\" + filter.join('_'))\r\n    }\r\n\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Header as=\"h5\">Filter by Brand</Card.Header>\r\n            <ListGroup variant=\"flush\" className=\"my-2 border-0\">\r\n                {brands && brands.map((brand) => (\r\n                    <ListGroup.Item key={brand.brandID} className=\"py-1 border-0\">\r\n                        <Form.Check type=\"checkbox\" value={brand.brandID} label={brand.brandName}\r\n                            onChange={(e) => e.target.checked ? addBrand(e.target.value) : removeBrand(e.target.value)}\r\n                        ></Form.Check>\r\n                    </ListGroup.Item>\r\n                ))}\r\n            </ListGroup>\r\n            <Button variant=\"danger\" onClick={filterHandler}>\r\n                Filter\r\n            </Button>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default BrandFilter\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\BrandsScreen.js",["841","842","843","844","845","846","847","848"],"import axios from 'axios'\r\nimport React, { useEffect, useRef } from 'react'\r\nimport { Col, Container, ListGroup, ListGroupItem, Nav, Row } from 'react-bootstrap'\r\nimport { useQuery } from 'react-query'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst BrandsScreen = ({ match }) => {\r\n\r\n    const { isLoading, data, refetch } = useQuery('brandList', () => {\r\n        return axios.get(`/api/brands`)\r\n    })\r\n    const brands = data && data.data\r\n    const letters = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\",\r\n        \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"]\r\n\r\n\r\n    const myRef = useRef([]);\r\n\r\n\r\n    return (\r\n        <Container className=\"my-5 pt-3 px-lg-5\">\r\n            <div className=\"pb-4 border-bottom\">\r\n                {letters.map((letter, index) => (\r\n                    <LinkContainer to={'#' + letter} active={false} style={{ color: \"#fed815\", display: \"inline\", cursor: \"pointer\", }}>\r\n                        <h1 className=\"textShadow\"\r\n                            onClick={() => myRef.current[index].scrollIntoView()}\r\n                        >{letter} </h1>\r\n                    </LinkContainer>\r\n                ))}\r\n            </div>\r\n\r\n\r\n\r\n\r\n            <ListGroup variant=\"flush\">\r\n\r\n                {// Numbers\r\n                    <ListGroupItem key='#' className=\"py-4\">\r\n                        <h1 className=\"text-danger mb-3\">#</h1>\r\n                        <Row>\r\n                            {brands && brands.filter(brand => Number(brand.brandName[0])).map(brand => (\r\n                                <Col xs={4} className=\"my-1\">\r\n                                    <LinkContainer to={\"/search/\" + \"ALL\" + \"/page/\" + 1 + \"/brands/\" + brand.brandID}>\r\n                                        <Link active={false} className=\"px-0\">\r\n                                            {brand.brandName}\r\n                                        </Link>\r\n                                    </LinkContainer>\r\n                                </Col>\r\n                            ))}\r\n                        </Row>\r\n                    </ListGroupItem>}\r\n\r\n                {letters.map((letter, index) => (\r\n                    <ListGroupItem key={letter} className=\"py-4\">\r\n                        <h1 className=\"text-danger mb-3\" ref={el => myRef.current[index] = el}>{letter}</h1>\r\n                        <Row>\r\n                            {brands && brands.filter(brand => brand.brandName[0] === letter).map(brand => (\r\n                                <Col xs={4} className=\"my-1\">\r\n                                    <LinkContainer to={\"/search/\" + \"ALL\" + \"/page/\" + 1 + \"/brands/\" + brand.brandID}>\r\n                                        <Link active={false} className=\"px-0\">\r\n                                            {brand.brandName}\r\n                                        </Link>\r\n                                    </LinkContainer>\r\n                                </Col>\r\n                            ))}\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                ))}\r\n\r\n            </ListGroup>\r\n        </Container >\r\n    )\r\n}\r\n\r\nexport default BrandsScreen\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\ReportCustomRange.js",["849","850"],"import axios from 'axios'\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { Button, Col, Form, Row } from 'react-bootstrap'\r\nimport { useMutation } from 'react-query'\r\nimport { toUSD } from '../common'\r\nimport { UserContext } from '../contexts/UserContext'\r\nimport Message from './Message'\r\n\r\nconst ReportCustomRange = () => {\r\n\r\n    const offset = new Date().getTimezoneOffset() * 60000\r\n\r\n    const user = useContext(UserContext)\r\n    const [startString, setStartString] = useState(\"\")\r\n    const [endString, setEndString] = useState(\"\")\r\n    const [start, setStart] = useState(\"\")\r\n    const [end, setEnd] = useState(\"\")\r\n    const [error, setError] = useState(\"\")\r\n    const [report, setReport] = useState({ topQty: [], topPrice: [], totalOrders: \"\", averageValue: 0 })\r\n\r\n    useEffect(() => {\r\n        console.log(\"start\", startString)\r\n        setStart(Date.parse(startString) + offset)\r\n        console.log(\"start\", start)\r\n    }, [startString])\r\n    useEffect(() => {\r\n        console.log(\"end\", endString)\r\n        setEnd(Date.parse(endString) + 86400000 + offset)\r\n        console.log(\"end\", end)\r\n    }, [endString])\r\n\r\n    // Mutation: Update Brand \r\n    const { mutate, isLoading, reset } = useMutation(data => {\r\n        console.log(data)\r\n        return axios.post(`/api/reports/custom`, data, {\r\n            headers: { Authorization: `Bearer ${user.token}` }\r\n        })\r\n    }, {\r\n        onSuccess: (data) => {\r\n            console.log(data.data)\r\n            const raw = data.data\r\n            setReport({ ...raw })\r\n            setError(\"\")\r\n            reset()\r\n        },\r\n        onError: (error) => {\r\n            setError(error.response && error.response.data.message\r\n                ? error.response.data.message : error.message)\r\n        }\r\n    })\r\n\r\n    // Handlers\r\n    const sumbitHandler = (e) => {\r\n        e.preventDefault()\r\n        mutate({ start, end })\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Form>\r\n                <Form.Row className=\"mb-5 justify-content-center\" >\r\n                    <Col xs={{ span: 3 }} className=\"text-center\">\r\n                        <Form.Control\r\n                            type={\"date\"}\r\n                            value={startString}\r\n                            onChange={(e) => setStartString(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                        Start: (00:01 AM)\r\n                    </Col>\r\n\r\n                    <Col xs={{ span: 3 }} className=\"text-center\">\r\n                        <Form.Control\r\n                            type={\"date\"}\r\n                            value={endString}\r\n                            onChange={(e) => setEndString(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                        End: (11:59 PM)\r\n                    </Col>\r\n                    <Col xs={{ span: 3 }} >\r\n                        <Button block style={{ paddingBottom: \"8px\" }}\r\n                            disabled={!startString || !endString || isLoading}\r\n                            onClick={sumbitHandler} >\r\n                            {isLoading ? \"Loading\" : \"Go\"}\r\n                        </Button>\r\n                    </Col>\r\n                </Form.Row>\r\n            </Form>\r\n\r\n            {error && <Message variant=\"danger\">{error}</Message>}\r\n            <Row className=\"my-5 justify-content-center\">\r\n                <Col xs=\"auto\" className=\"my-auto\">\r\n                    <h5>Number of Orders:</h5>\r\n                </Col>\r\n                <Col xs=\"auto\" className=\"text-center\">\r\n                    <h3>{report.totalOrders}</h3>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row className=\"my-5 justify-content-center\">\r\n                <Col xs=\"auto\" className=\"my-auto\">\r\n                    <h5>Average Order Value:</h5>\r\n                </Col>\r\n                <Col xs=\"auto\" className=\"text-center\">\r\n                    <h3>{toUSD(report.averageValue)}</h3>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row className=\"my-5 justify-content-center\">\r\n                <Col xs=\"auto\" className=\"my-auto\">\r\n                    <h5>Best Selling Products (By Price):</h5>\r\n                </Col>\r\n                <Col xs=\"auto\" className=\"text-right\">\r\n                    {report.topPrice.map(el => (\r\n                        <h5>{`${el[0]}:`}</h5>\r\n                    ))}\r\n                </Col>\r\n                <Col xs=\"auto\" className=\"text-left\">\r\n                    {report.topPrice.map(el => (\r\n                        <h5>{toUSD(el[1])}</h5>\r\n                    ))}\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row className=\"my-5 justify-content-center\">\r\n                <Col xs=\"auto\" className=\"my-auto\">\r\n                    <h5>Best Selling Products (By Qty):</h5>\r\n                </Col>\r\n                <Col xs=\"auto\" className=\"text-right\">\r\n                    {report.topQty.map(el => (\r\n                        <h5>{`${el[0]}:`}</h5>\r\n                    ))}\r\n                </Col>\r\n                <Col xs=\"auto\" className=\"text-left\">\r\n                    {report.topQty.map(el => (\r\n                        <h5>{el[1]}</h5>\r\n                    ))}\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row className=\"my-5 justify-content-center\">\r\n                <Col xs=\"auto\" className=\"my-auto\">\r\n                    <h5>Best Selling Categories (By Price):</h5>\r\n                </Col>\r\n                <Col xs=\"auto\" className=\"text-right\">\r\n                    {report.topCatPrice.map(el => (\r\n                        <h5>{el[0]}</h5>\r\n                    ))}\r\n                </Col>\r\n                <Col xs=\"auto\" className=\"text-left\">\r\n                    {report.topCatPrice.map(el => (\r\n                        <h5>{toUSD(el[1])}</h5>\r\n                    ))}\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row className=\"my-5 justify-content-center\">\r\n                <Col xs=\"auto\" className=\"my-auto\">\r\n                    <h5>Best Selling Categories (By Qty):</h5>\r\n                </Col>\r\n                <Col xs=\"auto\" className=\"text-right\">\r\n                    {report.topCatQty.map(el => (\r\n                        <h5>{`${el[0]}:`}</h5>\r\n                    ))}\r\n                </Col>\r\n                <Col xs=\"auto\" className=\"text-left\">\r\n                    {report.topCatQty.map(el => (\r\n                        <h5>{el[1]}</h5>\r\n                    ))}\r\n                </Col>\r\n            </Row>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReportCustomRange\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\ReportDoD.js",["851"],"import axios from 'axios'\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { Button, Col, Form, Row } from 'react-bootstrap'\r\nimport { useMutation } from 'react-query'\r\nimport { toUSD } from '../common'\r\nimport { UserContext } from '../contexts/UserContext'\r\nimport Message from './Message'\r\n\r\nconst ReportDoD = () => {\r\n\r\n    const offset = new Date().getTimezoneOffset() * 60000\r\n\r\n    const user = useContext(UserContext)\r\n    const [startString, setStartString] = useState(\"\")\r\n    const [start, setStart] = useState(\"\")\r\n    const [error, setError] = useState(\"\")\r\n    const [report, setReport] = useState({})\r\n\r\n    useEffect(() => {\r\n        console.log(\"start\", startString)\r\n        setStart(Date.parse(startString) + offset)\r\n        console.log(\"start\", start)\r\n    }, [startString])\r\n\r\n\r\n    // Mutation \r\n    const { mutate, isLoading, reset } = useMutation(data => {\r\n        console.log(data)\r\n        return axios.post(`/api/reports/dod`, data, {\r\n            headers: { Authorization: `Bearer ${user.token}` }\r\n        })\r\n    }, {\r\n        onSuccess: (data) => {\r\n            console.log(data.data)\r\n            const raw = data.data\r\n            setReport({ ...raw })\r\n            setError(\"\")\r\n            reset()\r\n        },\r\n        onError: (error) => {\r\n            setError(error.response && error.response.data.message\r\n                ? error.response.data.message : error.message)\r\n        }\r\n    })\r\n\r\n    // Handlers\r\n    const sumbitHandler = (e) => {\r\n        e.preventDefault()\r\n        mutate({ start })\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Form>\r\n                <Form.Row className=\"mb-5 justify-content-center\" >\r\n                    <Col xs={{ span: 3 }} className=\"text-left mt-3\">\r\n                        <h4>Day Over Day:</h4>\r\n                    </Col>\r\n\r\n                    <Col xs={{ span: 3 }} className=\"text-center\">\r\n                        <Form.Control\r\n                            type={\"date\"}\r\n                            value={startString}\r\n                            onChange={(e) => setStartString(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                        Start: (00:01 AM)\r\n                    </Col>\r\n                    <Col xs={{ span: 3 }} >\r\n                        <Button block style={{ paddingBottom: \"8px\" }}\r\n                            disabled={!startString || isLoading}\r\n                            onClick={sumbitHandler} >\r\n                            {isLoading ? \"Loading\" : \"Go\"}\r\n                        </Button>\r\n                    </Col>\r\n                </Form.Row>\r\n            </Form>\r\n\r\n            {error && <Message variant=\"danger\">{error}</Message>}\r\n            <Row className=\"my-5 justify-content-center\">\r\n                <Col xs=\"auto\" className=\"my-auto\">\r\n                    <h5>Previous:</h5>\r\n                </Col>\r\n                <Col xs=\"auto\" className=\"text-center\">\r\n                    <h3>{toUSD(report.prevTotals)}</h3>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row className=\"my-5 justify-content-center\">\r\n                <Col xs=\"auto\" className=\"my-auto\">\r\n                    <h5>Selected:</h5>\r\n                </Col>\r\n                <Col xs=\"auto\" className=\"text-center\">\r\n                    <h3>{toUSD(report.selectedTotals)}</h3>\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ReportDoD\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\ReportMoM.js",["852"],"import axios from 'axios'\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { Button, Col, Form, Row } from 'react-bootstrap'\r\nimport { useMutation } from 'react-query'\r\nimport { toUSD } from '../common'\r\nimport { UserContext } from '../contexts/UserContext'\r\nimport Message from './Message'\r\n\r\nconst ReportMoM = () => {\r\n\r\n    const user = useContext(UserContext)\r\n    const [startString, setStartString] = useState(\"\")\r\n    const [error, setError] = useState(\"\")\r\n    const [report, setReport] = useState({})\r\n\r\n    // Mutation: Get MoM Report \r\n    const { mutate, isLoading, reset } = useMutation(data => {\r\n        console.log(data)\r\n        return axios.post(`/api/reports/mom`, data, {\r\n            headers: { Authorization: `Bearer ${user.token}` }\r\n        })\r\n    }, {\r\n        onSuccess: (data) => {\r\n            console.log(data.data)\r\n            const raw = data.data\r\n            setReport({ ...raw })\r\n            setError(\"\")\r\n            reset()\r\n        },\r\n        onError: (error) => {\r\n            setError(error.response && error.response.data.message\r\n                ? error.response.data.message : error.message)\r\n        }\r\n    })\r\n\r\n    // Handlers\r\n    const sumbitHandler = (e) => {\r\n        e.preventDefault()\r\n        mutate({ startString })\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Form>\r\n                <Form.Row className=\"mb-5 justify-content-center\" >\r\n                    <Col xs={{ span: 3 }} className=\"text-left mt-3\">\r\n                        <h4>Month Over Month:</h4>\r\n                    </Col>\r\n\r\n                    <Col xs={{ span: 3 }} className=\"text-center\">\r\n                        <Form.Control\r\n                            type={\"date\"}\r\n                            value={startString}\r\n                            onChange={(e) => setStartString(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                        Start: (First Day of the Month)\r\n                    </Col>\r\n                    <Col xs={{ span: 3 }} >\r\n                        <Button block style={{ paddingBottom: \"8px\" }}\r\n                            disabled={!startString || isLoading}\r\n                            onClick={sumbitHandler} >\r\n                            {isLoading ? \"Loading\" : \"Go\"}\r\n                        </Button>\r\n                    </Col>\r\n                </Form.Row>\r\n            </Form>\r\n\r\n            {error && <Message variant=\"danger\">{error}</Message>}\r\n            <Row className=\"my-5 justify-content-center\">\r\n                <Col xs=\"auto\" className=\"my-auto\">\r\n                    <h5>Previous:</h5>\r\n                </Col>\r\n                <Col xs=\"auto\" className=\"text-center\">\r\n                    <h3>{toUSD(report.prevTotals)}</h3>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row className=\"my-5 justify-content-center\">\r\n                <Col xs=\"auto\" className=\"my-auto\">\r\n                    <h5>Selected:</h5>\r\n                </Col>\r\n                <Col xs=\"auto\" className=\"text-center\">\r\n                    <h3>{toUSD(report.selectedTotals)}</h3>\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ReportMoM\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\ReportYoY.js",["853"],"import axios from 'axios'\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { Button, Col, Form, Row } from 'react-bootstrap'\r\nimport { useMutation } from 'react-query'\r\nimport { toUSD } from '../common'\r\nimport { UserContext } from '../contexts/UserContext'\r\nimport Message from './Message'\r\n\r\nconst ReportMoM = () => {\r\n\r\n\r\n    const user = useContext(UserContext)\r\n    const [startString, setStartString] = useState(\"\")\r\n    const [error, setError] = useState(\"\")\r\n    const [report, setReport] = useState({})\r\n\r\n\r\n    // Mutation: Get YoY Report \r\n    const { mutate, isLoading, reset } = useMutation(data => {\r\n        console.log(data)\r\n        return axios.post(`/api/reports/yoy`, data, {\r\n            headers: { Authorization: `Bearer ${user.token}` }\r\n        })\r\n    }, {\r\n        onSuccess: (data) => {\r\n            console.log(data.data)\r\n            const raw = data.data\r\n            setReport({ ...raw })\r\n            setError(\"\")\r\n            reset()\r\n        },\r\n        onError: (error) => {\r\n            setError(error.response && error.response.data.message\r\n                ? error.response.data.message : error.message)\r\n        }\r\n    })\r\n\r\n    // Handlers\r\n    const sumbitHandler = (e) => {\r\n        e.preventDefault()\r\n        mutate({ startString })\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Form>\r\n                <Form.Row className=\"mb-5 justify-content-center\" >\r\n                    <Col xs={{ span: 3 }} className=\"text-left mt-3\">\r\n                        <h4>Year Over Year:</h4>\r\n                    </Col>\r\n\r\n                    <Col xs={{ span: 3 }} className=\"text-center\">\r\n                        <Form.Control\r\n                            type={\"date\"}\r\n                            value={startString}\r\n                            onChange={(e) => setStartString(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                        Start: (First Day of the Year)\r\n                    </Col>\r\n                    <Col xs={{ span: 3 }} >\r\n                        <Button block style={{ paddingBottom: \"8px\" }}\r\n                            disabled={!startString || isLoading}\r\n                            onClick={sumbitHandler} >\r\n                            {isLoading ? \"Loading\" : \"Go\"}\r\n                        </Button>\r\n                    </Col>\r\n                </Form.Row>\r\n            </Form>\r\n\r\n            {error && <Message variant=\"danger\">{error}</Message>}\r\n            <Row className=\"my-5 justify-content-center\">\r\n                <Col xs=\"auto\" className=\"my-auto\">\r\n                    <h5>Previous:</h5>\r\n                </Col>\r\n                <Col xs=\"auto\" className=\"text-center\">\r\n                    <h3>{isLoading ? \"\" : toUSD(report.prevTotals)}</h3>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row className=\"my-5 justify-content-center\">\r\n                <Col xs=\"auto\" className=\"my-auto\">\r\n                    <h5>Selected:</h5>\r\n                </Col>\r\n                <Col xs=\"auto\" className=\"text-center\">\r\n                    <h3>{isLoading ? \"\" : toUSD(report.selectedTotals)}</h3>\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ReportMoM\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\ReportLowInv.js",["854"],"import axios from 'axios'\r\nimport React, { useContext, useState } from 'react'\r\nimport { Button, Col, Form, Table } from 'react-bootstrap'\r\nimport { useMutation, useQuery } from 'react-query'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { UserContext } from '../contexts/UserContext'\r\nimport Message from './Message'\r\n\r\nconst ReportLowInv = () => {\r\n\r\n    const user = useContext(UserContext)\r\n    const [error, setError] = useState(\"\")\r\n\r\n    const { isFetching, data, refetch } = useQuery('lowInvReport', () => {\r\n        return axios.get(`/api/reports/low`, {\r\n            headers: { Authorization: `Bearer ${user.token}` }\r\n        })\r\n    }, {\r\n        enabled: false,\r\n        onError: (error) => {\r\n            setError(error.response && error.response.data.message\r\n                ? error.response.data.message : error.message)\r\n        }\r\n    })\r\n    const dataLowInv = data && data.data\r\n\r\n\r\n    // Handlers\r\n    const sumbitHandler = (e) => {\r\n        e.preventDefault()\r\n        refetch()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Form>\r\n                <Form.Row className=\"mb-5 justify-content-center\" >\r\n                    <Col xs={{ span: 3 }} className=\"text-left my-auto\">\r\n                        <h4>Low Inventory:</h4>\r\n                    </Col>\r\n                    <Col xs={{ span: 3 }} className=\"text-center my-auto\">\r\n                        <h4>(Under 5)</h4>\r\n                    </Col>\r\n\r\n                    <Col xs={{ span: 3 }} >\r\n                        <Button block style={{ paddingBottom: \"8px\" }}\r\n                            disabled={isFetching}\r\n                            onClick={sumbitHandler} >\r\n                            {isFetching ? \"Loading\" : \"Go\"}\r\n                        </Button>\r\n                    </Col>\r\n                </Form.Row>\r\n            </Form>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {dataLowInv && (<Table striped bordered hover responsive className='table-sm mt-3'>\r\n                <thead>\r\n                    <tr>\r\n                        <th>{\"NAME \"} </th>\r\n                        <th>{\"STOCK \"}</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {dataLowInv.map(inv => (\r\n                        <tr key={inv.cloverID}>\r\n                            <LinkContainer to={`/admin/inventory/${inv.cloverID}/edit`}\r\n                                style={{ cursor: \"pointer\" }}>\r\n                                <td>{inv.cloverName}</td>\r\n                            </LinkContainer>\r\n                            <td>{inv.iStock}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </Table>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReportLowInv\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\InstagramFeed.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\TestScreen.js",[],{"ruleId":"855","replacedBy":"856"},{"ruleId":"857","replacedBy":"858"},{"ruleId":"859","severity":1,"message":"860","line":19,"column":8,"nodeType":"861","messageId":"862","endLine":19,"endColumn":24},{"ruleId":"863","severity":1,"message":"864","line":72,"column":33,"nodeType":"865","messageId":"866","endLine":72,"endColumn":85,"fix":"867"},{"ruleId":"863","severity":1,"message":"864","line":77,"column":33,"nodeType":"865","messageId":"866","endLine":77,"endColumn":84,"fix":"868"},{"ruleId":"863","severity":1,"message":"864","line":82,"column":33,"nodeType":"865","messageId":"866","endLine":82,"endColumn":84,"fix":"869"},{"ruleId":"863","severity":1,"message":"864","line":87,"column":33,"nodeType":"865","messageId":"866","endLine":87,"endColumn":86,"fix":"870"},{"ruleId":"863","severity":1,"message":"864","line":92,"column":33,"nodeType":"865","messageId":"866","endLine":92,"endColumn":86,"fix":"871"},{"ruleId":"859","severity":1,"message":"872","line":16,"column":13,"nodeType":"861","messageId":"862","endLine":16,"endColumn":16},{"ruleId":"863","severity":1,"message":"864","line":177,"column":29,"nodeType":"865","messageId":"866","endLine":177,"endColumn":120,"fix":"873"},{"ruleId":"863","severity":1,"message":"864","line":190,"column":29,"nodeType":"865","messageId":"866","endLine":190,"endColumn":135,"fix":"874"},{"ruleId":"863","severity":1,"message":"864","line":201,"column":29,"nodeType":"865","messageId":"866","endLine":201,"endColumn":187,"fix":"875"},{"ruleId":"863","severity":1,"message":"864","line":258,"column":33,"nodeType":"865","messageId":"866","endLine":258,"endColumn":97,"fix":"876"},{"ruleId":"859","severity":1,"message":"877","line":15,"column":10,"nodeType":"861","messageId":"862","endLine":15,"endColumn":21},{"ruleId":"859","severity":1,"message":"878","line":23,"column":13,"nodeType":"861","messageId":"862","endLine":23,"endColumn":21},{"ruleId":"859","severity":1,"message":"879","line":24,"column":13,"nodeType":"861","messageId":"862","endLine":24,"endColumn":21},{"ruleId":"880","severity":1,"message":"881","line":48,"column":55,"nodeType":"882","messageId":"883","endLine":48,"endColumn":57},{"ruleId":"880","severity":1,"message":"884","line":56,"column":74,"nodeType":"882","messageId":"883","endLine":56,"endColumn":76},{"ruleId":"885","severity":1,"message":"886","line":128,"column":75,"nodeType":"887","messageId":"888","endLine":128,"endColumn":77},{"ruleId":"880","severity":1,"message":"881","line":128,"column":85,"nodeType":"882","messageId":"883","endLine":128,"endColumn":87},{"ruleId":"885","severity":1,"message":"886","line":128,"column":90,"nodeType":"887","messageId":"888","endLine":128,"endColumn":92},{"ruleId":"859","severity":1,"message":"889","line":7,"column":10,"nodeType":"861","messageId":"862","endLine":7,"endColumn":28},{"ruleId":"859","severity":1,"message":"890","line":7,"column":110,"nodeType":"861","messageId":"862","endLine":7,"endColumn":125},{"ruleId":"859","severity":1,"message":"891","line":20,"column":5,"nodeType":"861","messageId":"862","endLine":20,"endColumn":32},{"ruleId":"859","severity":1,"message":"892","line":23,"column":5,"nodeType":"861","messageId":"862","endLine":23,"endColumn":34},{"ruleId":"859","severity":1,"message":"893","line":24,"column":5,"nodeType":"861","messageId":"862","endLine":24,"endColumn":34},{"ruleId":"859","severity":1,"message":"894","line":25,"column":5,"nodeType":"861","messageId":"862","endLine":25,"endColumn":31},{"ruleId":"895","severity":1,"message":"896","line":30,"column":8,"nodeType":"897","endLine":30,"endColumn":16,"suggestions":"898"},{"ruleId":"859","severity":1,"message":"899","line":33,"column":13,"nodeType":"861","messageId":"862","endLine":33,"endColumn":20},{"ruleId":"859","severity":1,"message":"900","line":48,"column":21,"nodeType":"861","messageId":"862","endLine":48,"endColumn":30},{"ruleId":"859","severity":1,"message":"901","line":48,"column":32,"nodeType":"861","messageId":"862","endLine":48,"endColumn":37},{"ruleId":"859","severity":1,"message":"902","line":4,"column":5,"nodeType":"861","messageId":"862","endLine":4,"endColumn":20},{"ruleId":"859","severity":1,"message":"903","line":8,"column":5,"nodeType":"861","messageId":"862","endLine":8,"endColumn":21},{"ruleId":"859","severity":1,"message":"904","line":6,"column":5,"nodeType":"861","messageId":"862","endLine":6,"endColumn":29},{"ruleId":"859","severity":1,"message":"902","line":9,"column":5,"nodeType":"861","messageId":"862","endLine":9,"endColumn":20},{"ruleId":"859","severity":1,"message":"903","line":10,"column":5,"nodeType":"861","messageId":"862","endLine":10,"endColumn":21},{"ruleId":"859","severity":1,"message":"905","line":11,"column":5,"nodeType":"861","messageId":"862","endLine":11,"endColumn":30},{"ruleId":"859","severity":1,"message":"906","line":13,"column":5,"nodeType":"861","messageId":"862","endLine":13,"endColumn":19},{"ruleId":"859","severity":1,"message":"907","line":19,"column":5,"nodeType":"861","messageId":"862","endLine":19,"endColumn":17},{"ruleId":"880","severity":1,"message":"881","line":34,"column":35,"nodeType":"882","messageId":"883","endLine":34,"endColumn":37},{"ruleId":"859","severity":1,"message":"908","line":6,"column":8,"nodeType":"861","messageId":"862","endLine":6,"endColumn":21},{"ruleId":"895","severity":1,"message":"909","line":23,"column":8,"nodeType":"897","endLine":23,"endColumn":14,"suggestions":"910"},{"ruleId":"895","severity":1,"message":"911","line":28,"column":8,"nodeType":"897","endLine":28,"endColumn":14,"suggestions":"912"},{"ruleId":"880","severity":1,"message":"881","line":50,"column":22,"nodeType":"882","messageId":"883","endLine":50,"endColumn":24},{"ruleId":"859","severity":1,"message":"913","line":8,"column":8,"nodeType":"861","messageId":"862","endLine":8,"endColumn":22},{"ruleId":"859","severity":1,"message":"914","line":10,"column":10,"nodeType":"861","messageId":"862","endLine":10,"endColumn":21},{"ruleId":"880","severity":1,"message":"881","line":19,"column":30,"nodeType":"882","messageId":"883","endLine":19,"endColumn":32},{"ruleId":"895","severity":1,"message":"911","line":20,"column":8,"nodeType":"897","endLine":20,"endColumn":19,"suggestions":"915"},{"ruleId":"895","severity":1,"message":"916","line":25,"column":8,"nodeType":"897","endLine":25,"endColumn":10,"suggestions":"917"},{"ruleId":"880","severity":1,"message":"884","line":32,"column":79,"nodeType":"882","messageId":"883","endLine":32,"endColumn":81},{"ruleId":"859","severity":1,"message":"918","line":2,"column":63,"nodeType":"861","messageId":"862","endLine":2,"endColumn":77},{"ruleId":"859","severity":1,"message":"919","line":2,"column":79,"nodeType":"861","messageId":"862","endLine":2,"endColumn":87},{"ruleId":"859","severity":1,"message":"920","line":2,"column":89,"nodeType":"861","messageId":"862","endLine":2,"endColumn":99},{"ruleId":"859","severity":1,"message":"907","line":9,"column":10,"nodeType":"861","messageId":"862","endLine":9,"endColumn":22},{"ruleId":"859","severity":1,"message":"921","line":9,"column":24,"nodeType":"861","messageId":"862","endLine":9,"endColumn":41},{"ruleId":"880","severity":1,"message":"881","line":23,"column":48,"nodeType":"882","messageId":"883","endLine":23,"endColumn":50},{"ruleId":"895","severity":1,"message":"911","line":24,"column":8,"nodeType":"897","endLine":24,"endColumn":24,"suggestions":"922"},{"ruleId":"895","severity":1,"message":"923","line":60,"column":8,"nodeType":"897","endLine":60,"endColumn":10,"suggestions":"924"},{"ruleId":"895","severity":1,"message":"925","line":73,"column":8,"nodeType":"897","endLine":73,"endColumn":15,"suggestions":"926"},{"ruleId":"859","severity":1,"message":"927","line":2,"column":5,"nodeType":"861","messageId":"862","endLine":2,"endColumn":25},{"ruleId":"859","severity":1,"message":"928","line":3,"column":5,"nodeType":"861","messageId":"862","endLine":3,"endColumn":25},{"ruleId":"859","severity":1,"message":"929","line":4,"column":5,"nodeType":"861","messageId":"862","endLine":4,"endColumn":22},{"ruleId":"859","severity":1,"message":"930","line":8,"column":5,"nodeType":"861","messageId":"862","endLine":8,"endColumn":22},{"ruleId":"859","severity":1,"message":"931","line":9,"column":5,"nodeType":"861","messageId":"862","endLine":9,"endColumn":22},{"ruleId":"859","severity":1,"message":"932","line":10,"column":5,"nodeType":"861","messageId":"862","endLine":10,"endColumn":19},{"ruleId":"859","severity":1,"message":"933","line":11,"column":5,"nodeType":"861","messageId":"862","endLine":11,"endColumn":20},{"ruleId":"859","severity":1,"message":"927","line":3,"column":5,"nodeType":"861","messageId":"862","endLine":3,"endColumn":25},{"ruleId":"859","severity":1,"message":"928","line":4,"column":5,"nodeType":"861","messageId":"862","endLine":4,"endColumn":25},{"ruleId":"859","severity":1,"message":"929","line":5,"column":5,"nodeType":"861","messageId":"862","endLine":5,"endColumn":22},{"ruleId":"859","severity":1,"message":"930","line":9,"column":5,"nodeType":"861","messageId":"862","endLine":9,"endColumn":22},{"ruleId":"859","severity":1,"message":"931","line":10,"column":5,"nodeType":"861","messageId":"862","endLine":10,"endColumn":22},{"ruleId":"859","severity":1,"message":"932","line":11,"column":5,"nodeType":"861","messageId":"862","endLine":11,"endColumn":19},{"ruleId":"859","severity":1,"message":"934","line":18,"column":5,"nodeType":"861","messageId":"862","endLine":18,"endColumn":26},{"ruleId":"859","severity":1,"message":"935","line":19,"column":5,"nodeType":"861","messageId":"862","endLine":19,"endColumn":26},{"ruleId":"859","severity":1,"message":"936","line":20,"column":5,"nodeType":"861","messageId":"862","endLine":20,"endColumn":23},{"ruleId":"859","severity":1,"message":"879","line":86,"column":30,"nodeType":"861","messageId":"862","endLine":86,"endColumn":38},{"ruleId":"859","severity":1,"message":"937","line":4,"column":10,"nodeType":"861","messageId":"862","endLine":4,"endColumn":22},{"ruleId":"859","severity":1,"message":"938","line":6,"column":38,"nodeType":"861","messageId":"862","endLine":6,"endColumn":42},{"ruleId":"859","severity":1,"message":"939","line":6,"column":63,"nodeType":"861","messageId":"862","endLine":6,"endColumn":66},{"ruleId":"859","severity":1,"message":"940","line":10,"column":27,"nodeType":"861","messageId":"862","endLine":10,"endColumn":39},{"ruleId":"859","severity":1,"message":"933","line":12,"column":10,"nodeType":"861","messageId":"862","endLine":12,"endColumn":25},{"ruleId":"859","severity":1,"message":"941","line":12,"column":27,"nodeType":"861","messageId":"862","endLine":12,"endColumn":46},{"ruleId":"895","severity":1,"message":"942","line":33,"column":8,"nodeType":"897","endLine":33,"endColumn":10,"suggestions":"943"},{"ruleId":"859","severity":1,"message":"944","line":36,"column":13,"nodeType":"861","messageId":"862","endLine":36,"endColumn":22},{"ruleId":"859","severity":1,"message":"945","line":36,"column":24,"nodeType":"861","messageId":"862","endLine":36,"endColumn":31},{"ruleId":"859","severity":1,"message":"946","line":36,"column":57,"nodeType":"861","messageId":"862","endLine":36,"endColumn":67},{"ruleId":"895","severity":1,"message":"947","line":65,"column":8,"nodeType":"897","endLine":65,"endColumn":59,"suggestions":"948"},{"ruleId":"949","severity":1,"message":"950","line":156,"column":53,"nodeType":"865","endLine":156,"endColumn":56},{"ruleId":"859","severity":1,"message":"951","line":4,"column":10,"nodeType":"861","messageId":"862","endLine":4,"endColumn":21},{"ruleId":"859","severity":1,"message":"952","line":5,"column":10,"nodeType":"861","messageId":"862","endLine":5,"endColumn":23},{"ruleId":"859","severity":1,"message":"953","line":6,"column":10,"nodeType":"861","messageId":"862","endLine":6,"endColumn":14},{"ruleId":"859","severity":1,"message":"954","line":7,"column":10,"nodeType":"861","messageId":"862","endLine":7,"endColumn":15},{"ruleId":"859","severity":1,"message":"955","line":18,"column":21,"nodeType":"861","messageId":"862","endLine":18,"endColumn":31},{"ruleId":"859","severity":1,"message":"899","line":22,"column":40,"nodeType":"861","messageId":"862","endLine":22,"endColumn":47},{"ruleId":"895","severity":1,"message":"956","line":48,"column":8,"nodeType":"897","endLine":48,"endColumn":56,"suggestions":"957"},{"ruleId":"895","severity":1,"message":"958","line":32,"column":8,"nodeType":"897","endLine":32,"endColumn":37,"suggestions":"959"},{"ruleId":"859","severity":1,"message":"952","line":3,"column":10,"nodeType":"861","messageId":"862","endLine":3,"endColumn":23},{"ruleId":"880","severity":1,"message":"881","line":19,"column":51,"nodeType":"882","messageId":"883","endLine":19,"endColumn":53},{"ruleId":"855","replacedBy":"960"},{"ruleId":"857","replacedBy":"961"},{"ruleId":"859","severity":1,"message":"962","line":3,"column":10,"nodeType":"861","messageId":"862","endLine":3,"endColumn":16},{"ruleId":"859","severity":1,"message":"963","line":3,"column":23,"nodeType":"861","messageId":"862","endLine":3,"endColumn":32},{"ruleId":"859","severity":1,"message":"964","line":3,"column":34,"nodeType":"861","messageId":"862","endLine":3,"endColumn":45},{"ruleId":"859","severity":1,"message":"953","line":5,"column":10,"nodeType":"861","messageId":"862","endLine":5,"endColumn":14},{"ruleId":"863","severity":1,"message":"864","line":22,"column":13,"nodeType":"865","messageId":"866","endLine":25,"endColumn":14,"fix":"965"},{"ruleId":"859","severity":1,"message":"952","line":2,"column":10,"nodeType":"861","messageId":"862","endLine":2,"endColumn":23},{"ruleId":"859","severity":1,"message":"963","line":3,"column":23,"nodeType":"861","messageId":"862","endLine":3,"endColumn":32},{"ruleId":"859","severity":1,"message":"966","line":3,"column":34,"nodeType":"861","messageId":"862","endLine":3,"endColumn":37},{"ruleId":"859","severity":1,"message":"967","line":3,"column":39,"nodeType":"861","messageId":"862","endLine":3,"endColumn":42},{"ruleId":"855","replacedBy":"968"},{"ruleId":"857","replacedBy":"969"},{"ruleId":"859","severity":1,"message":"970","line":1,"column":17,"nodeType":"861","messageId":"862","endLine":1,"endColumn":25},{"ruleId":"859","severity":1,"message":"971","line":3,"column":10,"nodeType":"861","messageId":"862","endLine":3,"endColumn":15},{"ruleId":"859","severity":1,"message":"972","line":3,"column":17,"nodeType":"861","messageId":"862","endLine":3,"endColumn":21},{"ruleId":"859","severity":1,"message":"962","line":3,"column":70,"nodeType":"861","messageId":"862","endLine":3,"endColumn":76},{"ruleId":"859","severity":1,"message":"939","line":3,"column":78,"nodeType":"861","messageId":"862","endLine":3,"endColumn":81},{"ruleId":"895","severity":1,"message":"973","line":24,"column":8,"nodeType":"897","endLine":24,"endColumn":27,"suggestions":"974"},{"ruleId":"859","severity":1,"message":"970","line":1,"column":17,"nodeType":"861","messageId":"862","endLine":1,"endColumn":25},{"ruleId":"859","severity":1,"message":"952","line":5,"column":10,"nodeType":"861","messageId":"862","endLine":5,"endColumn":23},{"ruleId":"859","severity":1,"message":"953","line":6,"column":10,"nodeType":"861","messageId":"862","endLine":6,"endColumn":14},{"ruleId":"859","severity":1,"message":"975","line":7,"column":20,"nodeType":"861","messageId":"862","endLine":7,"endColumn":25},{"ruleId":"859","severity":1,"message":"976","line":7,"column":27,"nodeType":"861","messageId":"862","endLine":7,"endColumn":37},{"ruleId":"859","severity":1,"message":"977","line":17,"column":11,"nodeType":"861","messageId":"862","endLine":17,"endColumn":21},{"ruleId":"859","severity":1,"message":"978","line":19,"column":46,"nodeType":"861","messageId":"862","endLine":19,"endColumn":59},{"ruleId":"859","severity":1,"message":"976","line":3,"column":27,"nodeType":"861","messageId":"862","endLine":3,"endColumn":37},{"ruleId":"859","severity":1,"message":"979","line":4,"column":8,"nodeType":"861","messageId":"862","endLine":4,"endColumn":14},{"ruleId":"859","severity":1,"message":"970","line":1,"column":17,"nodeType":"861","messageId":"862","endLine":1,"endColumn":25},{"ruleId":"859","severity":1,"message":"980","line":6,"column":8,"nodeType":"861","messageId":"862","endLine":6,"endColumn":14},{"ruleId":"859","severity":1,"message":"981","line":11,"column":13,"nodeType":"861","messageId":"862","endLine":11,"endColumn":20},{"ruleId":"859","severity":1,"message":"967","line":3,"column":10,"nodeType":"861","messageId":"862","endLine":3,"endColumn":13},{"ruleId":"859","severity":1,"message":"966","line":3,"column":15,"nodeType":"861","messageId":"862","endLine":3,"endColumn":18},{"ruleId":"859","severity":1,"message":"976","line":3,"column":27,"nodeType":"861","messageId":"862","endLine":3,"endColumn":37},{"ruleId":"859","severity":1,"message":"979","line":4,"column":8,"nodeType":"861","messageId":"862","endLine":4,"endColumn":14},{"ruleId":"859","severity":1,"message":"970","line":1,"column":17,"nodeType":"861","messageId":"862","endLine":1,"endColumn":25},{"ruleId":"859","severity":1,"message":"982","line":1,"column":27,"nodeType":"861","messageId":"862","endLine":1,"endColumn":36},{"ruleId":"859","severity":1,"message":"983","line":2,"column":10,"nodeType":"861","messageId":"862","endLine":2,"endColumn":21},{"ruleId":"859","severity":1,"message":"984","line":2,"column":23,"nodeType":"861","messageId":"862","endLine":2,"endColumn":34},{"ruleId":"859","severity":1,"message":"985","line":5,"column":10,"nodeType":"861","messageId":"862","endLine":5,"endColumn":28},{"ruleId":"859","severity":1,"message":"970","line":1,"column":17,"nodeType":"861","messageId":"862","endLine":1,"endColumn":25},{"ruleId":"859","severity":1,"message":"982","line":1,"column":27,"nodeType":"861","messageId":"862","endLine":1,"endColumn":36},{"ruleId":"859","severity":1,"message":"983","line":2,"column":10,"nodeType":"861","messageId":"862","endLine":2,"endColumn":21},{"ruleId":"859","severity":1,"message":"984","line":2,"column":23,"nodeType":"861","messageId":"862","endLine":2,"endColumn":34},{"ruleId":"859","severity":1,"message":"985","line":5,"column":10,"nodeType":"861","messageId":"862","endLine":5,"endColumn":28},{"ruleId":"859","severity":1,"message":"970","line":1,"column":17,"nodeType":"861","messageId":"862","endLine":1,"endColumn":25},{"ruleId":"859","severity":1,"message":"983","line":4,"column":10,"nodeType":"861","messageId":"862","endLine":4,"endColumn":21},{"ruleId":"859","severity":1,"message":"984","line":4,"column":23,"nodeType":"861","messageId":"862","endLine":4,"endColumn":34},{"ruleId":"859","severity":1,"message":"908","line":5,"column":8,"nodeType":"861","messageId":"862","endLine":5,"endColumn":21},{"ruleId":"859","severity":1,"message":"986","line":6,"column":8,"nodeType":"861","messageId":"862","endLine":6,"endColumn":21},{"ruleId":"859","severity":1,"message":"987","line":7,"column":10,"nodeType":"861","messageId":"862","endLine":7,"endColumn":26},{"ruleId":"859","severity":1,"message":"988","line":7,"column":28,"nodeType":"861","messageId":"862","endLine":7,"endColumn":46},{"ruleId":"880","severity":1,"message":"881","line":18,"column":46,"nodeType":"882","messageId":"883","endLine":18,"endColumn":48},{"ruleId":"895","severity":1,"message":"911","line":19,"column":8,"nodeType":"897","endLine":19,"endColumn":22,"suggestions":"989"},{"ruleId":"859","severity":1,"message":"990","line":28,"column":21,"nodeType":"861","messageId":"862","endLine":28,"endColumn":31},{"ruleId":"880","severity":1,"message":"884","line":29,"column":81,"nodeType":"882","messageId":"883","endLine":29,"endColumn":83},{"ruleId":"880","severity":1,"message":"881","line":80,"column":79,"nodeType":"882","messageId":"883","endLine":80,"endColumn":81},{"ruleId":"859","severity":1,"message":"970","line":1,"column":17,"nodeType":"861","messageId":"862","endLine":1,"endColumn":25},{"ruleId":"859","severity":1,"message":"982","line":1,"column":27,"nodeType":"861","messageId":"862","endLine":1,"endColumn":36},{"ruleId":"859","severity":1,"message":"991","line":2,"column":16,"nodeType":"861","messageId":"862","endLine":2,"endColumn":22},{"ruleId":"859","severity":1,"message":"953","line":3,"column":10,"nodeType":"861","messageId":"862","endLine":3,"endColumn":14},{"ruleId":"859","severity":1,"message":"983","line":4,"column":10,"nodeType":"861","messageId":"862","endLine":4,"endColumn":21},{"ruleId":"859","severity":1,"message":"984","line":4,"column":23,"nodeType":"861","messageId":"862","endLine":4,"endColumn":34},{"ruleId":"880","severity":1,"message":"881","line":51,"column":39,"nodeType":"882","messageId":"883","endLine":51,"endColumn":41},{"ruleId":"880","severity":1,"message":"881","line":75,"column":31,"nodeType":"882","messageId":"883","endLine":75,"endColumn":33},{"ruleId":"880","severity":1,"message":"884","line":100,"column":47,"nodeType":"882","messageId":"883","endLine":100,"endColumn":49},{"ruleId":"880","severity":1,"message":"884","line":113,"column":51,"nodeType":"882","messageId":"883","endLine":113,"endColumn":53},{"ruleId":"880","severity":1,"message":"884","line":125,"column":53,"nodeType":"882","messageId":"883","endLine":125,"endColumn":55},{"ruleId":"880","severity":1,"message":"884","line":141,"column":53,"nodeType":"882","messageId":"883","endLine":141,"endColumn":55},{"ruleId":"880","severity":1,"message":"884","line":141,"column":94,"nodeType":"882","messageId":"883","endLine":141,"endColumn":96},{"ruleId":"859","severity":1,"message":"970","line":1,"column":28,"nodeType":"861","messageId":"862","endLine":1,"endColumn":36},{"ruleId":"859","severity":1,"message":"952","line":2,"column":10,"nodeType":"861","messageId":"862","endLine":2,"endColumn":23},{"ruleId":"859","severity":1,"message":"971","line":3,"column":10,"nodeType":"861","messageId":"862","endLine":3,"endColumn":15},{"ruleId":"859","severity":1,"message":"991","line":3,"column":17,"nodeType":"861","messageId":"862","endLine":3,"endColumn":23},{"ruleId":"859","severity":1,"message":"938","line":3,"column":46,"nodeType":"861","messageId":"862","endLine":3,"endColumn":50},{"ruleId":"859","severity":1,"message":"972","line":3,"column":52,"nodeType":"861","messageId":"862","endLine":3,"endColumn":56},{"ruleId":"859","severity":1,"message":"992","line":3,"column":58,"nodeType":"861","messageId":"862","endLine":3,"endColumn":67},{"ruleId":"859","severity":1,"message":"983","line":4,"column":10,"nodeType":"861","messageId":"862","endLine":4,"endColumn":21},{"ruleId":"859","severity":1,"message":"984","line":4,"column":23,"nodeType":"861","messageId":"862","endLine":4,"endColumn":34},{"ruleId":"859","severity":1,"message":"993","line":8,"column":10,"nodeType":"861","messageId":"862","endLine":8,"endColumn":22},{"ruleId":"859","severity":1,"message":"994","line":8,"column":24,"nodeType":"861","messageId":"862","endLine":8,"endColumn":37},{"ruleId":"859","severity":1,"message":"995","line":8,"column":39,"nodeType":"861","messageId":"862","endLine":8,"endColumn":52},{"ruleId":"859","severity":1,"message":"996","line":9,"column":10,"nodeType":"861","messageId":"862","endLine":9,"endColumn":30},{"ruleId":"895","severity":1,"message":"997","line":32,"column":8,"nodeType":"897","endLine":32,"endColumn":37,"suggestions":"998"},{"ruleId":"999","severity":1,"message":"1000","line":47,"column":90,"nodeType":"1001","messageId":"1002","endLine":47,"endColumn":91,"suggestions":"1003"},{"ruleId":"999","severity":1,"message":"1000","line":47,"column":102,"nodeType":"1001","messageId":"1002","endLine":47,"endColumn":103,"suggestions":"1004"},{"ruleId":"859","severity":1,"message":"984","line":4,"column":10,"nodeType":"861","messageId":"862","endLine":4,"endColumn":21},{"ruleId":"859","severity":1,"message":"982","line":1,"column":17,"nodeType":"861","messageId":"862","endLine":1,"endColumn":26},{"ruleId":"859","severity":1,"message":"970","line":1,"column":28,"nodeType":"861","messageId":"862","endLine":1,"endColumn":36},{"ruleId":"859","severity":1,"message":"952","line":2,"column":10,"nodeType":"861","messageId":"862","endLine":2,"endColumn":23},{"ruleId":"859","severity":1,"message":"971","line":3,"column":10,"nodeType":"861","messageId":"862","endLine":3,"endColumn":15},{"ruleId":"859","severity":1,"message":"991","line":3,"column":17,"nodeType":"861","messageId":"862","endLine":3,"endColumn":23},{"ruleId":"859","severity":1,"message":"966","line":3,"column":30,"nodeType":"861","messageId":"862","endLine":3,"endColumn":33},{"ruleId":"859","severity":1,"message":"972","line":3,"column":46,"nodeType":"861","messageId":"862","endLine":3,"endColumn":50},{"ruleId":"859","severity":1,"message":"983","line":4,"column":10,"nodeType":"861","messageId":"862","endLine":4,"endColumn":21},{"ruleId":"859","severity":1,"message":"984","line":4,"column":23,"nodeType":"861","messageId":"862","endLine":4,"endColumn":34},{"ruleId":"859","severity":1,"message":"1005","line":5,"column":8,"nodeType":"861","messageId":"862","endLine":5,"endColumn":15},{"ruleId":"859","severity":1,"message":"980","line":6,"column":8,"nodeType":"861","messageId":"862","endLine":6,"endColumn":14},{"ruleId":"859","severity":1,"message":"1006","line":7,"column":10,"nodeType":"861","messageId":"862","endLine":7,"endColumn":20},{"ruleId":"859","severity":1,"message":"1007","line":7,"column":22,"nodeType":"861","messageId":"862","endLine":7,"endColumn":31},{"ruleId":"859","severity":1,"message":"983","line":3,"column":10,"nodeType":"861","messageId":"862","endLine":3,"endColumn":21},{"ruleId":"859","severity":1,"message":"984","line":3,"column":23,"nodeType":"861","messageId":"862","endLine":3,"endColumn":34},{"ruleId":"1008","severity":1,"message":"1009","line":12,"column":24,"nodeType":"1010","messageId":"1011","endLine":12,"endColumn":26},{"ruleId":"880","severity":1,"message":"881","line":20,"column":35,"nodeType":"882","messageId":"883","endLine":20,"endColumn":37},{"ruleId":"859","severity":1,"message":"982","line":2,"column":27,"nodeType":"861","messageId":"862","endLine":2,"endColumn":36},{"ruleId":"859","severity":1,"message":"953","line":3,"column":10,"nodeType":"861","messageId":"862","endLine":3,"endColumn":14},{"ruleId":"859","severity":1,"message":"991","line":4,"column":16,"nodeType":"861","messageId":"862","endLine":4,"endColumn":22},{"ruleId":"859","severity":1,"message":"983","line":5,"column":10,"nodeType":"861","messageId":"862","endLine":5,"endColumn":21},{"ruleId":"859","severity":1,"message":"984","line":5,"column":23,"nodeType":"861","messageId":"862","endLine":5,"endColumn":34},{"ruleId":"859","severity":1,"message":"1005","line":6,"column":8,"nodeType":"861","messageId":"862","endLine":6,"endColumn":15},{"ruleId":"859","severity":1,"message":"908","line":8,"column":8,"nodeType":"861","messageId":"862","endLine":8,"endColumn":21},{"ruleId":"859","severity":1,"message":"1012","line":9,"column":10,"nodeType":"861","messageId":"862","endLine":9,"endColumn":28},{"ruleId":"859","severity":1,"message":"1013","line":9,"column":30,"nodeType":"861","messageId":"862","endLine":9,"endColumn":43},{"ruleId":"859","severity":1,"message":"1014","line":10,"column":10,"nodeType":"861","messageId":"862","endLine":10,"endColumn":30},{"ruleId":"859","severity":1,"message":"1015","line":11,"column":8,"nodeType":"861","messageId":"862","endLine":11,"endColumn":18},{"ruleId":"859","severity":1,"message":"953","line":3,"column":10,"nodeType":"861","messageId":"862","endLine":3,"endColumn":14},{"ruleId":"859","severity":1,"message":"1016","line":4,"column":34,"nodeType":"861","messageId":"862","endLine":4,"endColumn":39},{"ruleId":"859","severity":1,"message":"983","line":5,"column":10,"nodeType":"861","messageId":"862","endLine":5,"endColumn":21},{"ruleId":"859","severity":1,"message":"984","line":5,"column":23,"nodeType":"861","messageId":"862","endLine":5,"endColumn":34},{"ruleId":"859","severity":1,"message":"1005","line":6,"column":8,"nodeType":"861","messageId":"862","endLine":6,"endColumn":15},{"ruleId":"859","severity":1,"message":"980","line":7,"column":8,"nodeType":"861","messageId":"862","endLine":7,"endColumn":14},{"ruleId":"859","severity":1,"message":"908","line":8,"column":8,"nodeType":"861","messageId":"862","endLine":8,"endColumn":21},{"ruleId":"859","severity":1,"message":"1012","line":9,"column":10,"nodeType":"861","messageId":"862","endLine":9,"endColumn":28},{"ruleId":"859","severity":1,"message":"1017","line":9,"column":30,"nodeType":"861","messageId":"862","endLine":9,"endColumn":42},{"ruleId":"859","severity":1,"message":"1014","line":10,"column":10,"nodeType":"861","messageId":"862","endLine":10,"endColumn":30},{"ruleId":"859","severity":1,"message":"1018","line":11,"column":10,"nodeType":"861","messageId":"862","endLine":11,"endColumn":13},{"ruleId":"859","severity":1,"message":"1019","line":48,"column":24,"nodeType":"861","messageId":"862","endLine":48,"endColumn":36},{"ruleId":"880","severity":1,"message":"884","line":123,"column":23,"nodeType":"882","messageId":"883","endLine":123,"endColumn":25},{"ruleId":"880","severity":1,"message":"884","line":131,"column":22,"nodeType":"882","messageId":"883","endLine":131,"endColumn":24},{"ruleId":"859","severity":1,"message":"927","line":3,"column":5,"nodeType":"861","messageId":"862","endLine":3,"endColumn":25},{"ruleId":"859","severity":1,"message":"928","line":4,"column":5,"nodeType":"861","messageId":"862","endLine":4,"endColumn":25},{"ruleId":"859","severity":1,"message":"929","line":5,"column":5,"nodeType":"861","messageId":"862","endLine":5,"endColumn":22},{"ruleId":"859","severity":1,"message":"991","line":2,"column":10,"nodeType":"861","messageId":"862","endLine":2,"endColumn":16},{"ruleId":"859","severity":1,"message":"983","line":3,"column":10,"nodeType":"861","messageId":"862","endLine":3,"endColumn":21},{"ruleId":"859","severity":1,"message":"984","line":3,"column":23,"nodeType":"861","messageId":"862","endLine":3,"endColumn":34},{"ruleId":"859","severity":1,"message":"953","line":5,"column":10,"nodeType":"861","messageId":"862","endLine":5,"endColumn":14},{"ruleId":"859","severity":1,"message":"1020","line":6,"column":10,"nodeType":"861","messageId":"862","endLine":6,"endColumn":25},{"ruleId":"859","severity":1,"message":"1021","line":6,"column":27,"nodeType":"861","messageId":"862","endLine":6,"endColumn":45},{"ruleId":"859","severity":1,"message":"944","line":18,"column":21,"nodeType":"861","messageId":"862","endLine":18,"endColumn":30},{"ruleId":"859","severity":1,"message":"901","line":18,"column":32,"nodeType":"861","messageId":"862","endLine":18,"endColumn":37},{"ruleId":"859","severity":1,"message":"970","line":1,"column":40,"nodeType":"861","messageId":"862","endLine":1,"endColumn":48},{"ruleId":"859","severity":1,"message":"971","line":3,"column":10,"nodeType":"861","messageId":"862","endLine":3,"endColumn":15},{"ruleId":"859","severity":1,"message":"991","line":3,"column":17,"nodeType":"861","messageId":"862","endLine":3,"endColumn":23},{"ruleId":"859","severity":1,"message":"967","line":3,"column":25,"nodeType":"861","messageId":"862","endLine":3,"endColumn":28},{"ruleId":"859","severity":1,"message":"966","line":3,"column":30,"nodeType":"861","messageId":"862","endLine":3,"endColumn":33},{"ruleId":"859","severity":1,"message":"972","line":3,"column":46,"nodeType":"861","messageId":"862","endLine":3,"endColumn":50},{"ruleId":"859","severity":1,"message":"920","line":3,"column":52,"nodeType":"861","messageId":"862","endLine":3,"endColumn":62},{"ruleId":"859","severity":1,"message":"1022","line":23,"column":11,"nodeType":"861","messageId":"862","endLine":23,"endColumn":15},{"ruleId":"895","severity":1,"message":"1023","line":34,"column":8,"nodeType":"897","endLine":34,"endColumn":27,"suggestions":"1024"},{"ruleId":"880","severity":1,"message":"884","line":53,"column":54,"nodeType":"882","messageId":"883","endLine":53,"endColumn":56},{"ruleId":"859","severity":1,"message":"984","line":3,"column":10,"nodeType":"861","messageId":"862","endLine":3,"endColumn":21},{"ruleId":"859","severity":1,"message":"991","line":3,"column":17,"nodeType":"861","messageId":"862","endLine":3,"endColumn":23},{"ruleId":"859","severity":1,"message":"944","line":13,"column":13,"nodeType":"861","messageId":"862","endLine":13,"endColumn":22},{"ruleId":"859","severity":1,"message":"945","line":13,"column":24,"nodeType":"861","messageId":"862","endLine":13,"endColumn":31},{"ruleId":"859","severity":1,"message":"1025","line":13,"column":39,"nodeType":"861","messageId":"862","endLine":13,"endColumn":44},{"ruleId":"859","severity":1,"message":"970","line":1,"column":17,"nodeType":"861","messageId":"862","endLine":1,"endColumn":25},{"ruleId":"859","severity":1,"message":"982","line":1,"column":27,"nodeType":"861","messageId":"862","endLine":1,"endColumn":36},{"ruleId":"859","severity":1,"message":"983","line":2,"column":10,"nodeType":"861","messageId":"862","endLine":2,"endColumn":21},{"ruleId":"859","severity":1,"message":"971","line":3,"column":10,"nodeType":"861","messageId":"862","endLine":3,"endColumn":15},{"ruleId":"859","severity":1,"message":"972","line":3,"column":17,"nodeType":"861","messageId":"862","endLine":3,"endColumn":21},{"ruleId":"859","severity":1,"message":"962","line":3,"column":70,"nodeType":"861","messageId":"862","endLine":3,"endColumn":76},{"ruleId":"859","severity":1,"message":"939","line":3,"column":78,"nodeType":"861","messageId":"862","endLine":3,"endColumn":81},{"ruleId":"859","severity":1,"message":"1026","line":3,"column":83,"nodeType":"861","messageId":"862","endLine":3,"endColumn":101},{"ruleId":"859","severity":1,"message":"1027","line":7,"column":10,"nodeType":"861","messageId":"862","endLine":7,"endColumn":22},{"ruleId":"859","severity":1,"message":"879","line":16,"column":13,"nodeType":"861","messageId":"862","endLine":16,"endColumn":21},{"ruleId":"1028","severity":2,"message":"1029","line":25,"column":31,"nodeType":"861","endLine":25,"endColumn":41},{"ruleId":"880","severity":1,"message":"881","line":24,"column":22,"nodeType":"882","messageId":"883","endLine":24,"endColumn":24},{"ruleId":"880","severity":1,"message":"881","line":24,"column":48,"nodeType":"882","messageId":"883","endLine":24,"endColumn":50},{"ruleId":"880","severity":1,"message":"881","line":24,"column":81,"nodeType":"882","messageId":"883","endLine":24,"endColumn":83},{"ruleId":"880","severity":1,"message":"881","line":25,"column":30,"nodeType":"882","messageId":"883","endLine":25,"endColumn":32},{"ruleId":"880","severity":1,"message":"881","line":26,"column":46,"nodeType":"882","messageId":"883","endLine":26,"endColumn":48},{"ruleId":"880","severity":1,"message":"881","line":27,"column":48,"nodeType":"882","messageId":"883","endLine":27,"endColumn":50},{"ruleId":"880","severity":1,"message":"881","line":50,"column":22,"nodeType":"882","messageId":"883","endLine":50,"endColumn":24},{"ruleId":"880","severity":1,"message":"881","line":58,"column":141,"nodeType":"882","messageId":"883","endLine":58,"endColumn":143},{"ruleId":"859","severity":1,"message":"1030","line":2,"column":10,"nodeType":"861","messageId":"862","endLine":2,"endColumn":20},{"ruleId":"859","severity":1,"message":"982","line":3,"column":29,"nodeType":"861","messageId":"862","endLine":3,"endColumn":38},{"ruleId":"859","severity":1,"message":"1031","line":3,"column":40,"nodeType":"861","messageId":"862","endLine":3,"endColumn":46},{"ruleId":"859","severity":1,"message":"908","line":7,"column":8,"nodeType":"861","messageId":"862","endLine":7,"endColumn":21},{"ruleId":"859","severity":1,"message":"1032","line":30,"column":45,"nodeType":"861","messageId":"862","endLine":30,"endColumn":55},{"ruleId":"880","severity":1,"message":"881","line":61,"column":80,"nodeType":"882","messageId":"883","endLine":61,"endColumn":82},{"ruleId":"880","severity":1,"message":"881","line":65,"column":23,"nodeType":"882","messageId":"883","endLine":65,"endColumn":25},{"ruleId":"880","severity":1,"message":"881","line":63,"column":72,"nodeType":"882","messageId":"883","endLine":63,"endColumn":74},{"ruleId":"880","severity":1,"message":"881","line":67,"column":17,"nodeType":"882","messageId":"883","endLine":67,"endColumn":19},{"ruleId":"859","severity":1,"message":"1016","line":3,"column":40,"nodeType":"861","messageId":"862","endLine":3,"endColumn":45},{"ruleId":"859","severity":1,"message":"1032","line":31,"column":45,"nodeType":"861","messageId":"862","endLine":31,"endColumn":55},{"ruleId":"859","severity":1,"message":"982","line":2,"column":29,"nodeType":"861","messageId":"862","endLine":2,"endColumn":38},{"ruleId":"859","severity":1,"message":"1033","line":4,"column":23,"nodeType":"861","messageId":"862","endLine":4,"endColumn":31},{"ruleId":"859","severity":1,"message":"1034","line":25,"column":23,"nodeType":"861","messageId":"862","endLine":25,"endColumn":35},{"ruleId":"859","severity":1,"message":"982","line":2,"column":29,"nodeType":"861","messageId":"862","endLine":2,"endColumn":38},{"ruleId":"859","severity":1,"message":"1031","line":2,"column":40,"nodeType":"861","messageId":"862","endLine":2,"endColumn":46},{"ruleId":"859","severity":1,"message":"1035","line":16,"column":21,"nodeType":"861","messageId":"862","endLine":16,"endColumn":31},{"ruleId":"859","severity":1,"message":"953","line":6,"column":10,"nodeType":"861","messageId":"862","endLine":6,"endColumn":14},{"ruleId":"880","severity":1,"message":"881","line":64,"column":83,"nodeType":"882","messageId":"883","endLine":64,"endColumn":85},{"ruleId":"880","severity":1,"message":"881","line":68,"column":26,"nodeType":"882","messageId":"883","endLine":68,"endColumn":28},{"ruleId":"880","severity":1,"message":"881","line":129,"column":63,"nodeType":"882","messageId":"883","endLine":129,"endColumn":65},{"ruleId":"880","severity":1,"message":"881","line":130,"column":91,"nodeType":"882","messageId":"883","endLine":130,"endColumn":93},{"ruleId":"880","severity":1,"message":"881","line":136,"column":63,"nodeType":"882","messageId":"883","endLine":136,"endColumn":65},{"ruleId":"880","severity":1,"message":"881","line":138,"column":58,"nodeType":"882","messageId":"883","endLine":138,"endColumn":60},{"ruleId":"880","severity":1,"message":"881","line":139,"column":60,"nodeType":"882","messageId":"883","endLine":139,"endColumn":62},{"ruleId":"880","severity":1,"message":"881","line":140,"column":67,"nodeType":"882","messageId":"883","endLine":140,"endColumn":69},{"ruleId":"880","severity":1,"message":"881","line":147,"column":47,"nodeType":"882","messageId":"883","endLine":147,"endColumn":49},{"ruleId":"880","severity":1,"message":"881","line":134,"column":63,"nodeType":"882","messageId":"883","endLine":134,"endColumn":65},{"ruleId":"880","severity":1,"message":"881","line":135,"column":91,"nodeType":"882","messageId":"883","endLine":135,"endColumn":93},{"ruleId":"880","severity":1,"message":"881","line":141,"column":63,"nodeType":"882","messageId":"883","endLine":141,"endColumn":65},{"ruleId":"880","severity":1,"message":"881","line":143,"column":58,"nodeType":"882","messageId":"883","endLine":143,"endColumn":60},{"ruleId":"880","severity":1,"message":"881","line":144,"column":60,"nodeType":"882","messageId":"883","endLine":144,"endColumn":62},{"ruleId":"880","severity":1,"message":"881","line":145,"column":67,"nodeType":"882","messageId":"883","endLine":145,"endColumn":69},{"ruleId":"880","severity":1,"message":"881","line":152,"column":47,"nodeType":"882","messageId":"883","endLine":152,"endColumn":49},{"ruleId":"880","severity":1,"message":"881","line":57,"column":72,"nodeType":"882","messageId":"883","endLine":57,"endColumn":74},{"ruleId":"880","severity":1,"message":"881","line":61,"column":21,"nodeType":"882","messageId":"883","endLine":61,"endColumn":23},{"ruleId":"880","severity":1,"message":"881","line":21,"column":35,"nodeType":"882","messageId":"883","endLine":21,"endColumn":37},{"ruleId":"895","severity":1,"message":"1036","line":61,"column":8,"nodeType":"897","endLine":61,"endColumn":18,"suggestions":"1037"},{"ruleId":"895","severity":1,"message":"1038","line":67,"column":8,"nodeType":"897","endLine":67,"endColumn":15,"suggestions":"1039"},{"ruleId":"859","severity":1,"message":"991","line":3,"column":10,"nodeType":"861","messageId":"862","endLine":3,"endColumn":16},{"ruleId":"859","severity":1,"message":"920","line":3,"column":36,"nodeType":"861","messageId":"862","endLine":3,"endColumn":46},{"ruleId":"859","severity":1,"message":"1016","line":3,"column":59,"nodeType":"861","messageId":"862","endLine":3,"endColumn":64},{"ruleId":"859","severity":1,"message":"1005","line":7,"column":8,"nodeType":"861","messageId":"862","endLine":7,"endColumn":15},{"ruleId":"859","severity":1,"message":"1022","line":11,"column":11,"nodeType":"861","messageId":"862","endLine":11,"endColumn":15},{"ruleId":"859","severity":1,"message":"901","line":19,"column":21,"nodeType":"861","messageId":"862","endLine":19,"endColumn":26},{"ruleId":"880","severity":1,"message":"884","line":48,"column":41,"nodeType":"882","messageId":"883","endLine":48,"endColumn":43},{"ruleId":"949","severity":1,"message":"950","line":55,"column":29,"nodeType":"865","endLine":56,"endColumn":57},{"ruleId":"949","severity":1,"message":"950","line":70,"column":25,"nodeType":"865","endLine":71,"endColumn":52},{"ruleId":"880","severity":1,"message":"881","line":10,"column":34,"nodeType":"882","messageId":"883","endLine":10,"endColumn":36},{"ruleId":"859","severity":1,"message":"982","line":2,"column":17,"nodeType":"861","messageId":"862","endLine":2,"endColumn":26},{"ruleId":"859","severity":1,"message":"944","line":9,"column":13,"nodeType":"861","messageId":"862","endLine":9,"endColumn":22},{"ruleId":"859","severity":1,"message":"899","line":9,"column":30,"nodeType":"861","messageId":"862","endLine":9,"endColumn":37},{"ruleId":"880","severity":1,"message":"884","line":25,"column":46,"nodeType":"882","messageId":"883","endLine":25,"endColumn":48},{"ruleId":"859","severity":1,"message":"982","line":2,"column":17,"nodeType":"861","messageId":"862","endLine":2,"endColumn":26},{"ruleId":"859","severity":1,"message":"939","line":3,"column":52,"nodeType":"861","messageId":"862","endLine":3,"endColumn":55},{"ruleId":"859","severity":1,"message":"944","line":10,"column":13,"nodeType":"861","messageId":"862","endLine":10,"endColumn":22},{"ruleId":"859","severity":1,"message":"899","line":10,"column":30,"nodeType":"861","messageId":"862","endLine":10,"endColumn":37},{"ruleId":"1040","severity":1,"message":"1041","line":44,"column":67,"nodeType":"882","messageId":"1042","endLine":44,"endColumn":68},{"ruleId":"1040","severity":1,"message":"1041","line":44,"column":75,"nodeType":"882","messageId":"1042","endLine":44,"endColumn":76},{"ruleId":"1040","severity":1,"message":"1041","line":60,"column":67,"nodeType":"882","messageId":"1042","endLine":60,"endColumn":68},{"ruleId":"1040","severity":1,"message":"1041","line":60,"column":75,"nodeType":"882","messageId":"1042","endLine":60,"endColumn":76},{"ruleId":"895","severity":1,"message":"1043","line":25,"column":8,"nodeType":"897","endLine":25,"endColumn":21,"suggestions":"1044"},{"ruleId":"895","severity":1,"message":"1045","line":30,"column":8,"nodeType":"897","endLine":30,"endColumn":19,"suggestions":"1046"},{"ruleId":"895","severity":1,"message":"1043","line":23,"column":8,"nodeType":"897","endLine":23,"endColumn":21,"suggestions":"1047"},{"ruleId":"859","severity":1,"message":"982","line":2,"column":29,"nodeType":"861","messageId":"862","endLine":2,"endColumn":38},{"ruleId":"859","severity":1,"message":"982","line":2,"column":29,"nodeType":"861","messageId":"862","endLine":2,"endColumn":38},{"ruleId":"859","severity":1,"message":"951","line":4,"column":10,"nodeType":"861","messageId":"862","endLine":4,"endColumn":21},"no-native-reassign",["1048"],"no-negated-in-lhs",["1049"],"no-unused-vars","'PlaceOrderScreen' is defined but never used.","Identifier","unusedVar","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","noTargetBlank",{"range":"1050","text":"1051"},{"range":"1052","text":"1051"},{"range":"1053","text":"1051"},{"range":"1054","text":"1051"},{"range":"1055","text":"1051"},"'top' is assigned a value but never used.",{"range":"1056","text":"1051"},{"range":"1057","text":"1051"},{"range":"1058","text":"1051"},{"range":"1059","text":"1051"},"'CartContext' is defined but never used.","'category' is assigned a value but never used.","'userInfo' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","'orderCreateReducer' is defined but never used.","'orderPayReducer' is defined but never used.","'PRODUCT_UPDATE_IMAGES_RESET' is defined but never used.","'PRODUCT_CREATE_REVIEW_REQUEST' is defined but never used.","'PRODUCT_CREATE_REVIEW_SUCCESS' is defined but never used.","'PRODUCT_CREATE_REVIEW_FAIL' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'user.isStaff'. Either include them or remove the dependency array.","ArrayExpression",["1060"],"'refetch' is assigned a value but never used.","'isSuccess' is assigned a value but never used.","'reset' is assigned a value but never used.","'CART_GET_CLOVER' is defined but never used.","'CART_PUSH_CLOVER' is defined but never used.","'CART_SAVE_PAYMENT_METHOD' is defined but never used.","'SHIPPING_INFO_PUSH_CLOVER' is defined but never used.","'CART_LOAD_USER' is defined but never used.","'CLOVER_RESET' is defined but never used.","'FormContainer' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'redirect'. Either include them or remove the dependency array.",["1061"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["1062"],"'ProtectedRoute' is defined but never used.","'UserContext' is defined but never used.",["1063"],"React Hook useEffect has a missing dependency: 'updateCart'. Either include it or remove the dependency array.",["1064"],"'DropdownButton' is defined but never used.","'Dropdown' is defined but never used.","'InputGroup' is defined but never used.","'CART_SET_DISCOUNT' is defined but never used.",["1065"],"React Hook useEffect has missing dependencies: 'cardCvv', 'cardDate', 'cardNumber', and 'cardPostalCode'. Either include them or remove the dependency array.",["1066"],"React Hook useEffect has missing dependencies: 'history' and 'updateCart'. Either include them or remove the dependency array.",["1067"],"'ORDER_CREATE_REQUEST' is defined but never used.","'ORDER_CREATE_SUCCESS' is defined but never used.","'ORDER_CREATE_FAIL' is defined but never used.","'ORDER_PAY_REQUEST' is defined but never used.","'ORDER_PAY_SUCCESS' is defined but never used.","'ORDER_PAY_FAIL' is defined but never used.","'ORDER_PAY_RESET' is defined but never used.","'ORDER_DELIVER_REQUEST' is defined but never used.","'ORDER_DELIVER_SUCCESS' is defined but never used.","'ORDER_DELIVER_FAIL' is defined but never used.","'PayPalButton' is defined but never used.","'Card' is defined but never used.","'Nav' is defined but never used.","'deliverOrder' is defined but never used.","'ORDER_DELIVER_RESET' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'orderID'. Either include them or remove the dependency array.",["1068"],"'isLoading' is assigned a value but never used.","'isError' is assigned a value but never used.","'labelError' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'labelMutation.data', 'orderID', 'refetch', and 'refundMutation.data'. Either include them or remove the dependency array.",["1069"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useMutation' is defined but never used.","'LinkContainer' is defined but never used.","'Link' is defined but never used.","'toUSD' is defined but never used.","'setSuccess' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userInfo'. Either include it or remove the dependency array.",["1070"],"React Hook useEffect has a missing dependency: 'user.token'. Either include it or remove the dependency array.",["1071"],["1048"],["1049"],"'Navbar' is defined but never used.","'Container' is defined but never used.","'NavDropdown' is defined but never used.",{"range":"1072","text":"1051"},"'Col' is defined but never used.","'Row' is defined but never used.",["1048"],["1049"],"'useState' is defined but never used.","'Table' is defined but never used.","'Form' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["1073"],"'Image' is defined but never used.","'Breadcrumb' is defined but never used.","'categoryId' is assigned a value but never used.","'errorProducts' is assigned a value but never used.","'Rating' is defined but never used.","'Loader' is defined but never used.","'loading' is assigned a value but never used.","'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'getCategoryDetails' is defined but never used.","'CheckoutSteps' is defined but never used.","'saveShippingInfo' is defined but never used.","'saveShippingMethod' is defined but never used.",["1074"],"'setMethods' is assigned a value but never used.","'Button' is defined but never used.","'ListGroup' is defined but never used.","'listProducts' is defined but never used.","'deleteProduct' is defined but never used.","'createProduct' is defined but never used.","'PRODUCT_CREATE_RESET' is defined but never used.","React Hook useEffect has a missing dependency: 'refetch'. Either include it or remove the dependency array.",["1075"],"no-useless-escape","Unnecessary escape character: \\\".","TemplateElement","unnecessaryEscape",["1076","1077"],["1078","1079"],"'Message' is defined but never used.","'getAverage' is defined but never used.","'getLowInv' is defined but never used.","array-callback-return","Array.prototype.sort() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'listProductDetails' is defined but never used.","'updateProduct' is defined but never used.","'PRODUCT_UPDATE_RESET' is defined but never used.","'ExampleDoc' is defined but never used.","'Modal' is defined but never used.","'updateImages' is defined but never used.","'set' is defined but never used.","'queryLoading' is assigned a value but never used.","'addWishListItem' is defined but never used.","'removeWishListItem' is defined but never used.","'user' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'refetch' and 'remove'. Either include them or remove the dependency array.",["1080"],"'error' is assigned a value but never used.","'useAccordionToggle' is defined but never used.","'listMyOrders' is defined but never used.","react-hooks/rules-of-hooks","React Hook \"useReducer\" is called in function \"userContextProvider\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","'modelNames' is defined but never used.","'useRef' is defined but never used.","'queryError' is assigned a value but never used.","'useQuery' is defined but never used.","'setAvailable' is assigned a value but never used.","'setBrandID' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user.cartItems'. Either include it or remove the dependency array.",["1081"],"React Hook useEffect has missing dependencies: 'user._id' and 'userUpdate'. Either include them or remove the dependency array.",["1082"],"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","React Hook useEffect has missing dependencies: 'offset' and 'start'. Either include them or remove the dependency array.",["1083"],"React Hook useEffect has missing dependencies: 'end' and 'offset'. Either include them or remove the dependency array.",["1084"],["1085"],"no-global-assign","no-unsafe-negation",[3545,3545]," rel=\"noreferrer\"",[3853,3853],[4153,4153],[4455,4455],[4759,4759],[9884,9884],[10701,10701],[11510,11510],[14834,14834],{"desc":"1086","fix":"1087"},{"desc":"1088","fix":"1089"},{"desc":"1090","fix":"1091"},{"desc":"1092","fix":"1093"},{"desc":"1094","fix":"1095"},{"desc":"1096","fix":"1097"},{"desc":"1098","fix":"1099"},{"desc":"1100","fix":"1101"},{"desc":"1102","fix":"1103"},{"desc":"1104","fix":"1105"},{"desc":"1106","fix":"1107"},{"desc":"1108","fix":"1109"},[885,885],{"desc":"1110","fix":"1111"},{"desc":"1112","fix":"1113"},{"desc":"1114","fix":"1115"},{"messageId":"1116","fix":"1117","desc":"1118"},{"messageId":"1119","fix":"1120","desc":"1121"},{"messageId":"1116","fix":"1122","desc":"1118"},{"messageId":"1119","fix":"1123","desc":"1121"},{"desc":"1124","fix":"1125"},{"desc":"1126","fix":"1127"},{"desc":"1128","fix":"1129"},{"desc":"1130","fix":"1131"},{"desc":"1132","fix":"1133"},{"desc":"1130","fix":"1134"},"Update the dependencies array to be: [cartID, history, user.isStaff]",{"range":"1135","text":"1136"},"Update the dependencies array to be: [history, redirect, user]",{"range":"1137","text":"1138"},"Update the dependencies array to be: [history, user]",{"range":"1139","text":"1140"},"Update the dependencies array to be: [cartItems, history]",{"range":"1141","text":"1142"},"Update the dependencies array to be: [updateCart]",{"range":"1143","text":"1144"},"Update the dependencies array to be: [history, shippingMethod]",{"range":"1145","text":"1146"},"Update the dependencies array to be: [cardCvv, cardDate, cardNumber, cardPostalCode]",{"range":"1147","text":"1148"},"Update the dependencies array to be: [history, order, updateCart]",{"range":"1149","text":"1150"},"Update the dependencies array to be: [dispatch, orderID]",{"range":"1151","text":"1152"},"Update the dependencies array to be: [dispatch, labelMutation.data, labelMutation.isSuccess, orderID, refetch, refundMutation.data, refundMutation.isSuccess]",{"range":"1153","text":"1154"},"Update the dependencies array to be: [user, userId, dispatch, successUpdate, history, userInfo]",{"range":"1155","text":"1156"},"Update the dependencies array to be: [dispatch, history, user.token, userInfo]",{"range":"1157","text":"1158"},"Update the dependencies array to be: [dispatch, history, userInfo]",{"range":"1159","text":"1160"},"Update the dependencies array to be: [history, shippingInfo]",{"range":"1161","text":"1162"},"Update the dependencies array to be: [keyword, pageNumber, brands, refetch]",{"range":"1163","text":"1164"},"removeEscape",{"range":"1165","text":"1166"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"1167","text":"1168"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"1169","text":"1166"},{"range":"1170","text":"1168"},"Update the dependencies array to be: [history, refetch, remove, userInfo]",{"range":"1171","text":"1172"},"Update the dependencies array to be: [user._id, user.cartItems]",{"range":"1173","text":"1174"},"Update the dependencies array to be: [state, user._id, userUpdate]",{"range":"1175","text":"1176"},"Update the dependencies array to be: [offset, start, startString]",{"range":"1177","text":"1178"},"Update the dependencies array to be: [end, endString, offset]",{"range":"1179","text":"1180"},{"range":"1181","text":"1178"},[1217,1225],"[cartID, history, user.isStaff]",[897,903],"[history, redirect, user]",[1102,1108],"[history, user]",[858,869],"[cartItems, history]",[1019,1021],"[updateCart]",[1107,1123],"[history, shippingMethod]",[2512,2514],"[cardCvv, cardDate, cardNumber, cardPostalCode]",[2869,2876],"[history, order, updateCart]",[1350,1352],"[dispatch, orderID]",[2432,2483],"[dispatch, labelMutation.data, labelMutation.isSuccess, orderID, refetch, refundMutation.data, refundMutation.isSuccess]",[1835,1883],"[user, userId, dispatch, successUpdate, history, userInfo]",[1080,1109],"[dispatch, history, user.token, userInfo]",[926,945],"[dispatch, history, userInfo]",[869,883],"[history, shippingInfo]",[1495,1524],"[keyword, pageNumber, brands, refetch]",[2261,2262],"",[2261,2261],"\\",[2273,2274],[2273,2273],[1016,1035],"[history, refetch, remove, userInfo]",[2476,2486],"[user._id, user.cartItems]",[2690,2697],"[state, user._id, userUpdate]",[963,976],"[offset, start, startString]",[1140,1151],"[end, endString, offset]",[803,816]]