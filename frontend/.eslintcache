[{"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\index.js":"1","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\App.js":"2","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\Footer.js":"3","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\Header.js":"4","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\HomeScreen.js":"5","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\Product.js":"6","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\Rating.js":"7","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\ProductScreen.js":"8","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\store.js":"9","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\reducers\\productReducers.js":"10","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\constants\\productConstants.js":"11","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\actions\\productActions.js":"12","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\Loader.js":"13","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\Message.js":"14","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\CartScreen.js":"15","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\reducers\\cartReducers.js":"16","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\constants\\cartConstants.js":"17","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\actions\\cartActions.js":"18","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\reducers\\userReducers.js":"19","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\constants\\userConstants.js":"20","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\LoginScreen.js":"21","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\FormContainer.js":"22","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\actions\\userActions.js":"23","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\RegisterScreen.js":"24","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\ProfileScreen.js":"25","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\ShippingScreen.js":"26","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\CheckoutSteps.js":"27","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\PaymentScreen.js":"28","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\PlaceOrderScreen.js":"29","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\reducers\\orderReducers.js":"30","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\constants\\orderConstants.js":"31","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\actions\\orderActions.js":"32","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\OrderScreen.js":"33","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\UserListScreen.js":"34","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\UserEditScreen.js":"35","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\ProductListScreen.js":"36","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\ProductEditScreen.js":"37","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\OrderListScreen.js":"38","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\SearchBox.js":"39","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\Paginate.js":"40","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\ProductCarousel.js":"41","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\Meta.js":"42","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\SubNav.js":"43","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\ProfileNav.js":"44","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\OrderHistoryScreen.js":"45","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\static\\ReturnStatic.js":"46","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\static\\ShippingStatic.js":"47","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\static\\InternationalStatic.js":"48","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\static\\AboutStatic.js":"49","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\CategoryScreen.js":"50","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\reducers\\categoryReducers.js":"51","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\constants\\categoryConstants.js":"52","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\actions\\categoryActions.js":"53","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\ProductDetailsCard.js":"54","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\Suggested.js":"55","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\ProductSimpleCard.js":"56","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\Breadcrumbs.js":"57","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\BreadCrumbs.js":"58","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\ProductCrumbs.js":"59","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\TopThree.js":"60","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\CategoryCard.js":"61","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\ShippingMethodScreen.js":"62","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\SideCart.js":"63","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\SearchScreen.js":"64","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\UserNavBar.js":"65","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\static\\ContactStatic.js":"66","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\static\\CategoryStatic.js":"67","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\ReportsScreen.js":"68","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\reducers\\reportReducers.js":"69","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\constants\\reportConstants.js":"70","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\actions\\reportActions.js":"71","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\ImageDisplay.js":"72","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\UploadsScreen.js":"73","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\ImageEditer.js":"74","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\actions\\shippingActions.js":"75","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\InventoryListScreen.js":"76","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\HeartList.js":"77","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\UnshippedScreen.js":"78","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\WishListScreen.js":"79","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\WishListCard.js":"80","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\EmployeeHistoryScreen.js":"81","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\contexts\\userContext.js":"82","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\contexts\\UserContext.js":"83","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\MainNav.js":"84","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\EditPassword.js":"85","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\EditAddress.js":"86","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\ProtectedRoute.js":"87","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\StaffRoute.js":"88","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\CategoryListScreen.js":"89","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\CategoryEditScreen.js":"90","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\CategoryNewScreen.js":"91","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\ProductNewScreen.js":"92","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\InventoryEditScreen.js":"93","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\InventoryNewScreen.js":"94","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\BrandEditScreen.js":"95","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\DiscountListScreen.js":"96","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\DiscountNewScreen.js":"97","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\DiscountEditScreen.js":"98","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\BrandListScreen.js":"99","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\BrandNewScreen.js":"100"},{"size":802,"mtime":1637083963937,"results":"101","hashOfConfig":"102"},{"size":6218,"mtime":1637388815857,"results":"103","hashOfConfig":"102"},{"size":4615,"mtime":1636868939196,"results":"104","hashOfConfig":"102"},{"size":1902,"mtime":1636743370520,"results":"105","hashOfConfig":"102"},{"size":16376,"mtime":1633137666505,"results":"106","hashOfConfig":"102"},{"size":996,"mtime":1620495042564,"results":"107","hashOfConfig":"102"},{"size":2466,"mtime":1620417061041,"results":"108","hashOfConfig":"102"},{"size":7873,"mtime":1637454498861,"results":"109","hashOfConfig":"102"},{"size":3407,"mtime":1631902035880,"results":"110","hashOfConfig":"102"},{"size":5642,"mtime":1635719197281,"results":"111","hashOfConfig":"102"},{"size":2152,"mtime":1631901713484,"results":"112","hashOfConfig":"102"},{"size":7681,"mtime":1637453939994,"results":"113","hashOfConfig":"102"},{"size":505,"mtime":1637172196417,"results":"114","hashOfConfig":"102"},{"size":292,"mtime":1620760173724,"results":"115","hashOfConfig":"102"},{"size":9677,"mtime":1635722565478,"results":"116","hashOfConfig":"102"},{"size":3649,"mtime":1632113384698,"results":"117","hashOfConfig":"102"},{"size":1012,"mtime":1632113267094,"results":"118","hashOfConfig":"102"},{"size":4848,"mtime":1635722765592,"results":"119","hashOfConfig":"102"},{"size":4249,"mtime":1635764078626,"results":"120","hashOfConfig":"102"},{"size":1722,"mtime":1635761832998,"results":"121","hashOfConfig":"102"},{"size":3648,"mtime":1636871330581,"results":"122","hashOfConfig":"102"},{"size":420,"mtime":1630427136171,"results":"123","hashOfConfig":"102"},{"size":9157,"mtime":1636054513944,"results":"124","hashOfConfig":"102"},{"size":5986,"mtime":1637256144235,"results":"125","hashOfConfig":"102"},{"size":1188,"mtime":1637027993216,"results":"126","hashOfConfig":"102"},{"size":11788,"mtime":1636393777907,"results":"127","hashOfConfig":"102"},{"size":1520,"mtime":1621534424477,"results":"128","hashOfConfig":"102"},{"size":14269,"mtime":1633310055064,"results":"129","hashOfConfig":"102"},{"size":7057,"mtime":1630196129623,"results":"130","hashOfConfig":"102"},{"size":2449,"mtime":1630279981628,"results":"131","hashOfConfig":"102"},{"size":1208,"mtime":1623944198402,"results":"132","hashOfConfig":"102"},{"size":3697,"mtime":1630433318842,"results":"133","hashOfConfig":"102"},{"size":18501,"mtime":1637083982730,"results":"134","hashOfConfig":"102"},{"size":5043,"mtime":1637166784981,"results":"135","hashOfConfig":"102"},{"size":4268,"mtime":1631126011943,"results":"136","hashOfConfig":"102"},{"size":6185,"mtime":1637429470786,"results":"137","hashOfConfig":"102"},{"size":9597,"mtime":1637433347030,"results":"138","hashOfConfig":"102"},{"size":5176,"mtime":1635766484600,"results":"139","hashOfConfig":"102"},{"size":1111,"mtime":1630340251361,"results":"140","hashOfConfig":"102"},{"size":681,"mtime":1637291044782,"results":"141","hashOfConfig":"102"},{"size":1432,"mtime":1626451990640,"results":"142","hashOfConfig":"102"},{"size":512,"mtime":1624643266661,"results":"143","hashOfConfig":"102"},{"size":916,"mtime":1631123001700,"results":"144","hashOfConfig":"102"},{"size":1301,"mtime":1626991913916,"results":"145","hashOfConfig":"102"},{"size":3794,"mtime":1630426357125,"results":"146","hashOfConfig":"102"},{"size":3554,"mtime":1630429390886,"results":"147","hashOfConfig":"102"},{"size":21471,"mtime":1630429373189,"results":"148","hashOfConfig":"102"},{"size":19507,"mtime":1630429382367,"results":"149","hashOfConfig":"102"},{"size":7077,"mtime":1630513944288,"results":"150","hashOfConfig":"102"},{"size":2992,"mtime":1630423621264,"results":"151","hashOfConfig":"102"},{"size":1773,"mtime":1627656991277,"results":"152","hashOfConfig":"102"},{"size":642,"mtime":1627656916264,"results":"153","hashOfConfig":"102"},{"size":1988,"mtime":1637454107632,"results":"154","hashOfConfig":"102"},{"size":1801,"mtime":1637339312131,"results":"155","hashOfConfig":"102"},{"size":1144,"mtime":1627644593661,"results":"156","hashOfConfig":"102"},{"size":1023,"mtime":1635714333033,"results":"157","hashOfConfig":"102"},{"size":1429,"mtime":1627649332710,"results":"158","hashOfConfig":"159"},{"size":1429,"mtime":1636670965574,"results":"160","hashOfConfig":"102"},{"size":1606,"mtime":1630427676884,"results":"161","hashOfConfig":"102"},{"size":2607,"mtime":1635764597894,"results":"162","hashOfConfig":"102"},{"size":1136,"mtime":1631116376648,"results":"163","hashOfConfig":"102"},{"size":4996,"mtime":1633301251709,"results":"164","hashOfConfig":"102"},{"size":6043,"mtime":1632139136339,"results":"165","hashOfConfig":"102"},{"size":7144,"mtime":1633138996676,"results":"166","hashOfConfig":"102"},{"size":1438,"mtime":1636847092154,"results":"167","hashOfConfig":"102"},{"size":4054,"mtime":1631120302211,"results":"168","hashOfConfig":"102"},{"size":4877,"mtime":1631132690856,"results":"169","hashOfConfig":"102"},{"size":13896,"mtime":1635785687450,"results":"170","hashOfConfig":"102"},{"size":1098,"mtime":1635783791331,"results":"171","hashOfConfig":"102"},{"size":486,"mtime":1631381392448,"results":"172","hashOfConfig":"102"},{"size":1647,"mtime":1631409099814,"results":"173","hashOfConfig":"102"},{"size":2049,"mtime":1635715385524,"results":"174","hashOfConfig":"102"},{"size":2801,"mtime":1631906002596,"results":"175","hashOfConfig":"102"},{"size":6892,"mtime":1631903173312,"results":"176","hashOfConfig":"102"},{"size":1046,"mtime":1632521377956,"results":"177","hashOfConfig":"102"},{"size":6772,"mtime":1637429505938,"results":"178","hashOfConfig":"102"},{"size":1287,"mtime":1636054405857,"results":"179","hashOfConfig":"102"},{"size":2053,"mtime":1635773291963,"results":"180","hashOfConfig":"102"},{"size":970,"mtime":1636219564249,"results":"181","hashOfConfig":"102"},{"size":2306,"mtime":1636055085807,"results":"182","hashOfConfig":"102"},{"size":4316,"mtime":1636219444636,"results":"183","hashOfConfig":"102"},{"size":822,"mtime":1636673406034,"results":"184","hashOfConfig":"102"},{"size":1092,"mtime":1637511427853,"results":"185","hashOfConfig":"102"},{"size":4454,"mtime":1637511346725,"results":"186","hashOfConfig":"102"},{"size":3462,"mtime":1636774019753,"results":"187","hashOfConfig":"102"},{"size":6985,"mtime":1637081887580,"results":"188","hashOfConfig":"102"},{"size":570,"mtime":1637028078540,"results":"189","hashOfConfig":"102"},{"size":655,"mtime":1636868007230,"results":"190","hashOfConfig":"102"},{"size":6327,"mtime":1637429476177,"results":"191","hashOfConfig":"102"},{"size":7775,"mtime":1637433326970,"results":"192","hashOfConfig":"102"},{"size":7450,"mtime":1637432846394,"results":"193","hashOfConfig":"102"},{"size":8272,"mtime":1637432834631,"results":"194","hashOfConfig":"102"},{"size":9060,"mtime":1637433306129,"results":"195","hashOfConfig":"102"},{"size":8538,"mtime":1637432897487,"results":"196","hashOfConfig":"102"},{"size":5226,"mtime":1637433361378,"results":"197","hashOfConfig":"102"},{"size":6424,"mtime":1637434836873,"results":"198","hashOfConfig":"102"},{"size":7301,"mtime":1637453505370,"results":"199","hashOfConfig":"102"},{"size":7420,"mtime":1637453377208,"results":"200","hashOfConfig":"102"},{"size":5668,"mtime":1637429306949,"results":"201","hashOfConfig":"102"},{"size":5280,"mtime":1637432794567,"results":"202","hashOfConfig":"102"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},"1mym0e4",{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"205"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"222","messages":"223","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"205"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"205"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"205"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"205"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"205"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"205"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"205"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"205"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"205"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"205"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"205"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"205"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"205"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"205"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"205"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"293","messages":"294","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"205"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"311"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"205"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"205"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"332","messages":"333","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"334","messages":"335","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"205"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"205"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"c3pe4q",{"filePath":"342","messages":"343","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"205"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"205"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"205"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"205"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"205"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"205"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364","usedDeprecatedRules":"205"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"205"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"205"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383","usedDeprecatedRules":"205"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"205"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"389","messages":"390","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"391","messages":"392","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"205"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"205"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"205"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"205"},{"filePath":"405","messages":"406","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"411","messages":"412","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413","usedDeprecatedRules":"205"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"422","messages":"423","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"424","messages":"425","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"426","messages":"427","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"428","messages":"429","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"430","messages":"431","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"432","messages":"433","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"434","messages":"435","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"436","messages":"437","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"438","messages":"439","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"442","messages":"443","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\index.js",[],["444","445"],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\App.js",["446"],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\Header.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\HomeScreen.js",["447"],"import React, { useEffect } from 'react'\r\nimport { Button, Col, Container, Image, Row } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport Meta from '../components/Meta'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport \"../styles/HomeScreen.css\"\r\nimport TopThree from '../components/TopThree'\r\n\r\n\r\nconst HomeScreen = ({ match }) => {\r\n\r\n    // const { loading, error, products, page, pages } = useSelector(state => state.productList)\r\n    const { top } = useSelector(state => state.categoryTop)\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        // window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n        // dispatch(getTopCategories())\r\n\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <>\r\n            <Meta />\r\n            <div className=\"homePage\">\r\n                <Row className=\"\" style={{\r\n                    backgroundImage: \"url('/images/hero_image_only.png')\",\r\n                    // backgroundSize: \"100% 100%\",\r\n                    backgroundSize: \"cover\",\r\n                    backgroundPosition: \"center\",\r\n                    height: \"600px\",\r\n                    marginTop: \"-2px\"\r\n                }}>\r\n                    <Container className=\"\"\r\n                        style={{\r\n                            backgroundImage: \"url('/images/Hero_Headline.png')\",\r\n                            backgroundRepeat: \"no-repeat\",\r\n                            backgroundSize: \"contain\",\r\n                            height: \"320px\",\r\n                            fontSize: \"13px\",\r\n                            paddingTop: \"210px\",\r\n                            paddingLeft: \"50px\",\r\n                            marginTop: \"150px\",\r\n                        }}>\r\n                        <p className=\"text-light\"\r\n                            style={{ width: \"350px\" }}>\r\n                            Here at Coast, we are one big family of artists who love to create and serve our communit as best we can</p>\r\n                    </Container>\r\n                </Row>\r\n                <div style={{ position: \"absolute\", width: \"100vw\" }}>\r\n                    <Image src=\"/images/texture1_only.png\"\r\n                        style={{ height: \"80px\", position: \"absolute\", top: \"-35px\", left: \"-50px\", zIndex: 5 }}></Image>\r\n                </div>\r\n\r\n                <Row className=\"featured\" style={{ backgroundImage: \"url('/images/BG_Featured_section.png')\" }} >\r\n                    <Container>\r\n                        <Row className=\"pb-5\">\r\n\r\n                            <Col lg={6}>\r\n                                <Image src=\"/images/airbrush_withframe.png\"\r\n                                    style={{ width: \"100%\" }}\r\n                                    className=\"px-5\" />\r\n                            </Col>\r\n                            <Col lg={6} >\r\n                                <h2 className=\"mt-5 text-danger\">Featured Product</h2>\r\n                                <h3 className=\"mt-3\" style={{ letterSpacing: \"0px\" }}>IWATA Airbrush</h3>\r\n                                <p className=\"pr-5\">Grab your Iwata HP-TH2 Gravity Feed Dual Action Trigger Airbrush while the vault is still open</p>\r\n                                <Link to={`/product/DKTX81PVDX2C6`}  >\r\n                                    <Button>Shop Now</Button>\r\n                                </Link>\r\n                            </Col>\r\n                        </Row>\r\n                        <h1 className=\"text-center text-danger mb-5\">Top Products</h1>\r\n                        <TopThree className=\"my-5\" />\r\n                    </Container>\r\n                </Row >\r\n                <Row className=\"topCat\">\r\n                    <Container>\r\n                        {\r\n                            <Row className=\"my-5\">\r\n                                {[\r\n                                    { name: \"Makeup/Beauty\", url: \"607\", image: \"/images/Makeup.png\" },\r\n                                    { name: \"Automobile\", url: \"20\", image: \"/images/Automobile.png\" },\r\n                                    { name: \"Fine Arts\", url: \"22\", image: \"/images/FineArts.png\" },\r\n                                    { name: \"T-Shirts\", url: \"383\", image: \"/images/Tshirts.png\" }\r\n                                ].map(card => (\r\n                                    <Col key={card.name} xs='6' lg='3' className='p-4'>\r\n                                        <Link to={`/category/${card.url}`} className=\"linkBox\" >\r\n                                            <Image\r\n                                                className=\"mx-auto px-2\"\r\n                                                style={{ width: \"100%\", height: \"200px\", objectFit: \"contain\" }}\r\n                                                src={card.image}\r\n                                            />\r\n                                            <h5 className=\"redTextHover text-center my-4\">{card.name}</h5>\r\n                                        </Link>\r\n                                    </Col>\r\n                                ))}\r\n                            </Row>\r\n                        }\r\n                        <h1 className=\"text-center text-danger mb-3\">Top Categories</h1>\r\n                        {\r\n                            <Row className=\"my-5\">\r\n                                {[\r\n                                    { name: \"Leafing/Pinstripe\", url: \"21\", image: \"/images/Pinstripe.png\" },\r\n                                    { name: \"Hobby\", url: \"0\", image: \"/images/Hobby.png\" },\r\n                                    { name: \"Mural\", url: \"589\", image: \"/images/Mural.png\" },\r\n                                    { name: \"Model\", url: \"404\", image: \"/images/Model.png\" }\r\n                                ].map(card => (\r\n                                    <Col key={card.name} xs='6' lg='3' className='p-4'>\r\n                                        <Link to={`/category/${card.url}`} className=\"linkBox\" >\r\n                                            <Image\r\n                                                className=\"mx-auto px-2\"\r\n                                                style={{ width: \"100%\", height: \"200px\", objectFit: \"contain\" }}\r\n                                                src={card.image}\r\n                                            />\r\n                                            <h5 className=\"redTextHover text-center my-4\">{card.name}</h5>\r\n                                        </Link>\r\n                                    </Col>\r\n                                ))}\r\n                            </Row>\r\n                        }\r\n                    </Container>\r\n                </Row>\r\n                <Row className=\"topBrands\" >\r\n                    <Container>\r\n                        {\r\n                            <Row className=\"my-5\">\r\n                                {[\r\n                                    { image: \"/images/kolor.png\" },\r\n                                    { image: \"/images/Iwata.png\" },\r\n                                    { image: \"/images/3m.png\" },\r\n                                    { image: \"/images/CreateXColors.png\" }\r\n                                ].map(card => (\r\n                                    <Col key={card.image} xs='6' lg='3' className='p-4 text-center'>\r\n                                        <Link to={`/brands`} className=\"linkBox\" >\r\n                                            <Image\r\n                                                className=\"mx-auto yellowBorderHover\"\r\n                                                style={{ width: \"200px\", height: \"200px\", objectFit: \"contain\", padding: \"0px\" }}\r\n                                                src={card.image}\r\n                                            />\r\n                                        </Link>\r\n                                    </Col>\r\n                                ))}\r\n                            </Row>\r\n                        }\r\n                        <h1 className=\"text-center mb-3\">Top Brands</h1>\r\n                        {\r\n                            <Row className=\"my-5\">\r\n                                {[\r\n                                    { image: \"/images/Lumilor.png\" },\r\n                                    { image: \"/images/Paasche.png\" },\r\n                                    { image: \"/images/1shot.png\" },\r\n                                    { image: \"/images/MissionModels.png\" }\r\n                                ].map(card => (\r\n                                    <Col key={card.image} xs='6' lg='3' className='p-4 text-center'>\r\n                                        <Link to={`/brands`} className=\"linkBox\" >\r\n                                            <Image\r\n                                                className=\"mx-auto yellowBorderHover\"\r\n                                                style={{ width: \"200px\", height: \"200px\", objectFit: \"contain\", padding: \"0px\" }}\r\n                                                src={card.image}\r\n                                            />\r\n                                        </Link>\r\n                                    </Col>\r\n                                ))}\r\n                            </Row>\r\n                        }\r\n                    </Container>\r\n                </Row>\r\n                <Container className=\"mt-5 pt-4 pb-3\">\r\n                    <h6>Not Sure Where To Start?</h6>\r\n                    <h3 className=\"text-danger mb-4\">Watch Our Training Videos</h3>\r\n                    <Row className=\"my-5\">\r\n                        <Col lg={4}>\r\n                            <Link to={`https://www.youtube.com`} className=\"linkBox\" >\r\n                                <Image src=\"/images/Video_mixing.png\"\r\n                                    style={{ width: \"100%\" }} >\r\n                                </Image>\r\n                                <h5 className=\"mt-3 mb-0 text-center text-danger\">Mixing the House of Kolor Urethanes </h5>\r\n                                <p className=\"text-center\">With Dave Monning</p>\r\n                                <div className=\"overlayYellow\">\r\n                                    <Button className=\"middle\">Watch Video</Button>\r\n                                </div>\r\n                            </Link>\r\n\r\n                        </Col>\r\n                        <Col lg={4}>\r\n                            <Link to={`https://www.youtube.com`} className=\"linkBox\" >\r\n                                <Image src=\"/images/Vide_airbrush.png\"\r\n                                    style={{ width: \"100%\" }} />\r\n                                <h5 className=\"mt-3 mb-0 text-center text-danger\">Airbrush Overview </h5>\r\n                                <p className=\"text-center\">with Dave Monning</p>\r\n                                <div className=\"overlayYellow\">\r\n                                    <Button className=\"middle\">Watch Video</Button>\r\n                                </div>\r\n                            </Link>\r\n                        </Col>\r\n                        <Col lg={4}>\r\n                            <Link to={`https:www.youtube.com`} className=\"linkBox\" >\r\n                                <Image src=\"/images/Video_FlamingSkull.png\"\r\n                                    style={{ width: \"100%\" }} />\r\n                                <h5 className=\"mt-3 mb-0 text-center text-danger\">The \"Flaming\" Skull</h5>\r\n                                <p className=\"text-center\">Creating Skulls & Realistic Blue Fire w/ Craig Fraser</p>\r\n                                <div className=\"overlayYellow\">\r\n                                    <Button className=\"middle\">Watch Video</Button>\r\n                                </div>\r\n                            </Link>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n                <Row className=\"seeDave\" style={{ backgroundImage: \"url('/images/David_Section_BG.png')\", height: \"600px\" }}>\r\n                    {/* <Container > */}\r\n                    {/* <Row className=\"my-0\" style={{ height: \"500px\" }}> */}\r\n                    <Col lg={8}\r\n                        style={{\r\n                            backgroundImage: \"url('/images/David.png')\",\r\n                            backgroundSize: \"cover\"\r\n                        }}>\r\n                    </Col>\r\n                    <Col lg={4} className=\"pr-4\">\r\n                        <h3 className=\"\" style={{ letterSpacing: \"0px\" }}>Look Familiar?</h3>\r\n                        <h2 className=\"mt-5 mt-lg-0 mb-4 text-danger\">See David On</h2>\r\n                        <Image src=\"/images/Asset32.png\" style={{ width: \"120px\" }} />\r\n                        <Image src=\"/images/Asset33.png\" style={{ width: \"120px\" }} className=\"mx-2\" />\r\n                        <Image src=\"/images/Asset34.png\" style={{ width: \"120px\" }} />\r\n                        <p className=\"text-dark my-5\">Grab your Iwata HP-TH2 Gravity Feed Dual Action Trigger Airbrush while the vault is still open</p>\r\n                        <div className=\"ml-auto\">\r\n                            <Button>Shop Now</Button>\r\n                        </div>\r\n                    </Col>\r\n                    {/* </Row> */}\r\n                    <div style={{ position: \"absolute\", width: \"100vw\" }}>\r\n                        <Image src=\"/images/texture1_only.png\"\r\n                            style={{ height: \"80px\", position: \"absolute\", top: \"420px\", left: \"-50px\", zIndex: 5 }}></Image>\r\n                    </div>\r\n                    <div style={{ position: \"absolute\", width: \"100vw\" }}>\r\n                        <Image src=\"/images/David_favorite.png\"\r\n                            style={{ height: \"120px\", position: \"absolute\", top: \"450px\", left: \"50px\", zIndex: 5 }}></Image>\r\n                    </div>\r\n                    {/* </Container> */}\r\n                </Row>\r\n                <Row className=\"favorites mt-5 pt-5\">\r\n                    <Container className=\"mt-5 pt-5\">\r\n                        <TopThree />\r\n                    </Container>\r\n                </Row>\r\n                <Row className=\"instagram\">\r\n                    <Container >\r\n                        <h3 className=\"text-white mt-3\">Instagram</h3>\r\n                    </Container>\r\n                </Row>\r\n                <Row className=\"location\">\r\n                    <Container >\r\n                        <Row>\r\n                            <Col lg={6} className=\"my-5 mt-lg-0\">\r\n                                <Image src=\"/images/Map.png\"\r\n                                    style={{ width: \"100%\", paddingRight: \"60px\" }} />\r\n                            </Col>\r\n                            <Col lg={4} className=\"my-5 mt-lg-0 text-center text-lg-left\">\r\n                                <h3 className=\"text-danger\">Contact Us</h3>\r\n                                <p>lorem ipsum dolor sit amet, consecte adipiscing elit, sed diam laoreet</p>\r\n                                <i className=\"fas fa-map-marker-alt\"></i>\r\n                                <span className=\"ml-3 mb-0 font-weight-bold\">312 N Anaheim Blvd.</span>\r\n                                <p className=\"font-weight-bold\" style={{ marginLeft: \"28px\" }}>Anahiem CA 92805</p>\r\n                                <i className=\"fas fa-phone-alt\"></i>\r\n                                <span className=\"ml-3 font-weight-bold\">714-635-5557</span>\r\n                                <br />\r\n                                <br />\r\n                                <i className=\"fas fa-envelope\"></i>\r\n                                <span className=\"ml-3 font-weight-bold\">kustom@coastairbrush.com</span>\r\n                            </Col>\r\n                            <Col lg={2} className=\"my-5 mt-lg-0 text-center text-lg-left\">\r\n                                <h3 className=\"text-danger\">Hours</h3>\r\n                                <p className=\"font-weight-bold mb-0\">Mon, Fri, Sat:</p>\r\n                                <p>9:30am - 5:00pm</p>\r\n                                <p className=\"font-weight-bold mb-0\">Tues, Wed, Thur:</p>\r\n                                <p>9:30am - 6:00pm</p>\r\n                                <p>CLOSED SUNDAYS</p>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Row>\r\n            </div >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\Product.js",[],["448","449"],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\Rating.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\ProductScreen.js",["450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467"],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\store.js",["468","469"],"import { createStore, combineReducers, applyMiddleware, } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productUpdateImagesReducer, productReviewCreateReducer, productTopRatedReducer, productSuggestedReducer } from './reducers/productReducers'\r\nimport { cartReducer, cloverReducer } from './reducers/cartReducers'\r\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers'\r\nimport { orderCreateReducer, orderDeliverReducer, orderDetailsReducer, orderListMyReducer, orderListReducer, orderPayReducer } from './reducers/orderReducers'\r\nimport { categoryProductsReducer, categoryDetailsReducer, categoryTopReducer } from './reducers/categoryReducers'\r\nimport { reportAverageReducer, reportLowInvReducer } from './reducers/reportReducers'\r\n\r\nconst reducer = combineReducers({\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    clover: cloverReducer,\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n    productSuggested: productSuggestedReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productUpdateImages: productUpdateImagesReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    // orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    // orderPay: orderPayReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n    reportLowInv: reportLowInvReducer,\r\n    reportAverage: reportAverageReducer,\r\n    categoryDetails: categoryDetailsReducer,\r\n    categoryProducts: categoryProductsReducer,\r\n    categoryTop: categoryTopReducer,\r\n})\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n    ? JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n    ? JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst shippingInfoFromStorage = localStorage.getItem('shippingInfo')\r\n    ? JSON.parse(localStorage.getItem('shippingInfo')) : {}\r\n\r\nconst shippingMethodFromStorage = localStorage.getItem('shippingMethod')\r\n    ? JSON.parse(localStorage.getItem('shippingMethod')) : {}\r\n\r\n// const cloverOrderFromStorage = localStorage.getItem('cloverOrder')\r\n//     ? JSON.parse(localStorage.getItem('cloverOrder')) : null\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: userInfoFromStorage ? userInfoFromStorage.cart : cartItemsFromStorage,\r\n        shippingInfo: shippingInfoFromStorage,\r\n        shippingMethod: shippingMethodFromStorage,\r\n        // cloverOrder: cloverOrderFromStorage,\r\n    },\r\n    userLogin: { userInfo: userInfoFromStorage }\r\n}\r\n\r\n\r\nconst middleware = [thunk]\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\reducers\\productReducers.js",["470"],"import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_LIST_RESET,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DETAILS_RESET,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_IMAGES_RESET,\r\n    PRODUCT_UPDATE_IMAGES_REQUEST,\r\n    PRODUCT_UPDATE_IMAGES_SUCCESS,\r\n    PRODUCT_UPDATE_IMAGES_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n    PRODUCT_SUGGESTED_REQUEST,\r\n    PRODUCT_SUGGESTED_SUCCESS,\r\n    PRODUCT_SUGGESTED_FAIL\r\n} from '../constants/productConstants'\r\n\r\nexport const productListReducer = (state = { loading: true, products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_RESET:\r\n            return { loading: true }\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] }\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload.products,\r\n                pages: action.payload.pages,\r\n                page: action.payload.page\r\n            }\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDetailsReducer = (state = { loading: true, product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_RESET:\r\n            return { loading: true, product: {} }\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload }\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload, product: {} }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, success: false, error: action.payload }\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productUpdateImagesReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_IMAGES_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_UPDATE_IMAGES_SUCCESS:\r\n            return { loading: false, success: true, images: action.payload }\r\n        case PRODUCT_UPDATE_IMAGES_FAIL:\r\n            return { loading: false, success: false, error: action.payload }\r\n        case PRODUCT_UPDATE_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products: [] }\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload }\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productSuggestedReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_SUGGESTED_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_SUGGESTED_SUCCESS:\r\n            return { loading: false, suggested: action.payload }\r\n        case PRODUCT_SUGGESTED_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\actions\\productActions.js",["471","472","473"],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\Message.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\CartScreen.js",["474","475","476","477","478","479","480"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addToCart, cartToClover, cartToDB, loadCartFromDB, getClover, modifyCart, removeFromCart } from '../actions/cartActions'\r\nimport Message from '../components/Message'\r\nimport { Container, Row, Col, Image, ListGroup, Card, Button, ListGroupItem, Form } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { CART_LOAD_FROM_DB } from '../constants/cartConstants'\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n    const cartId = match.params.id\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const { cartItems } = useSelector(state => state.cart)\r\n    const { userInfo } = useSelector(state => state.userLogin)\r\n    const { cartFromDB } = useSelector(state => state.cart)\r\n\r\n    useEffect(() => {\r\n        if (cartFromDB == \"reset\") {\r\n            history.push(`/cart`)\r\n        }\r\n        else if (cartFromDB) {\r\n            history.push(`/cart/${cartFromDB}`)\r\n        } else {\r\n            if (cartId) {\r\n                if (window.confirm(`Clicking OK will override your cart with a new one\\nCancel to return to your existing cart`)) {\r\n                    dispatch(loadCartFromDB(cartId))\r\n                } else {\r\n                    history.push(`/cart`)\r\n                }\r\n            }\r\n        }\r\n    }, [cartFromDB])\r\n\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n    const checkoutHandler = () => {\r\n        // dispatch(getClover())\r\n        // dispatch(cartToClover())\r\n        // history.push('/login?redirect=shipping')\r\n        history.push('/shipping')\r\n    }\r\n    const sendCartHandler = () => {\r\n        dispatch(cartToDB())\r\n    }\r\n\r\n\r\n    return (\r\n        <Container className=\"my-5 py-3\">\r\n            <Row className=\"mt-5 mb-5\">\r\n                <Col lg=\"auto\">\r\n                    <h3 className=\"text-danger text-break m-0\">Shopping Cart</h3>\r\n                </Col>\r\n                <Col className=\"mt-3 mt-lg-auto\">\r\n                    <p className=\"my-0\">{cartId}</p>\r\n                </Col>\r\n            </Row>\r\n\r\n            {\r\n                cartItems.length === 0 ? (\r\n                    <Message>\r\n                        Your Cart is empty <Link to=\"/\"> Go Back</Link>\r\n                    </Message>\r\n                ) : (\r\n                    <Row>\r\n                        <Col lg={9}>\r\n                            <ListGroup>\r\n                                <ListGroup.Item className=\"mb-3 border-left-0 border-right-0 px-0\">\r\n                                    <Row>\r\n                                        <Col xs={4} lg={3} className=\"mb-3 mb-lg-0 my-auto d-none d-lg-block\">\r\n                                            <h6>Product</h6>\r\n                                        </Col>\r\n                                        <Col className=\"d-none d-lg-block my-auto\">\r\n                                        </Col>\r\n                                        <Col xs={4} lg={\"auto\"} className=\"text-center my-auto px-2\"\r\n                                            style={{ width: \"100px\" }}\r\n                                        >\r\n                                            <h6>Price</h6>\r\n                                        </Col>\r\n                                        <Col xs={4} lg={\"auto\"} className=\"text-center my-auto px-2\"\r\n                                            style={{ width: \"150px\" }}\r\n                                        >\r\n                                            <h6>Qty</h6>\r\n                                        </Col>\r\n                                        <Col xs={4} lg={\"auto\"} className=\"text-center my-auto px-2\"\r\n                                            style={{ width: \"100px\" }}\r\n                                        >\r\n                                            <h6>Total</h6>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                                {cartItems.map((item, index) => (\r\n                                    <ListGroup.Item key={index} className=\"mb-3 border-0 px-0\">\r\n                                        <Row>\r\n                                            <Col xs={12} lg={\"auto\"} className=\"text-center mb-3 mb-lg-0\"\r\n                                                style={{ width: \"100px\" }}\r\n                                            >\r\n                                                <Image src={\"https://www.coastairbrush.com/\" + item.image}\r\n                                                    alt={item.name} fluid rounded\r\n                                                // style={{ height: \"100px\" }} \r\n                                                />\r\n                                            </Col>\r\n                                            <Col xs={12} lg className=\"mb-2 my-lg-auto text-center text-lg-left\">\r\n                                                <Link to={`/product/${item.pID}`}>{item.name}</Link>\r\n                                            </Col>\r\n                                            <Col xs={4} lg={\"auto\"} className=\"text-center my-auto px-2\"\r\n                                                style={{ width: \"100px\" }}\r\n                                            >\r\n                                                {Number(item.price / 100).toLocaleString(\"en-US\", { style: \"currency\", currency: \"USD\" })}\r\n                                            </Col>\r\n                                            <Col xs={4} lg={\"auto\"} className=\"text-center my-auto px-0\"\r\n                                                style={{ width: \"150px\" }}\r\n                                            >\r\n                                                <Form.Control className='form-select mx-auto p-1'\r\n                                                    as='select' value={item.qty}\r\n                                                    onChange={(e) => dispatch(modifyCart(item.pID, e.target.value))}\r\n                                                    style={{ width: \"60px\" }}\r\n                                                >\r\n                                                    {[...Array(item.countInStock).keys()].map(x => (\r\n                                                        <option key={x + 1} value={x + 1}>{x + 1}</option>\r\n                                                    ))}\r\n                                                </Form.Control>\r\n                                                <Button className=\"p-2 m-0\"\r\n                                                    style={{ width: \"30px\" }}\r\n                                                    type='button' variant='light' onClick={\r\n                                                        () => removeFromCartHandler(item.pID)}\r\n                                                ><i className='fas fa-trash' />\r\n                                                </Button>\r\n                                            </Col>\r\n\r\n                                            <Col xs={4} lg={\"auto\"} className=\"text-center my-auto  px-0\"\r\n                                                style={{ width: \"100px\" }}\r\n                                            >\r\n                                                {Number(item.qty * item.price / 100).toLocaleString(\"en-US\", { style: \"currency\", currency: \"USD\" })}\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                ))}\r\n                            </ListGroup>\r\n                        </Col>\r\n                        <Col lg={3} className=\"pl-lg-4 pr-lg-0\">\r\n                            <Card>\r\n                                <ListGroup>\r\n                                    <ListGroupItem>\r\n                                        <h4>({cartItems.reduce((acc, curr) => acc + Number(curr.qty), 0)}) Items</h4>\r\n                                        <br></br>\r\n                                        <h5>Subtotal</h5>\r\n                                        <h4>\r\n                                            {cartItems\r\n                                                .reduce((acc, curr) => acc + curr.qty * curr.price / 100, 0)\r\n                                                .toLocaleString(\"en-US\", { style: \"currency\", currency: \"USD\" })\r\n                                            }\r\n                                        </h4>\r\n                                    </ListGroupItem>\r\n                                    <ListGroupItem>\r\n                                        <Button type='button' block disabled={cartItems.length === 0} onClick={checkoutHandler}>\r\n                                            Proceed to Checkout\r\n                                        </Button>\r\n                                        {userInfo && userInfo.isStaff && (<Button type='button' block variant=\"danger\"\r\n                                            disabled={cartItems.length === 0 || cartId}\r\n                                            onClick={sendCartHandler}>\r\n                                            Save and Send Cart\r\n                                        </Button>)}\r\n                                    </ListGroupItem>\r\n                                </ListGroup>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n\r\n\r\n                )\r\n            }\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\reducers\\cartReducers.js",["481","482"],"import {\r\n    CART_ADD_ITEM,\r\n    CART_FROM_DB_RESET,\r\n    CART_GET_CLOVER,\r\n    CART_LOAD_FROM_DB,\r\n    CART_LOAD_USER,\r\n    CART_MODIFY_ITEM,\r\n    CART_PUSH_CLOVER,\r\n    CART_REMOVE_ITEM,\r\n    CART_RESET,\r\n    CART_SAVE_PAYMENT_METHOD,\r\n    CART_SAVE_SHIPPING_INFO,\r\n    CART_SAVE_SHIPPING_METHOD,\r\n    CLOVER_FAIL,\r\n    CLOVER_RESET,\r\n    CLOVER_SUBMIT,\r\n    CLOVER_SUCCESS,\r\n    CART_SET_DISCOUNT,\r\n} from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingInfo: {}, shippingMethod: {} }, action) => {\r\n    const newItem = action.payload\r\n\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            let cleanCartItems = state.cartItems.filter(x => x.pID !== action.payload.pID)\r\n\r\n            return {\r\n                ...state,\r\n                cartItems: [...cleanCartItems, newItem]\r\n            }\r\n\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.pID !== action.payload)\r\n            }\r\n\r\n        case CART_MODIFY_ITEM:\r\n            let newCartItems = state.cartItems.map(item => {\r\n                let newItem = { ...item }\r\n                if (item.pID === action.payload.pID) newItem.qty = action.payload.qty\r\n                return newItem\r\n            })\r\n            return {\r\n                ...state,\r\n                cartItems: [...newCartItems]\r\n            }\r\n\r\n        case CART_RESET:\r\n            return {\r\n                cartItems: [],\r\n                shippingInfo: {},\r\n                shippingMethod: {}\r\n                // cloverOrder: null\r\n            }\r\n\r\n\r\n        case CART_SAVE_SHIPPING_INFO:\r\n            return {\r\n                ...state,\r\n                shippingInfo: action.payload\r\n            }\r\n\r\n        case CART_SAVE_SHIPPING_METHOD:\r\n            return {\r\n                ...state,\r\n                shippingMethod: {\r\n                    method: action.payload.method,\r\n                    price: action.payload.price\r\n                }\r\n            }\r\n\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n\r\n        // case CART_GET_CLOVER:\r\n        //     return {\r\n        //         ...state,\r\n        //         cloverID: action.payload\r\n        //     }\r\n\r\n        // case CART_PUSH_CLOVER:\r\n        //     return {\r\n        //         ...state,\r\n        //         cloverOrder: action.payload\r\n        //     }\r\n\r\n        case CART_LOAD_USER:\r\n            return {\r\n                ...state,\r\n                cartItems: action.payload\r\n            }\r\n\r\n        case CART_LOAD_FROM_DB:\r\n            return {\r\n                ...state,\r\n                cartFromDB: action.payload.cartID,\r\n                cartItems: action.payload.cartItems\r\n            }\r\n        case CART_FROM_DB_RESET:\r\n            return {\r\n                ...state,\r\n                cartFromDB: \"reset\"\r\n            }\r\n        case CART_SET_DISCOUNT:\r\n            return {\r\n                ...state,\r\n                discount: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const cloverReducer = (state = { loading: false }, action) => {\r\n    switch (action.type) {\r\n        case CLOVER_SUBMIT:\r\n            return { loading: true }\r\n        case CLOVER_SUCCESS:\r\n            return { loading: false, order: action.payload }\r\n        case CLOVER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case CLOVER_RESET:\r\n            return { loading: false }\r\n        default:\r\n            return state\r\n    }\r\n}","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\actions\\cartActions.js",["483","484","485","486","487","488","489"],"import axios from 'axios'\r\nimport {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_INFO,\r\n    CART_SAVE_PAYMENT_METHOD,\r\n    CART_MODIFY_ITEM,\r\n    CART_SAVE_SHIPPING_METHOD,\r\n    CART_GET_CLOVER,\r\n    CART_PUSH_CLOVER,\r\n    SHIPPING_INFO_PUSH_CLOVER,\r\n    CART_RESET,\r\n    CART_LOAD_USER,\r\n    CART_LOAD_FROM_DB,\r\n    CART_FROM_DB_RESET,\r\n    CLOVER_SUBMIT,\r\n    CLOVER_SUCCESS,\r\n    CLOVER_FAIL,\r\n    CLOVER_RESET,\r\n} from '../constants/cartConstants'\r\n\r\nconst storeCart = async (state, dispatch, reset) => {\r\n    const { userLogin: { userInfo } } = state\r\n    if (userInfo) {\r\n        const config = { headers: { 'Content-Type': 'application/json', Authorization: `Bearer ${userInfo.token}` } }\r\n        await axios.post(`/api/users/cart`, state.cart.cartItems, config)\r\n        let newUserInfo = state.userLogin.userInfo\r\n        newUserInfo.cart = state.cart.cartItems\r\n        localStorage.setItem('userInfo', JSON.stringify(newUserInfo))\r\n    }\r\n    localStorage.setItem('cartItems', JSON.stringify(state.cart.cartItems))\r\n\r\n    if (reset)\r\n        if (state.cart.cartFromDB == 'reset' || state.cart.cartFromDB == null) { }\r\n        else { dispatch({ type: CART_FROM_DB_RESET }) }\r\n}\r\n\r\nexport const addToCart = (product, name, qty, stock, price, cloverID) => async (dispatch, getState) => {\r\n\r\n    // Add to Cart\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            pID: product.pID,\r\n            cloverID,\r\n            name,\r\n            image: product.images[0].imageSrc,\r\n            price,\r\n            qty,\r\n            countInStock: stock\r\n        }\r\n    })\r\n    await storeCart(getState(), dispatch, true)\r\n}\r\n\r\nexport const removeFromCart = (pID) => async (dispatch, getState) => {\r\n\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: pID\r\n    })\r\n    await storeCart(getState(), dispatch, true)\r\n\r\n}\r\n\r\nexport const modifyCart = (pID, qty) => async (dispatch, getState) => {\r\n\r\n    dispatch({\r\n        type: CART_MODIFY_ITEM,\r\n        payload: { pID, qty }\r\n    })\r\n    await storeCart(getState(), dispatch, true)\r\n}\r\n\r\n\r\nexport const resetCart = () => async (dispatch, getState) => {\r\n\r\n    dispatch({\r\n        type: CART_RESET,\r\n    })\r\n\r\n    localStorage.removeItem(\"cartItems\")\r\n    localStorage.removeItem('shippingInfo')\r\n    localStorage.removeItem('shippingMethod')\r\n\r\n}\r\n\r\nexport const saveShippingInfo = (shippingInfo) => async (dispatch) => {\r\n    // dispatch({\r\n    //     type: CART_SAVE_SHIPPING_INFO,\r\n    //     payload: shippingInfo\r\n    // })\r\n    const { data } = await axios.post(`/api/clover/tax`, shippingInfo)\r\n    // const { data: validated } = await axios.post(`/api/clover/validate`, shippingInfo)\r\n    var infoWithTax = shippingInfo\r\n    infoWithTax.taxRate = data || 0\r\n    // infoWithTax.validated = validated || \"\"\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_INFO,\r\n        payload: infoWithTax\r\n    })\r\n\r\n    localStorage.setItem('shippingInfo', JSON.stringify(infoWithTax))\r\n}\r\n\r\nexport const saveShippingMethod = (data) => async (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_METHOD,\r\n        payload: data\r\n    })\r\n    localStorage.setItem('shippingMethod', JSON.stringify(getState().cart.shippingMethod))\r\n}\r\n\r\n\r\nexport const cartToDB = () => async (dispatch, getState) => {\r\n    const state = getState()\r\n    const { userLogin: { userInfo } } = state\r\n    const config = { headers: { 'Content-Type': 'application/json', Authorization: `Bearer ${userInfo.token}` } }\r\n    const { data } = await axios.post(`/api/cart`, state.cart, config)\r\n    dispatch({\r\n        type: CART_LOAD_FROM_DB,\r\n        payload: data\r\n    })\r\n\r\n}\r\n\r\nexport const loadCartFromDB = (cartId) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/cart/${cartId}`)\r\n    dispatch({\r\n        type: CART_LOAD_FROM_DB,\r\n        payload: data\r\n    })\r\n    await storeCart(getState(), dispatch, false)\r\n}\r\n\r\nexport const submitClover = (token) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: CLOVER_SUBMIT })\r\n        let state = getState()\r\n        let body = { cart: state.cart, userLogin: state.userLogin, token }\r\n        const { data } = await axios.post('/api/clover', body)\r\n\r\n        dispatch({ type: CLOVER_SUCCESS, payload: data })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CLOVER_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n// export const afterOrderReset = () => async (dispatch, getState) => {\r\n//     dispatch({ type: CLOVER_RESET })\r\n//     dispatch({ type: CART_RESET })\r\n\r\n//     localStorage.removeItem(\"cartItems\")\r\n//     localStorage.removeItem('shippingInfo')\r\n//     localStorage.removeItem('shippingMethod')\r\n\r\n// }\r\n\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\LoginScreen.js",["490","491"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Container } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { UserContext, UserContextUpdate } from '../contexts/UserContext'\r\nimport { useMutation } from 'react-query'\r\nimport axios from 'axios'\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n\r\n    const user = useContext(UserContext)\r\n    const updateUser = useContext(UserContextUpdate)\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    // If User Already Logged in\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n    useEffect(() => {\r\n        if (user._id) history.push(redirect)\r\n    }, [user])\r\n\r\n    // Login Mutation\r\n    const { mutate, isError, isLoading, error, reset } = useMutation(data => {\r\n        return axios.post('/api/users/login', data)\r\n    }, {\r\n        onSuccess: (data) => {\r\n            updateUser({ type: \"LOGIN\", payload: data.data })\r\n            reset()\r\n        }\r\n    })\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        mutate({ email, password })\r\n    }\r\n\r\n    return (\r\n        <Container className=\"my-5 py-3\">\r\n            <Row className='justify-content-lg-center'>\r\n                <Col lg={7} xl={6}>\r\n                    <h2 className=\"text-center text-danger mb-5 pb-3\">Log In</h2>\r\n                    {isError &&\r\n                        <Message variant='danger'>\r\n                            {error.response && error.response.data.message\r\n                                ? error.response.data.message : error.message}\r\n                        </Message>\r\n                    }\r\n                    {isLoading ? <Loader />\r\n                        : <Form onSubmit={submitHandler}>\r\n                            <Form.Group controlId='email'>\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control type='email' placeholder='Enter email' value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId='password'>\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control type='password' placeholder='Enter password' value={password}\r\n                                    onChange={(e) => setPassword(e.target.value)}>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <div className=\"text-center\">\r\n                                <Button type='submit' variant='primary' className=\"mx-auto my-4\" block\r\n                                    style={{ maxWidth: \"300px\" }}>\r\n                                    Log In\r\n                                </Button>\r\n                            </div>\r\n                            <div className=\"text-center\">\r\n                                Not a member yet?\r\n                                <Link className=\"mx-2 \" to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                                    Sign Up\r\n                                </Link>\r\n                            </div>\r\n                        </Form>\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\actions\\userActions.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\RegisterScreen.js",["492","493"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Container } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { useMutation } from 'react-query'\r\nimport { UserContext, UserContextUpdate, } from '../contexts/UserContext'\r\nimport axios from 'axios'\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n\r\n    // States and Contexts\r\n    const user = useContext(UserContext)\r\n    const updateUser = useContext(UserContextUpdate)\r\n\r\n    const [firstName, setFirstName] = useState('')\r\n    const [lastName, setLastName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    // Effect: Redirect if Already Logged In\r\n    useEffect(() => {\r\n        if (user._id) history.push('/profile')\r\n    }, [user])\r\n\r\n\r\n    // Mutation\r\n    const { mutate, isLoading, reset } = useMutation(data => {\r\n        return axios.post('/api/users/register', data)\r\n    }, {\r\n        onSuccess: (data) => {\r\n            updateUser({ type: \"LOGIN\", payload: data.data })\r\n            setMessage(\"\")\r\n            reset()\r\n        },\r\n        onError: (error) => {\r\n            setMessage(error.response && error.response.data.message\r\n                ? error.response.data.message : error.message)\r\n        }\r\n    })\r\n\r\n    // Handlers\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        setMessage(\"\")\r\n        if (password == confirmPassword) {\r\n            mutate({ firstName, lastName, email, password })\r\n        } else { // Passwords not match\r\n            setMessage(\"Passwords Do Not Match\")\r\n        }\r\n        setPassword(\"\")\r\n        setConfirmPassword(\"\")\r\n    }\r\n\r\n\r\n    return (\r\n        <Container className=\"my-5 pt-3\">\r\n            <Row className='justify-content-lg-center'>\r\n                <Col lg={7} xl={6}>\r\n                    <h2 className=\"text-center text-danger mb-5 pb-3\">Sign Up</h2>\r\n                    {message && <Message variant='danger'>{message}</Message>}\r\n                    {isLoading ? <Loader />\r\n                        : <>\r\n                            <Form onSubmit={submitHandler}>\r\n                                <Form.Row>\r\n                                    <Col>\r\n                                        <Form.Group controlId='firstName'>\r\n                                            <Form.Label>First Name</Form.Label>\r\n                                            <Form.Control type='name' placeholder='Enter first name' value={firstName} required\r\n                                                onChange={(e) => setFirstName(e.target.value)}>\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Form.Group controlId='lastName'>\r\n                                            <Form.Label>Last Name</Form.Label>\r\n                                            <Form.Control type='name' placeholder='Enter last name' value={lastName} required\r\n                                                onChange={(e) => setLastName(e.target.value)}>\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Form.Row>\r\n                                <Form.Group controlId='email'>\r\n                                    <Form.Label>Email Address</Form.Label>\r\n                                    <Form.Control type='email' placeholder='Enter email' value={email} required\r\n                                        onChange={(e) => setEmail(e.target.value)}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group controlId='password'>\r\n                                    <Form.Label>Password</Form.Label>\r\n                                    <Form.Control type='password' placeholder='Enter password' value={password} required\r\n                                        onChange={(e) => setPassword(e.target.value)}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group controlId='confirmPassword'>\r\n                                    <Form.Label>Confirm Password</Form.Label>\r\n                                    <Form.Control type='password' placeholder='Confirm Password' value={confirmPassword} required\r\n                                        onChange={(e) => setConfirmPassword(e.target.value)}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Col xs={8} className=\"mx-auto my-4\">\r\n                                    <Button type='submit' variant='primary' block>\r\n                                        Sign Up\r\n                                    </Button>\r\n                                </Col>\r\n                            </Form>\r\n                            <Row>\r\n                                <Col className=\"text-center\">\r\n                                    Have an Account?\r\n                                    <Link className=\"mx-2\" to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                                        Login\r\n                                    </Link>\r\n                                </Col>\r\n                            </Row>\r\n                        </>\r\n                    }\r\n                </Col>\r\n            </Row>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\ProfileScreen.js",["494"],"import React, { useContext } from 'react'\r\nimport { UserContext } from '../contexts/UserContext'\r\n\r\nimport { Row, Col, Container } from 'react-bootstrap'\r\nimport { UserNavBar } from '../components/UserNavBar'\r\nimport EditPassword from '../components/EditPassword'\r\nimport EditAddress from '../components/EditAddress'\r\nimport ProtectedRoute from '../components/ProtectedRoute'\r\n\r\n\r\n\r\nconst ProfileInfoScreen = () => {\r\n\r\n    const user = useContext(UserContext)\r\n\r\n    return (\r\n        <Container className=\"my-5 pb-5\">\r\n            <UserNavBar />\r\n            <Row className=\"mt-5\">\r\n                <Col lg={6} className=\"px-5\">\r\n                    <h3>Name</h3>\r\n                    <p className=\"mt-3 mb-5\">{user.firstName} {user.lastName}</p>\r\n                    <h3>Email</h3>\r\n                    <p className=\"mt-3 mb-5\">{user.email}</p>\r\n\r\n                    <h3>Password</h3>\r\n                    <EditPassword />\r\n                </Col>\r\n\r\n                <Col lg={6} className=\"px-5\">\r\n                    <h3>Address</h3>\r\n                    <EditAddress />\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ProfileInfoScreen\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\ShippingScreen.js",["495","496","497","498"],"import React, { useState } from 'react'\r\nimport { Form, Button, Row, Col, Container } from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport { useMutation } from 'react-query'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingInfo, shippingInfoToClover } from '../actions/cartActions'\r\nimport { SideCart } from '../components/SideCart'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\n\r\n\r\nconst ShippingScreen = ({ history, location }) => {\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const { cartItems, shippingInfo } = useSelector(state => state.cart)\r\n    const { userInfo } = useSelector(state => state.userLogin)\r\n    if (cartItems.length == 0) {\r\n        history.push('/cart')\r\n    }\r\n\r\n    const [email, setEmail] = useState(shippingInfo.email || (userInfo && userInfo.email && !userInfo.isStaff) || \"\")\r\n    const [news, setNews] = useState(shippingInfo.news || false)\r\n    const [firstName, setFirstName] = useState(shippingInfo.firstName || \"\")\r\n    const [lastName, setLastName] = useState(shippingInfo.lastName || \"\")\r\n    const [company, setCompany] = useState(shippingInfo.company || \"\")\r\n    const [address, setAddress] = useState(shippingInfo.address || \"\")\r\n    const [address2, setAddress2] = useState(shippingInfo.address2 || \"\")\r\n    const [city, setCity] = useState(shippingInfo.city || \"\")\r\n    const [country, setCountry] = useState(shippingInfo.country || \"\")\r\n    const [region, setRegion] = useState(shippingInfo.region || \"\")\r\n    const [postalCode, setPostalCode] = useState(shippingInfo.postalCode || \"\")\r\n    const [phone, setPhone] = useState(shippingInfo.phone || \"\")\r\n\r\n    const [verified, setVerified] = useState(false)\r\n\r\n    const { data, error, isLoading, mutate } = useMutation(data => {\r\n        return axios.post(`/api/shipping/ups/AV`, data)\r\n    })\r\n\r\n    const dispatch = useDispatch()\r\n    const submitHandler = async () => {\r\n        dispatch(saveShippingInfo({\r\n            email,\r\n            news,\r\n            firstName,\r\n            lastName,\r\n            company,\r\n            address: Array.isArray(data.data.XAVResponse.Candidate.AddressKeyFormat.AddressLine)\r\n                ? data.data.XAVResponse.Candidate.AddressKeyFormat.AddressLine[0]\r\n                : data.data.XAVResponse.Candidate.AddressKeyFormat.AddressLine,\r\n            address2: Array.isArray(data.data.XAVResponse.Candidate.AddressKeyFormat.AddressLine)\r\n                ? data.data.XAVResponse.Candidate.AddressKeyFormat.AddressLine[1]\r\n                : \"\",\r\n            city: data.data.XAVResponse.Candidate.AddressKeyFormat.PoliticalDivision2,\r\n            region: data.data.XAVResponse.Candidate.AddressKeyFormat.PoliticalDivision1,\r\n            country: data.data.XAVResponse.Candidate.AddressKeyFormat.CountryCode,\r\n            postalCode: data.data.XAVResponse.Candidate.AddressKeyFormat.PostcodePrimaryLow,\r\n            phone\r\n        }))\r\n        history.push('/shippingmethod')\r\n    }\r\n\r\n    const verifyHandler = async (e) => {\r\n        e.preventDefault()\r\n        setVerified(true)\r\n        mutate({ address, address2, city, country, region, postalCode })\r\n    }\r\n\r\n\r\n    return (\r\n        <Container className=\"my-5 py-3\">\r\n            <h2 className=\"text-danger\">Checkout</h2>\r\n            <Row>\r\n                <Col lg={6}>\r\n                    <Row className=\"mt-4 mb-3\">\r\n                        <Col xs={12} lg className=\"order-2 order-lg-1\">\r\n                            <h5 className=\"\">Contact Information</h5>\r\n                        </Col>\r\n                        <Col xs={12} lg=\"auto\" className=\"text-right order-1 order-lg-2\">\r\n                            Already have an account?\r\n                            <Link className=\"mx-2 text-danger\" to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                                Sign In\r\n                            </Link>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Form onSubmit={verifyHandler}>\r\n                        <Form.Group controlId='email'>\r\n                            <Form.Control type='text' placeholder='Email' value={email} required\r\n                                onChange={(e) => setEmail(e.target.value)}>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Check id='news' type='checkbox' checked={news} label=\"Keep me up to date on news and offers\"\r\n                            onChange={(e) => setNews(e.target.checked)}>\r\n                        </Form.Check>\r\n\r\n                        <h5 className=\"mt-5 mb-4\">Shipping Address</h5>\r\n                        {verified\r\n                            ? (<>\r\n                                {isLoading && <Loader />}\r\n                                {error && <Message variant=\"danger\">{JSON.stringify(error.response.data.message)}</Message>}\r\n                                {data && (\r\n                                    <div className=\"border px-3 my-3\">\r\n                                        <p className=\"mt-4\">Is This Correct?</p>\r\n                                        {/* <p>{JSON.stringify(data.data)}</p> */}\r\n                                        {Array.isArray(data.data.XAVResponse.Candidate.AddressKeyFormat.AddressLine)\r\n                                            ? (<>\r\n                                                <h4> {data.data.XAVResponse.Candidate.AddressKeyFormat.AddressLine[0]}</h4>\r\n                                                <h4>{data.data.XAVResponse.Candidate.AddressKeyFormat.AddressLine[1]}</h4>\r\n                                            </>)\r\n                                            : <h4> {data.data.XAVResponse.Candidate.AddressKeyFormat.AddressLine}</h4>\r\n                                        }\r\n                                        <h4>{data.data.XAVResponse.Candidate.AddressKeyFormat.Region}, {data.data.XAVResponse.Candidate.AddressKeyFormat.CountryCode} </h4>\r\n                                        <br />\r\n                                    </div>)}\r\n                            </>)\r\n                            : (<>\r\n                                <Row>\r\n                                    <Col className=\"pr-1\">\r\n                                        <Form.Group controlId='firstName'>\r\n                                            <Form.Control type='text' placeholder='First name' value={firstName} required\r\n                                                onChange={(e) => setFirstName(e.target.value)}>\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col className=\"pl-1\">\r\n                                        <Form.Group controlId='lastName'>\r\n                                            <Form.Control type='text' placeholder='Last name' value={lastName} required\r\n                                                onChange={(e) => setLastName(e.target.value)}>\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Form.Group controlId='company'>\r\n                                    <Form.Control type='text' placeholder='Company (Optional)' value={company}\r\n                                        onChange={(e) => setCompany(e.target.value)}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group controlId='address'>\r\n                                    <Form.Control type='text' placeholder='Address' value={address} required\r\n                                        onChange={(e) => setAddress(e.target.value)}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group controlId='address2'>\r\n                                    <Form.Control type='text' placeholder='Apartment, Suite, Etc. (Optional)' value={address2}\r\n                                        onChange={(e) => setAddress2(e.target.value)}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group controlId='city'>\r\n                                    <Form.Control type='text' placeholder='City' value={city} required\r\n                                        onChange={(e) => setCity(e.target.value)}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Row>\r\n                                    <Col className=\"pr-1\">\r\n                                        <Form.Group controlId='country'>\r\n                                            <Form.Control type='text' placeholder='Country/Region' value={country} required\r\n                                                onChange={(e) => setCountry(e.target.value)}>\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col className=\"px-1\">\r\n                                        <Form.Group controlId='region'>\r\n                                            <Form.Control type='text' placeholder='State' value={region} required\r\n                                                onChange={(e) => setRegion(e.target.value)}>\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col className=\"pl-1\">\r\n                                        <Form.Group controlId='postalCode'>\r\n                                            <Form.Control type='text' placeholder='Postal code' value={postalCode} required\r\n                                                onChange={(e) => setPostalCode(e.target.value)}>\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Form.Group controlId='phone'>\r\n                                    <Form.Control type='tel' placeholder='Phone' value={phone} required\r\n                                        onChange={(e) => setPhone(e.target.value)}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                            </>)}\r\n                        {!verified && <Button type=\"submit\" disabled={verified && error} className=\"mt-2\">\r\n                            Verify and Continue\r\n                        </Button>}\r\n                        {verified && <Button type=\"button\" className=\"mt-2\"\r\n                            onClick={() => submitHandler()}\r\n                        >Accept and Continue</Button>}\r\n                        {verified && <Button type=\"button\" variant=\"secondary\" className=\"mx-2 mt-2\"\r\n                            onClick={() => setVerified(false)}\r\n                        >Go Back & Edit</Button>}\r\n                    </Form>\r\n\r\n                </Col>\r\n                <Col lg={6} className=\"pl-5 d-none d-lg-block\">\r\n                    <SideCart />\r\n                </Col>\r\n            </Row>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\PaymentScreen.js",["499","500","501","502","503","504","505","506","507","508","509"],"import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Col, Row, ListGroup, Modal, Container, DropdownButton, Dropdown, InputGroup } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { useMutation } from 'react-query'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { afterOrderReset, resetCart, savePaymentMethod, submitClover } from '../actions/cartActions'\r\nimport { Helmet } from 'react-helmet'\r\nimport Message from '../components/Message'\r\nimport { SideCart } from '../components/SideCart'\r\nimport Loader from '../components/Loader'\r\nimport { CLOVER_RESET, CART_SET_DISCOUNT } from '../constants/cartConstants'\r\n\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingMethod, shippingInfo, cartItems } = cart\r\n    const { userInfo } = useSelector(state => state.userLogin)\r\n    // const { loading, order, error } = useSelector(state => state.clover)\r\n\r\n    if (shippingInfo && Object.keys(shippingInfo).length == 0) {\r\n        history.push('/shipping')\r\n    }\r\n    if (shippingMethod && Object.keys(shippingMethod).length == 0) {\r\n        history.push('/shippingmethod')\r\n    }\r\n\r\n    const [buttonDisable, setButtonDisable] = useState(false)\r\n    const [discountEdit, setDiscountEdit] = useState(false)\r\n    const [discountName, setDiscountName] = useState(\"\")\r\n    const [discountType, setDiscountType] = useState(\"$\")\r\n    const [discountAmount, setDiscountAmount] = useState(\"\")\r\n\r\n    const styles = {\r\n        body: { fontFamily: 'Roboto, Open Sans, sans-serif', fontSize: '16px', },\r\n        input: {\r\n            fontSize: '13px',\r\n            border: \" 1px solid rgba(0, 0, 0, 0.125)\",\r\n            height: '50px',\r\n            padding: '8px'\r\n        },\r\n        img: { right: '10px !important', top: '10px !important', }\r\n    };\r\n    const elements = window.clover.elements();\r\n    const cardNumber = elements.create('CARD_NUMBER', styles);\r\n    const cardDate = elements.create('CARD_DATE', styles);\r\n    const cardCvv = elements.create('CARD_CVV', styles);\r\n    const cardPostalCode = elements.create('CARD_POSTAL_CODE', styles);\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    // Load iFrame \r\n    useEffect(() => {\r\n        cardNumber.mount('#card-number');\r\n        cardDate.mount('#card-date');\r\n        cardCvv.mount('#card-cvv');\r\n        cardPostalCode.mount('#card-postal-code');\r\n\r\n        const cloverFooter = document.getElementsByClassName('clover-footer')[0];\r\n        const footer = document.querySelector('footer');\r\n        if (cloverFooter) cloverFooter.style.display = \"block\"\r\n        cloverFooter && footer.insertBefore(cloverFooter, footer.childNodes[0])\r\n\r\n        return () => { if (cloverFooter) cloverFooter.style.display = \"none\" }\r\n    }, []);\r\n\r\n\r\n\r\n    const { data: order, error, isLoading: loading, mutate } = useMutation(data => {\r\n        return axios.post(`/api/clover`, data)\r\n    })\r\n\r\n    // Redirect to Order after Submit\r\n    useEffect(() => {\r\n        if (order) {\r\n            dispatch(resetCart())\r\n            dispatch({ type: CLOVER_RESET })\r\n            history.push(`/order/${order.data.id}`)\r\n            // console.log(JSON.stringify(order))\r\n        }\r\n    }, [order])\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        setButtonDisable(true)\r\n\r\n        window.clover.createToken()\r\n            .then((result) => {\r\n                if (result.errors) {\r\n                    const displayError = document.getElementById('card-errors');\r\n                    Object.values(result.errors).forEach(function (value) {\r\n                        displayError.textContent = value;\r\n                    });\r\n                    setButtonDisable(false)\r\n                } else {\r\n                    // dispatch(submitClover(result.token))\r\n                    // let body = { cart: state.cart, userLogin: state.userLogin, token }\r\n                    mutate({ cart, userInfo, token: result.token })\r\n                }\r\n                setButtonDisable(false)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Container className=\"my-5 py-3\">\r\n            <Modal show={loading} backdrop=\"static\" keyboard={false}>\r\n                <Modal.Header>\r\n                    <Modal.Title>Sumbitting Order...\r\n                        <br /> Please do not close this window</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body> <Loader /> </Modal.Body>\r\n            </Modal>\r\n            {error && <Message variant='danger'>{error.response ? \"!\" + JSON.stringify(error.response.data.message) : \"~\" + error.message}</Message>}\r\n            {order && <Message variant='success'>{\"Success! \" + order.id}</Message>}\r\n\r\n            <Row>\r\n                <Col lg={6}>\r\n                    {/* <h5 className=\"\">Shipping Information</h5> */}\r\n                    <ListGroup>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>\r\n                                    <strong>Contact:</strong> {shippingInfo.email}\r\n                                </Col>\r\n                                <Col xs=\"auto\" className=\"text-right\">\r\n                                    <Link to=\"/shipping\" className=\"text-muted\">Change</Link>\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>\r\n                                    <strong>Ship to: </strong>\r\n                                    <br /> {shippingInfo.address} {shippingInfo.address2}\r\n                                    <br />{shippingInfo.city}, {shippingInfo.region}, {shippingInfo.country}, {shippingInfo.postalCode}\r\n                                </Col>\r\n                                <Col xs=\"auto\" className=\"text-right\">\r\n                                    <Link to=\"/shipping\" className=\"text-muted\">Change</Link>\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>\r\n                                    <strong>Shipping Method: </strong> {shippingMethod.method}\r\n                                </Col>\r\n                                <Col xs=\"auto\" className=\"text-right\">\r\n                                    <Link to=\"/shippingmethod\" className=\"text-muted\">Change</Link>\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        {userInfo && userInfo.isStaff === true &&\r\n                            (<ListGroup.Item>\r\n                                <Form >\r\n                                    <Row>\r\n                                        <Col>\r\n                                            {discountEdit ?\r\n                                                (\r\n                                                    <Form.Row>\r\n                                                        <Col>\r\n                                                            <Form.Control type=\"text\" placeholder=\"Name (Required)\" value={discountName} className=\"p-3\"\r\n                                                                onChange={(e) => setDiscountName(e.target.value)}\r\n                                                            ></Form.Control>\r\n                                                        </Col>\r\n                                                        <Col>\r\n                                                            <InputGroup>\r\n                                                                <DropdownButton\r\n                                                                    as={InputGroup.Prepend}\r\n                                                                    variant=\"outline-secondary\"\r\n                                                                    title={discountType === \"$\" ? \"$\" : \"%\"}\r\n                                                                    className=\"p-0\"\r\n                                                                    style={{ height: \"47px\" }}\r\n                                                                >\r\n                                                                    <Dropdown.Item onClick={() => setDiscountType(\"$\")}>\r\n                                                                        $\r\n                                                                    </Dropdown.Item>\r\n                                                                    <Dropdown.Item onClick={() => setDiscountType(\"%\")}>\r\n                                                                        %\r\n                                                                    </Dropdown.Item>\r\n                                                                </DropdownButton>\r\n                                                                <Form.Control type=\"text\" placeholder=\"0.00\" value={discountAmount} className=\"p-3\"\r\n                                                                    onChange={(e) => setDiscountAmount(e.target.value)}>\r\n                                                                </Form.Control>\r\n                                                            </InputGroup>\r\n                                                        </Col>\r\n                                                    </Form.Row>\r\n                                                ) : (\r\n                                                    <>\r\n                                                        <strong>{'Discount: '}</strong>\r\n                                                        {discountAmount !== \"\" ?\r\n                                                            discountType === \"$\"\r\n                                                                ? `(${discountName}) ${discountType}${discountAmount} off`\r\n                                                                : `(${discountName}) ${discountAmount}${discountType} off`\r\n                                                            : \"\"\r\n                                                        }\r\n                                                    </>\r\n                                                )\r\n                                            }\r\n                                        </Col>\r\n                                        <Col xs=\"auto\" className=\"text-right\">\r\n                                            {discountEdit ?\r\n                                                (<Link to=\"#\" className=\"text-danger\"\r\n                                                    onClick={() => {\r\n                                                        setDiscountEdit(false)\r\n                                                        dispatch({\r\n                                                            type: CART_SET_DISCOUNT, payload: {\r\n                                                                discountName, discountType, discountAmount\r\n                                                            }\r\n                                                        })\r\n                                                    }}\r\n                                                >Save</Link>\r\n                                                ) : (<Link to=\"#\" className=\"text-muted\"\r\n                                                    onClick={() => setDiscountEdit(true)}\r\n                                                >Change</Link>)\r\n                                            }\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Form>\r\n                            </ListGroup.Item>)\r\n                        }\r\n                    </ListGroup>\r\n\r\n                    <h5 className=\"mt-5\">Payment Information</h5>\r\n\r\n                    <div className=\"App\" id=\"iframeapp\">\r\n                        <div id=\"card-errors\" role=\"alert\" style={{ color: \"red\" }} />\r\n                        <div className=\"flex justify-center mt-16\">\r\n                            <Form id=\"payment-form\" noValidate autoComplete=\"off\">\r\n                                <Form.Row >\r\n                                    <Col>\r\n                                        <div id=\"card-number\" className=\"\" style={{ height: \"60px\" }} />\r\n                                    </Col>\r\n                                </Form.Row>\r\n\r\n                                <Form.Row>\r\n                                    <Col >\r\n                                        <div id=\"card-date\" className=\"\" style={{ height: \"60px\" }} />\r\n                                    </Col>\r\n                                    <Col >\r\n                                        <div id=\"card-cvv\" className=\"\" style={{ height: \"60px\" }} />\r\n                                    </Col>\r\n                                    <Col >\r\n                                        <div id=\"card-postal-code\" className=\"\" style={{ height: \"60px\" }} />\r\n                                    </Col>\r\n                                </Form.Row>\r\n                                {/* </fieldset> */}\r\n                            </Form>\r\n\r\n                            <Button variant=\"primary\" size=\"large\" className=\"mt-3 px-5\"\r\n                                disabled={buttonDisable}\r\n                                onClick={submitHandler} >\r\n                                Pay Now\r\n                            </Button>\r\n                            {/* <Button variant=\"outline-danger\" size=\"large\" onClick={testHandler} className=\"ml-3 mt-3 px-5\">\r\n                                Test Now\r\n                            </Button> */}\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n                <Col lg={6} className=\"pl-5 d-none d-lg-block\">\r\n                    <SideCart />\r\n                </Col>\r\n            </Row>\r\n        </Container >\r\n\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\PlaceOrderScreen.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\reducers\\orderReducers.js",["510","511","512","513","514","515","516"],"import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\n\r\nexport const orderDetailsReducer = (\r\n    state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return { loading: false, order: action.payload }\r\n        case ORDER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return { loading: true }\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case ORDER_DELIVER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return { loading: true }\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return { loading: false, orders: action.payload }\r\n        case ORDER_LIST_MY_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case ORDER_LIST_MY_RESET:\r\n            return { orders: [] }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return { loading: true }\r\n        case ORDER_LIST_SUCCESS:\r\n            return { loading: false, orders: action.payload }\r\n        case ORDER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\actions\\orderActions.js",["517","518","519","520","521","522","523","524","525"],"import axios from 'axios'\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n} from '../constants/orderConstants'\r\n\r\n\r\nexport const getOrderDetails = (orderId) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        // const { userLogin: { userInfo } } = getState()\r\n\r\n        // const config = { headers: { Authorization: `Bearer ${userInfo.token}` } }\r\n\r\n        // const { data } = await axios.get(`/api/orders/${orderId}`, config)\r\n        const { data } = await axios.get(`/api/orders/${orderId}`)\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.get(`/api/orders/myorders`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.get(`/api/orders`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n// export const deliverOrder = (order) => async (dispatch, getState) => {\r\n//     try {\r\n//         dispatch({\r\n//             type: ORDER_DELIVER_REQUEST\r\n//         })\r\n\r\n//         const { userLogin: { userInfo } } = getState()\r\n\r\n//         const config = {\r\n//             headers: {\r\n//                 Authorization: `Bearer ${userInfo.token}`\r\n//             }\r\n//         }\r\n//         const { data } = await axios.put(`/api/orders/${order._id}/deliver`, {}, config)\r\n\r\n//         dispatch({\r\n//             type: ORDER_DELIVER_SUCCESS,\r\n//             payload: data\r\n//         })\r\n\r\n//     } catch (error) {\r\n//         dispatch({\r\n//             type: ORDER_DELIVER_FAIL,\r\n//             payload: error.response && error.response.data.message\r\n//                 ? error.response.data.message : error.message\r\n//         })\r\n//     }\r\n// }","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\OrderScreen.js",["526","527","528","529","530","531","532","533","534","535","536","537"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { useMutation, useQuery } from 'react-query'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Card, Button, Container, Nav, Form } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, deliverOrder } from '../actions/orderActions'\r\n// import { createUPS } from '../actions/shippingActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n    const orderID = match.params.id\r\n\r\n\r\n    const [size, setSize] = useState(\"\")\r\n    const [amount, setAmount] = useState(\"\")\r\n    const [lineID, setLineID] = useState(\"\")\r\n\r\n    const { order, loading, error } = useSelector(state => state.orderDetails)\r\n    const { userInfo } = useSelector(state => state.userLogin)\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(getOrderDetails(orderID))\r\n        return () => { }\r\n    }, [])\r\n\r\n    // Check if Label already created\r\n    const { isLoading, isError, data: labelData, error: labelError, refetch } = useQuery('label', () =>\r\n        axios.get(`/api/shipping/tracking/${orderID}`)\r\n    )\r\n\r\n    // Shipping Label Mutations\r\n    const labelMutation = useMutation(data => {\r\n        return axios.post(`/api/shipping/ups/${orderID}/${size}`, data,\r\n            { headers: { Authorization: `Bearer ${userInfo.token}` } })\r\n    })\r\n    const handleUPS = () => {\r\n        labelMutation.mutate(order.shippingLabel)\r\n    }\r\n\r\n    // Refund Mutation\r\n    const refundMutation = useMutation(data => {\r\n        return axios.post(`/api/clover/refund`, data,\r\n            { headers: { Authorization: `Bearer ${userInfo.token}` } })\r\n    })\r\n    const handleRefund = () => {\r\n        refundMutation.mutate({ amount, lineID, orderID })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (labelMutation.data) { refetch() }\r\n        if (refundMutation.data) {\r\n            dispatch(getOrderDetails(orderID))\r\n            setAmount(\"\")\r\n            setLineID(\"\")\r\n        }\r\n    }, [labelMutation.isSuccess, refundMutation.isSuccess])\r\n\r\n    return (\r\n        <Container className=\"my-5\">\r\n            {loading ? <Loader />\r\n                : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <>\r\n                            <Row className=\"mt-5 mb-3\">\r\n                                <Col lg=\"auto\">\r\n                                    <h3 className=\"text-danger text-break m-0\">Order #{orderID}</h3>\r\n                                </Col>\r\n                                <Col className=\"mt-3 mt-lg-auto\">\r\n                                    <p className=\"my-0\">{Date(order.createdTime).toLocaleString().substr(4, 11)}</p>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col lg={12} xl={10}>\r\n                                    {order.lineItems &&\r\n                                        (\r\n                                            <ListGroup className=\"mb-5\">\r\n                                                <ListGroup.Item className=\"mb-3 border-left-0 border-right-0 px-0\">\r\n                                                    <Row>\r\n                                                        <Col xs={4} lg={3} className=\"mb-3 mb-lg-0 my-auto d-none d-lg-block\">\r\n                                                            <h6>Product</h6>\r\n                                                        </Col>\r\n                                                        <Col className=\"d-none d-lg-block my-auto\">\r\n                                                        </Col>\r\n                                                        <Col xs={5} lg={2} className=\"text-center my-auto\">\r\n                                                            <h6>Price</h6>\r\n                                                        </Col>\r\n                                                        <Col xs={2} lg={1} className=\"text-center my-auto\">\r\n                                                            <h6>Qty</h6>\r\n                                                        </Col>\r\n                                                        <Col xs={5} lg={2} className=\"text-center my-auto\">\r\n                                                            <h6>Total</h6>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n\r\n                                                {order.lineItems.map((item, index) => (\r\n                                                    <ListGroup.Item key={index} className=\"mb-3 border-0 px-0\">\r\n                                                        <Row>\r\n                                                            <Col xs={12} lg={3} className=\"mb-3 mb-lg-0\">\r\n                                                                {item.image &&\r\n                                                                    <Image src={\"https://www.coastairbrush.com/\" + item.image} alt={item.name}\r\n                                                                        fluid rounded />}\r\n                                                            </Col>\r\n                                                            <Col xs={12} lg={4} className=\"mb-2 my-lg-auto text-center text-lg-left\">\r\n                                                                {item.name === \"Website Shipping\"\r\n                                                                    ? item.alternateName\r\n                                                                    : <Link to={`/product/${item.pID}`}\r\n                                                                        className=\" text-danger\" style={{ fontWeight: \"bold\" }}>\r\n                                                                        {item.name}\r\n                                                                    </Link>}\r\n                                                            </Col>\r\n                                                            <Col xs={5} lg={2} className=\"text-center my-auto\">\r\n                                                                {Number(item.price / 100).toLocaleString(\"en-US\", { style: \"currency\", currency: \"USD\" })}\r\n                                                            </Col>\r\n                                                            <Col xs={2} lg={1} className=\"text-center my-auto border\">\r\n                                                                {item.qty}\r\n                                                            </Col>\r\n                                                            <Col xs={5} lg={2} className=\"text-center my-auto\">\r\n                                                                {Number(item.qty * item.price / 100).toLocaleString(\"en-US\", { style: \"currency\", currency: \"USD\" })}\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                ))}\r\n                                            </ListGroup>\r\n                                        )}\r\n                                    {order.payment && (<ListGroup>\r\n                                        <ListGroup.Item>\r\n                                            <h4 className=\"mb-3\">Payment</h4>\r\n                                            {order.payment.state === \"PAID\" ? (\r\n                                                <>\r\n                                                    {\r\n                                                        order.payment.discounts &&\r\n                                                        <p><strong>Discount: </strong>{(order.payment.discounts.elements[0].amount / 100)\r\n                                                            .toLocaleString(\"en-US\", { style: \"currency\", currency: \"USD\" })}</p>\r\n                                                    }\r\n                                                    <p><strong>Tax: </strong>{(order.payment.tax / 100).toLocaleString(\"en-US\", { style: \"currency\", currency: \"USD\" })}</p>\r\n                                                    <p><strong>Total: </strong>{(order.payment.total / 100).toLocaleString(\"en-US\", { style: \"currency\", currency: \"USD\" })}</p>\r\n                                                </>\r\n                                            ) : <p><strong>Status: </strong>{order.payment.state === \"OPEN\" ? \"NOT PAID / PROCESSING\" : \"PAID\"}</p>\r\n                                            }\r\n                                            {order.employee && (\r\n                                                <p>\r\n                                                    <strong>Employee: </strong>\r\n                                                    <a>{order.employee}</a>\r\n                                                </p>\r\n                                            )}\r\n\r\n\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>)}\r\n\r\n                                    {(<ListGroup>\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col >\r\n                                                    <h4 className=\"mb-3\">Refunds</h4>\r\n                                                    {order.refunds && order.refunds.map(refund => (\r\n                                                        <>\r\n                                                            <p>\r\n                                                                <strong>{new Date(refund.createdTime).toLocaleString()}: </strong>\r\n                                                                {Number(refund.amount / 100).toLocaleString(\"en-US\", { style: \"currency\", currency: \"USD\" })}\r\n                                                            </p>\r\n                                                            <p>{ }</p>\r\n                                                        </>\r\n                                                    ))\r\n                                                    }\r\n                                                </Col>\r\n\r\n                                                {userInfo && userInfo.isStaff &&\r\n                                                    <Col className=\"text-center\">\r\n                                                        <Row>\r\n                                                            <Col>\r\n                                                                <Form.Control as=\"select\"\r\n                                                                    value={lineID}\r\n                                                                    onChange={(e) => setLineID(e.target.value)}\r\n                                                                >\r\n                                                                    <option value=\"\">Select Item</option>\r\n\r\n                                                                    {order.lineItems && order.lineItems.map(item => (\r\n                                                                        <option value={item.id}>{item.name}</option>\r\n                                                                    ))}\r\n                                                                </Form.Control>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                        <Row noGutters>\r\n                                                            <Col>\r\n                                                                <Form.Control type=\"number\" value={amount} placeholder=\"Refund Amount (Cents)\"\r\n                                                                    onChange={(e) => setAmount(e.target.value)}\r\n                                                                >\r\n                                                                </Form.Control>\r\n                                                            </Col>\r\n                                                            <Col xs=\"auto\">\r\n                                                                <Button\r\n                                                                    disabled={!lineID || !amount || refundMutation.isLoading}\r\n                                                                    block style={{ height: \"47px\" }}\r\n                                                                    onClick={handleRefund}\r\n                                                                >\r\n                                                                    {refundMutation.isLoading ? \"Loading\" : \"Refund\"}\r\n                                                                </Button>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                        <p className=\"text-danger\">{refundMutation.error && \"Error\"}</p>\r\n                                                        <p className=\"text-danger\">{refundMutation.error && JSON.parse(refundMutation.error.response.data.message).error.message}</p>\r\n                                                    </Col>\r\n                                                }\r\n\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>)}\r\n\r\n                                    {order.shippingLabel && (<ListGroup className=\"mb-4\">\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col>\r\n                                                    <h4>Shipping</h4>\r\n                                                    <p>\r\n                                                        {/* <strong>Name: </strong>{order.user.name} */}\r\n                                                    </p>\r\n                                                    <p>\r\n                                                        <strong>Email: </strong>\r\n                                                        <a href={`mailto:${order.shippingLabel.email}`}>{order.shippingLabel.email}</a>\r\n                                                    </p>\r\n                                                    <p>\r\n                                                        <strong>Address: </strong>\r\n                                                        {order.shippingLabel.address} {order.shippingLabel.address2}, {order.shippingLabel.city},\r\n                                                        {order.shippingLabel.region}, {order.shippingLabel.country}, {order.shippingLabel.postalCode}\r\n                                                    </p>\r\n                                                    {order.shippingLabel.phone &&\r\n                                                        (<p>\r\n                                                            <strong>Phone: </strong>\r\n                                                            {order.shippingLabel.phone}\r\n                                                        </p>)}\r\n                                                    {labelData && labelData.data.tracking &&\r\n                                                        (<p>\r\n                                                            <strong>Tracking Number: </strong>\r\n                                                            {labelData.data.tracking}\r\n                                                        </p>)}\r\n                                                </Col>\r\n\r\n                                                {userInfo && userInfo.isStaff &&\r\n                                                    <Col className=\"text-center\">\r\n                                                        {labelData && labelData.data.tracking\r\n                                                            ? <a href={`data:image/png;base64,${labelData.data.raw}`} target=\"_self\" type=\"image/png\">Right Click to Open Label</a>\r\n                                                            : (<>\r\n                                                                <Form.Control type=\"number\" value={size} placeholder=\"Weight in lbs\"\r\n                                                                    onChange={(e) => setSize(e.target.value)}\r\n                                                                >\r\n\r\n                                                                </Form.Control>\r\n                                                                <Button\r\n                                                                    disabled={labelMutation.isLoading || labelMutation.isSuccess || size === \"\"}\r\n                                                                    block\r\n                                                                    onClick={handleUPS}>\r\n                                                                    {labelMutation.isLoading ? \"Loading\" : \"Create UPS Label\"}\r\n                                                                </Button>\r\n                                                                <p className=\"text-danger\">{labelMutation.error && JSON.stringify(labelMutation.error)}</p>\r\n                                                            </>)\r\n                                                        }\r\n                                                    </Col>\r\n                                                }\r\n                                            </Row>\r\n\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>)}\r\n\r\n                                </Col>\r\n\r\n                            </Row>\r\n                        </>\r\n                    )\r\n            }\r\n        </Container >\r\n    )\r\n\r\n}\r\n\r\nexport default OrderScreen\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\UserListScreen.js",["538","539","540","541"],"import React, { useEffect, useState } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Container, Form, InputGroup, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nconst UserListScreen = ({ history }) => {\r\n\r\n    const [search, setSearch] = useState(\"\")\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n    // useEffect(() => {\r\n    //     if (userInfo && userInfo.isStaff) {\r\n    //         dispatch(listUsers())\r\n    //     } else {\r\n    //         history.push('/login')\r\n    //     }\r\n    //     return () => { }\r\n    // }, [dispatch, history, successDelete, userInfo])\r\n\r\n    const deleteHandler = (id, name) => {\r\n        if (window.confirm(`Delete ${name} \\nAre you sure?`))\r\n            dispatch(deleteUser(id))\r\n    }\r\n    const searchHandler = (e) => {\r\n        e.preventDefault()\r\n        alert(search)\r\n        // dispatch()\r\n    }\r\n    return (\r\n        <Container className=\"my-5 py-3\">\r\n            <Row>\r\n                <Col>\r\n                    <h1>Users</h1>\r\n                </Col>\r\n                <Col className=\"my-auto mr-4\">\r\n                    <Form onSubmit={searchHandler}>\r\n                        <InputGroup>\r\n                            <Form.Control\r\n                                placeholder=\"Search by Name or Email\"\r\n                                aria-label=\"Search by Name or Email\"\r\n                                style={{ height: \"50px\" }}\r\n                                onChange={(e) => setSearch(e.target.value)}\r\n                            />\r\n                            <InputGroup.Append>\r\n                                <Button variant=\"primary\" onClick={searchHandler}>\r\n                                    <i className=\"fas fa-search\"></i>\r\n                                </Button>\r\n                            </InputGroup.Append>\r\n                        </InputGroup>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                : (\r\n                    <Table striped bordered hover responsive className='table-sm mt-3'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>CREATED</th>\r\n                                <th>NAME</th>\r\n                                <th>EMAIL</th>\r\n                                <th>STAFF</th>\r\n                                <th>ADMIN</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {users.map(user => (\r\n                                <tr key={user._id}>\r\n                                    <td>{user.createdAt.slice(0, 10)}</td>\r\n                                    <td>{user.name}</td>\r\n                                    <td><a href={`mailto:${user.email}`}>{user.email}</a></td>\r\n                                    <td>{user.isStaff\r\n                                        ? (<i className='fas fa-check' style={{ color: 'green' }}></i>)\r\n                                        : (<i className='fas fa-times' style={{ color: 'red' }}></i>)}\r\n                                    </td>\r\n                                    <td>{user.isAdmin\r\n                                        ? (<i className='fas fa-check' style={{ color: 'green' }}></i>)\r\n                                        : (<i className='fas fa-times' style={{ color: 'red' }}></i>)}\r\n                                    </td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                            <Button variant='light' className=''>\r\n                                                <i className='fas fa-edit'></i>\r\n                                            </Button>\r\n                                        </LinkContainer>\r\n                                        <Button variant='danger' className=''\r\n                                            onClick={() => deleteHandler(user._id, user.name)}>\r\n                                            <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default UserListScreen\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\UserEditScreen.js",["542"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n    const userId = match.params.id\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isStaff, setIsStaff] = useState(false)\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = userUpdate\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET })\r\n            history.push('/admin/userlist')\r\n        } else {\r\n            if (userInfo && userInfo.isStaff) {\r\n                if (!user.name || user._id !== userId) {\r\n                    dispatch(getUserDetails(userId))\r\n                } else {\r\n                    setName(user.name)\r\n                    setEmail(user.email)\r\n                    setIsStaff(user.isStaff)\r\n                    setIsAdmin(user.isAdmin)\r\n                }\r\n            } else {\r\n                history.push('/login')\r\n            }\r\n        }\r\n        return () => { }\r\n    }, [user, userId, dispatch, successUpdate, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({ _id: userId, name, email, isAdmin, isStaff }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link to='/admin/userlist' className='btn btn-light my-3'> Go Back</Link>\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                {loadingUpdate && <Loader />}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control type='name' placeholder='Enter name' value={name} required\r\n                            onChange={(e) => setName(e.target.value)}>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control type='email' placeholder='Enter email' value={email} required\r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    {userInfo && userInfo.isAdmin &&\r\n                        (<>\r\n                            <Form.Group controlId='isStaff'>\r\n                                <Form.Check type='checkbox' label='Is Staff' checked={isStaff}\r\n                                    onChange={(e) => setIsStaff(e.target.checked)}>\r\n                                </Form.Check>\r\n                            </Form.Group>\r\n                            <Form.Group controlId='isAdmin'>\r\n                                <Form.Check type='checkbox' label='Is Admin' checked={isAdmin}\r\n                                    onChange={(e) => setIsAdmin(e.target.checked)}>\r\n                                </Form.Check>\r\n                            </Form.Group>\r\n                        </>)\r\n                    }\r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                    </Button>\r\n                </Form>\r\n\r\n            </FormContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserEditScreen\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\ProductListScreen.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\ProductEditScreen.js",["543"],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\OrderListScreen.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\SearchBox.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\Paginate.js",["544","545"],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\ProductCarousel.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\Meta.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\SubNav.js",["546","547","548"],"import React from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\nimport '../styles/Header.css'\r\n\r\nconst SubNav = () => {\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <LinkContainer to='/categories' className=''>\r\n                <Nav.Link active={false} className='mx-4'>Categories</Nav.Link>\r\n            </LinkContainer>\r\n            <LinkContainer to='/products'>\r\n                <Nav.Link active={false} className='mx-4'>Products</Nav.Link>\r\n            </LinkContainer>\r\n            <LinkContainer to='/brands'>\r\n                <Nav.Link active={false} className='mx-4'>Brands</Nav.Link>\r\n            </LinkContainer>\r\n            <LinkContainer to='/youtube'>\r\n                <Nav.Link active={false} className='mx-4'>Coast TV</Nav.Link>\r\n            </LinkContainer>\r\n        </ >\r\n    )\r\n}\r\n\r\nexport default SubNav\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\ProfileNav.js",["549","550","551","552"],"import React from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Navbar, Nav, Container, Col, Row } from 'react-bootstrap'\r\nimport '../styles/Header.css'\r\n\r\nconst ProfileNav = () => {\r\n\r\n\r\n    return (\r\n        <Navbar bg=\"white\" variant='light' expand=\"lg\" fill>\r\n            {/* <Nav fill>\r\n                <LinkContainer to='/aaa'>\r\n                    <Nav.Link active={false} className='text-center'>Order History</Nav.Link>\r\n                </LinkContainer>\r\n                <LinkContainer to='/bbb'>\r\n                    <Nav.Link active={false} className='text-center'>My Information</Nav.Link>\r\n                </LinkContainer>\r\n                <LinkContainer to='/ccc'>\r\n                    <Nav.Link active={false} className='text-center'>Wish List</Nav.Link>\r\n                </LinkContainer>\r\n            </Nav> */}\r\n            <Nav variant=\"pills\" fill >\r\n\r\n                <Nav.Link href=\"/home\">Active</Nav.Link>\r\n\r\n\r\n                <Nav.Link eventKey=\"link-1\">Loooonger NavLink</Nav.Link>\r\n\r\n\r\n                <Nav.Link eventKey=\"link-2\">Link</Nav.Link>\r\n\r\n\r\n                <Nav.Link eventKey=\"disabled\" disabled>\r\n                    Disabled\r\n                </Nav.Link>\r\n\r\n            </Nav>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default ProfileNav\r\n",["553","554"],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\OrderHistoryScreen.js",["555","556","557","558","559","560"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Table, Form, Button, Row, Col, Image, ListGroup, Container, Navbar, Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listMyOrders } from '../actions/orderActions'\r\nimport { UserNavBar } from '../components/UserNavBar'\r\n\r\nconst OrderHistoryScreen = ({ history }) => {\r\n\r\n    const { userInfo } = useSelector(state => state.userLogin)\r\n    const { loading, error, orders } = useSelector(state => state.orderListMy)\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            dispatch(listMyOrders())\r\n        }\r\n        return () => { }\r\n    }, [history, userInfo])\r\n\r\n\r\n\r\n    return (\r\n        <Container className=\"my-5\">\r\n            <UserNavBar></UserNavBar>\r\n            {loading ? <Loader />\r\n                : error ? <Message variant='danger'>{error}</Message>\r\n                    : orders && orders.length ? (\r\n                        <ListGroup >\r\n                            {orders.map(order => (\r\n                                <ListGroup.Item key={order.id} className=\"border-0 mb-3\">\r\n                                    <Row className=\"justify-content-center\">\r\n                                        <Col lg={4} className=\"text-center\">\r\n                                            {order.orderImage &&\r\n                                                <Image src={\"https://www.coastairbrush.com/\" + order.orderImage}\r\n                                                    alt={order.lineItems.elements[0].name} fluid rounded\r\n                                                    style={{ height: \"200px\" }}\r\n                                                />}\r\n                                        </Col>\r\n                                        <Col lg={4} className=\"my-auto\">\r\n                                            <Row className=\"justify-content-center mt-3\">\r\n                                                <h4 className=\"text-danger\" style={{ letterSpacing: \"0px\" }}>\r\n                                                    {Number(order.total / 100).toLocaleString(\"en-US\", { style: \"currency\", currency: \"USD\" })}\r\n                                                </h4>\r\n                                            </Row>\r\n                                            <Row className=\"justify-content-center\">\r\n                                                <p>\r\n                                                    {Date(order.createdTime).substring(4, 24)}\r\n                                                </p>\r\n                                            </Row>\r\n                                            <Row className=\"justify-content-center\">\r\n                                                <LinkContainer to={`/order/${order.id}`}>\r\n                                                    <Button className='btn-sm' variant='dark'>View Details</Button>\r\n                                                </LinkContainer>\r\n                                            </Row>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))\r\n                            }\r\n                        </ListGroup>\r\n                    ) : (\r\n                        <div className=\"my-5\">\r\n                            <Message variant=\"success\" >No Orders Yet</Message>\r\n                        </div>\r\n                    )\r\n\r\n\r\n            }\r\n        </Container >\r\n    )\r\n}\r\n\r\nexport default OrderHistoryScreen\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\static\\ReturnStatic.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\static\\ShippingStatic.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\static\\InternationalStatic.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\static\\AboutStatic.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\CategoryScreen.js",["561","562","563","564","565","566","567","568"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getCategoryDetails, getCategoryProducts } from '../actions/categoryActions'\r\n\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, Breadcrumb, Container } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Suggested from '../components/Suggested'\r\nimport BreadCrumbs from '../components/BreadCrumbs'\r\nimport ProductDetailsCard from '../components/ProductDetailsCard'\r\nimport CategoryCard from '../components/CategoryCard'\r\n\r\n\r\nconst CategoryScreen = ({ match }) => {\r\n    const categoryId = match.params.id\r\n    const { loading, error, category } = useSelector(state => state.categoryDetails)\r\n    const { loading: loadingProducts, error: errorProducts, products } = useSelector(state => state.categoryProducts)\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n\r\n        dispatch(getCategoryDetails(match.params.id))\r\n        dispatch(getCategoryProducts(match.params.id))\r\n\r\n        return () => { }\r\n    }, [dispatch, match])\r\n\r\n    return (\r\n        <Container className=\"my-5\">\r\n            {loading ? <Loader /> : error ? (<Message variant='danger'>{error}</Message>)\r\n                : (<>\r\n                    <BreadCrumbs category={category} />\r\n\r\n\r\n                    {category.children && category.children.length ? (\r\n                        <Row>\r\n                            {category.children.map(child => (\r\n                                <Col key={child.sectionID} xs='6' lg='3' className='p-4'>\r\n                                    <CategoryCard category={child} />\r\n                                </Col>\r\n                            ))}\r\n                        </Row>\r\n                    ) : (\r\n                        <>\r\n                            {products && products.length ? (\r\n                                <>\r\n                                    <Row>\r\n                                        {products.map(product => (\r\n                                            <Col key={product.pID} xs='6' lg='3' className=''>\r\n                                                <ProductDetailsCard product={product} />\r\n                                            </Col>\r\n                                        ))}\r\n                                    </Row>\r\n                                </>\r\n                            ) : (\r\n                                <Message variant=\"warning\" className=\"text-danger mb-5\">No products to show</Message>\r\n                            )}\r\n                            <h4 className=\"text-danger mb-4 my-5\">You May Also Like</h4>\r\n                            <Suggested />\r\n                        </>\r\n\r\n                    )\r\n\r\n                    }\r\n\r\n                </>)\r\n            }\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CategoryScreen\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\reducers\\categoryReducers.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\constants\\categoryConstants.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\actions\\categoryActions.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\ProductDetailsCard.js",["569","570"],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\Suggested.js",["571","572","573"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport { getSuggestedProducts } from '../actions/productActions'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport ProductSimpleCard from './ProductSimpleCard'\r\n\r\nconst Suggested = () => {\r\n\r\n    const { loading, error, suggested } = useSelector(state => state.productSuggested)\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(getSuggestedProducts())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <>\r\n            {error ? (<Message variant='danger'>{error}</Message>)\r\n                : suggested && (\r\n                    <Row>\r\n                        {suggested.map(product => (\r\n                            <Col key={product.pID} xs='6' lg='3' className='px-4'>\r\n                                <ProductSimpleCard product={product} />\r\n                            </Col>\r\n                        ))}\r\n                    </Row>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Suggested\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\ProductSimpleCard.js",["574","575","576","577"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, Breadcrumb, Button } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport \"../styles/Cards.css\"\r\n\r\n\r\nconst ProductSimpleCard = ({ product }) => {\r\n    return (\r\n        <Link to={`/product/${product.pID}`} className=\"linkBox\">\r\n            <div className=\"mb-5 productSimpleCard\">\r\n                <Image className=\"px-2\" style={{ width: \"100%\", height: \"200px\", objectFit: \"contain\" }}\r\n                    src={product.images && product.images[0] ? \"https://www.coastairbrush.com/\" + product.images[0].imageSrc\r\n                        : \"/images/sample.jpg\"}\r\n                />\r\n                <p className=\"text-center mt-4 text-danger\">\r\n                    {product.pName}\r\n                </p>\r\n                <div className=\"overlay\">\r\n                    <Button className=\"middle\">See More</Button>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default ProductSimpleCard\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\Breadcrumbs.js",["578","579","580","581","582"],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\BreadCrumbs.js",["583","584","585","586","587"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Breadcrumb } from 'react-bootstrap'\r\nimport { getCategoryDetails } from '../actions/categoryActions'\r\n\r\nconst BreadCrumbs = ({ category }) => {\r\n\r\n    return (\r\n        <>\r\n            {\r\n                category && category.breadcrumbs && category.breadcrumbs[0] && (\r\n                    <Breadcrumb className=\"mt-5\">\r\n                        <LinkContainer to=\"/\">\r\n                            <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n                        </LinkContainer>\r\n                        {category.breadcrumbs.slice(1).reverse().map(crumb => (\r\n                            <LinkContainer key={crumb.sectionID} to={`/category/${crumb.sectionID}`}>\r\n                                <Breadcrumb.Item>{crumb.sectionName}</Breadcrumb.Item>\r\n                            </LinkContainer>\r\n                        ))}\r\n                        {\r\n                            category.breadcrumbs[0] &&\r\n                            <Breadcrumb.Item active className=\"text-danger\">\r\n                                {category.breadcrumbs[0].sectionName}\r\n                            </Breadcrumb.Item>\r\n                        }\r\n                    </Breadcrumb>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BreadCrumbs\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\ProductCrumbs.js",["588"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Breadcrumb } from 'react-bootstrap'\r\nimport { getCategoryDetails } from '../actions/categoryActions'\r\n\r\nconst Breadcrumbs = ({ product }) => {\r\n\r\n    const { category } = useSelector(state => state.categoryDetails)\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        if (product) {\r\n            dispatch(getCategoryDetails(product.pSection))\r\n        }\r\n    }, [dispatch, product])\r\n\r\n    return (\r\n        <>\r\n            {\r\n                category && category.breadcrumbs && category.breadcrumbs[0] && (\r\n                    <Breadcrumb className=\"mb-4\">\r\n                        <LinkContainer to=\"/\">\r\n                            <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n                        </LinkContainer>\r\n                        {category.breadcrumbs.slice().reverse().map(crumb => (\r\n                            <LinkContainer key={crumb.sectionID} to={`/category/${crumb.sectionID}`}>\r\n                                <Breadcrumb.Item>{crumb.sectionName}</Breadcrumb.Item>\r\n                            </LinkContainer>\r\n                        ))}\r\n                        {\r\n                            <Breadcrumb.Item active className=\"text-danger\">\r\n                                {product.pName}\r\n                            </Breadcrumb.Item>\r\n                        }\r\n                    </Breadcrumb>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Breadcrumbs\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\TopThree.js",["589","590","591","592"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Image, Button } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { getSuggestedProducts } from '../actions/productActions'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport ProductSimpleCard from './ProductSimpleCard'\r\n\r\nconst TopThree = () => {\r\n\r\n    const { loading, error, suggested } = useSelector(state => state.productSuggested)\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(getSuggestedProducts())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <>\r\n            {error ? (<Message variant='danger'>{error}</Message>)\r\n                : suggested && (\r\n                    <Row>\r\n                        {suggested.slice(1).map(product => (\r\n                            <Col key={product.pID} xs='6' lg='4' className='px-5'>\r\n                                <Link to={`/product/${product.pID}`} className=\"linkBox\">\r\n                                    <div className=\"mb-5\">\r\n                                        <Image className=\"\" style={{ width: \"100%\", height: \"250px\", objectFit: \"contain\" }}\r\n                                            src={product.images && product.images[0] ? \"https://www.coastairbrush.com/\" + product.images[0].imageSrc\r\n                                                : \"/images/sample.jpg\"}\r\n                                        />\r\n                                        <h5 className=\"text-center mt-4 px-4\">\r\n                                            {product.pName}\r\n                                        </h5>\r\n                                        <h5 className=\"text-center text-danger px-4\">\r\n                                            {product.pPrice\r\n                                                ? Number(product.pPrice / 100).toLocaleString(\"en-US\", { style: \"currency\", currency: \"USD\" })\r\n                                                : \"See Options\"\r\n                                            }\r\n                                        </h5>\r\n                                        <div className=\"overlay\">\r\n                                            <Button className=\"middle\">See More</Button>\r\n                                        </div>\r\n                                    </div>\r\n                                </Link>\r\n                            </Col>\r\n                        ))}\r\n                    </Row>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TopThree\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\CategoryCard.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\ShippingMethodScreen.js",["593","594","595","596","597","598"],"import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Row, Col, ListGroup, Container } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingInfo, saveShippingMethod } from '../actions/cartActions'\r\nimport { SideCart } from '../components/SideCart'\r\n\r\n\r\nconst ShippingMethodScreen = ({ history, location }) => {\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const { cartItems, shippingInfo, shippingMethod } = useSelector(state => state.cart)\r\n    // if (shippingInfo && Object.keys(shippingInfo).length == 0) {\r\n    //     history.push('/shipping')\r\n    // }\r\n\r\n    const subtotal = cartItems.reduce((acc, curr) => acc + curr.qty * curr.price, 0)\r\n    const [methods, setMethods] = useState([])\r\n    const [selected, setSelected] = useState(shippingMethod)\r\n\r\n    var items = cartItems.reduce((acc, curr) => acc + Number(curr.qty), 0)\r\n    let samplePrices = [\r\n        { method: \"UPS (Ground)\", price: subtotal < 10000 ? 900 : subtotal * 0.09, disabled: false },\r\n        { method: \"USPS (Coming Soon)\", price: subtotal < 10000 ? 900 : subtotal * 0.09, disabled: true },\r\n    ]\r\n\r\n    useEffect(() => {\r\n        setMethods(samplePrices)\r\n\r\n    }, [subtotal])\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const radioHandler = (e) => {\r\n        setSelected(methods[e.target.value])\r\n    }\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingMethod(selected))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <Container className=\"my-5 py-3\">\r\n            <Row>\r\n                <Col lg={6}>\r\n                    {/* <h5 className=\"\">Shipping Information</h5> */}\r\n                    <ListGroup>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>\r\n                                    <strong>Contact:</strong> {shippingInfo.email}\r\n                                </Col>\r\n                                <Col xs=\"auto\" className=\"text-right\">\r\n                                    <Link to=\"/shipping\" className=\"text-muted\">Change</Link>\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>\r\n                                    <strong>Ship to: </strong>\r\n                                    <br /> {shippingInfo.address}\r\n                                    {shippingInfo.address2 && <><br /> {shippingInfo.address2}</>}\r\n                                    <br />{shippingInfo.city}, {shippingInfo.region}, {shippingInfo.country}, {shippingInfo.postalCode}\r\n                                </Col>\r\n                                <Col xs=\"auto\" className=\"text-right\">\r\n                                    <Link to=\"/shipping\" className=\"text-muted\">Change</Link>\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n\r\n                    <h5 className=\"mt-5\">Shipping Method</h5>\r\n                    <p>(Items: {items})</p>\r\n                    <Form onSubmit={submitHandler}>\r\n                        <ListGroup>\r\n                            {methods.map((method, index) => (\r\n                                <ListGroup.Item key={index}>\r\n                                    <Row >\r\n                                        <Col>\r\n                                            <Form.Check type=\"radio\" name=\"method\" id=\"standard\" value={index} label={method.method}\r\n                                                defaultChecked={method.method == selected.method} disabled={method.disabled}\r\n                                                onChange={radioHandler} />\r\n                                        </Col>\r\n                                        <Col xs=\"auto\" className=\"text-right\">\r\n                                            {Number(method.price / 100).toLocaleString(\"en-US\", { style: \"currency\", currency: \"USD\" })}\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                        <Button className=\"mt-5\" type=\"submit\"\r\n                            disabled={!selected.method}>\r\n                            Continue to Checkout\r\n                        </Button>\r\n                    </Form>\r\n\r\n                </Col>\r\n                <Col lg={6} className=\"pl-5 d-none d-lg-block\">\r\n                    <SideCart />\r\n                </Col>\r\n            </Row>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ShippingMethodScreen\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\SideCart.js",["599","600","601","602","603","604","605","606","607","608","609","610","611","612","613","614","615","616"],"import React, { useState, useEffect } from 'react'\r\nimport { Card, Button, Row, Col, ListGroup, Image } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nexport const SideCart = () => {\r\n\r\n    const { cartItems, shippingInfo, shippingMethod, discount } = useSelector(state => state.cart)\r\n    if (discount) var { discountAmount, discountType, discountName } = discount\r\n\r\n    const subtotal = cartItems.reduce((acc, curr) => acc + curr.qty * curr.price, 0)\r\n    const taxRate = shippingInfo.taxRate / 10000000\r\n    const shippingTotal = shippingMethod.price\r\n\r\n    if (discount && discountAmount && discountType === \"$\") {\r\n        var totalDiscount = discountAmount * 100\r\n        var totalTax = (subtotal - totalDiscount) * taxRate\r\n        var totalTotal = subtotal + totalTax + shippingTotal - totalDiscount\r\n    }\r\n    else if (discount && discountAmount && discountType === \"%\") {\r\n        var totalTax = subtotal * taxRate * (100 - discountAmount) / 100\r\n        var totalDiscount = (subtotal + shippingTotal) * (discountAmount) / 100\r\n        var totalTotal = subtotal + totalTax + shippingTotal - totalDiscount\r\n    }\r\n    else {\r\n        var totalTax = subtotal * taxRate\r\n        var totalDiscount = 0\r\n        var totalTotal = subtotal + totalTax + shippingTotal\r\n    }\r\n\r\n\r\n    return (\r\n        <Card>\r\n            <ListGroup className=\"border p-4\">\r\n                {cartItems.map((item) => (\r\n                    <ListGroup.Item key={item.name} className=\"border-0\">\r\n                        <Row className=\"m-0\">\r\n                            <Col xs=\"auto\" className=\"pl-0 my-auto\">\r\n                                ({item.qty})\r\n                            </Col>\r\n                            <Col xs={2} className=\"p-0\">\r\n                                <Image src={\"https://www.coastairbrush.com/\" + item.image}\r\n                                    alt={item.name} fluid rounded\r\n                                // style={{ height: \"100px\" }} \r\n                                />\r\n                            </Col>\r\n                            <Col xs className=\"my-auto\">\r\n                                {item.name}\r\n                            </Col>\r\n                            <Col xs=\"auto\" className=\"pr-0 my-auto\">\r\n                                {Number(item.qty * item.price / 100).toLocaleString(\"en-US\", { style: \"currency\", currency: \"USD\" })}\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                ))}\r\n\r\n                <div style={{ height: \"2px\" }} />\r\n\r\n                <ListGroup.Item className=\" border-bottom-0 border-left-0 border-right-0 pt-4\">\r\n                    <Row className=\"m-0\">\r\n                        <Col xs className=\"pl-0\">\r\n                            Subtotal:\r\n                        </Col>\r\n                        <Col xs=\"auto\" className=\"pr-0\">\r\n                            {Number(subtotal / 100).toLocaleString(\"en-US\", { style: \"currency\", currency: \"USD\" })}\r\n                        </Col>\r\n                    </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item className=\"border-0\">\r\n                    <Row className=\"m-0\">\r\n                        <Col xs className=\"pl-0\">\r\n                            Tax:\r\n                        </Col>\r\n                        <Col xs=\"auto\" className=\"pr-0\">\r\n                            {shippingInfo && Object.keys(shippingInfo).length != 0 ?\r\n                                Number(totalTax / 100).toLocaleString(\"en-US\", { style: \"currency\", currency: \"USD\" })\r\n                                : \"-\"\r\n                            }\r\n                        </Col>\r\n                    </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item className=\"border-top-0 border-left-0 border-right-0 pb-4\">\r\n                    <Row className=\"m-0\">\r\n                        <Col xs className=\"pl-0\">\r\n                            Shipping:\r\n                        </Col>\r\n                        <Col xs=\"auto\" className=\"pr-0\">\r\n                            {shippingMethod && Object.keys(shippingMethod).length != 0 ?\r\n                                Number(shippingMethod.price / 100).toLocaleString(\"en-US\", { style: \"currency\", currency: \"USD\" })\r\n                                : \"-\"\r\n                            }\r\n                        </Col>\r\n                    </Row>\r\n                </ListGroup.Item>\r\n                {discount && discount.discountAmount != 0 &&\r\n                    <ListGroup.Item className=\"border-0\">\r\n                        <Row className=\"m-0\">\r\n                            <Col xs className=\"pl-0\">\r\n                                Discounts:\r\n                            </Col>\r\n                            <Col>{discount && discount.discountAmount != 0 && discount.discountName}</Col>\r\n                            <Col xs=\"auto\" className=\"pr-0\">\r\n                                {\"(\" + Number(totalDiscount / 100).toLocaleString(\"en-US\", { style: \"currency\", currency: \"USD\" }) + \")\"}\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                }\r\n\r\n                <div style={{ height: \"2px\" }} />\r\n\r\n                <ListGroup.Item className=\"border-0 pt-4\">\r\n                    <Row className=\"m-0\">\r\n                        <Col xs className=\"pl-0\">\r\n                            Total:\r\n                        </Col>\r\n                        <Col xs=\"auto\" className=\"pr-0\">\r\n                            {Object.keys(shippingMethod).length != 0 && Object.keys(shippingInfo).length != 0 ?\r\n                                Number(totalTotal / 100).toLocaleString(\"en-US\", { style: \"currency\", currency: \"USD\" })\r\n                                : \"-\"\r\n                            }\r\n                        </Col>\r\n                    </Row>\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n        </Card>\r\n    )\r\n}\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\SearchScreen.js",["617","618","619","620","621","622"],"import React, { useEffect, useState } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col, Container, Card, Form, ListGroup } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\nimport ProductDetailsCard from '../components/ProductDetailsCard'\r\nimport Suggested from '../components/Suggested'\r\n\r\nconst SearchScreen = ({ history, match }) => {\r\n    const pageNumber = match.params.pageNumber || 1\r\n    const keyword = match.params.keyword || \"\"\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, page, pages } = productList\r\n\r\n    const [filter, setFilter] = useState([])\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword, pageNumber, 20, \"updatedAt\", -1, 0))\r\n    }, [keyword])\r\n\r\n    const addBrand = (e) => {\r\n        // alert(\"Added \" + e)\r\n        setFilter(arr => [...arr, e])\r\n    }\r\n    const removeBrand = (e) => {\r\n        // alert(\"Removed \" + e)\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(filter)\r\n    }, [filter])\r\n\r\n    return (\r\n        <Container className=\"my-5 pt-5\">\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                : (<>\r\n                    <Row>\r\n                        <Col xs={12} lg={3}>\r\n                            <Card>\r\n                                <Card.Header as=\"h5\">Filter by Brand</Card.Header>\r\n                                <ListGroup variant=\"flush\" className=\"my-2 border-0\">\r\n                                    {[\r\n                                        \"Advantage Refinish Products\",\r\n                                        \"Air Gunsa\",\r\n                                        \"Airbrush Action\",\r\n                                        \"Alpha 6\",\r\n                                        \"Aqua Flow\",\r\n                                        \"Artograph\",\r\n                                        \"Artool\",\r\n                                        \"Auto Air\",\r\n                                        \"Auto Air candy2O\",\r\n                                        \"Auto Borne\",\r\n                                        \"Aztek\",\r\n                                        \"Badger\",\r\n                                        \"California Air Tools\",\r\n                                        \"Coast Airbrush\",\r\n                                        \"Comart\",\r\n                                        \"Createx\",\r\n                                        \"Createx Colors Illustration Colors\",\r\n                                        \"DeVilbiss\",\r\n                                        \"DH Woodworks\",\r\n                                        \"Dry Air Systems\",\r\n                                        \"Dura-Block\",\r\n                                        \"EBA\",\r\n                                        \"Excel\",\r\n                                        \"FBS Tapes & Sprayers\",\r\n                                        \"Flake King\",\r\n                                        \"Freak Flex\",\r\n                                        \"Graftobian\",\r\n                                        \"Grex\",\r\n                                        \"HB Bodyworks\",\r\n                                        \"Holbein Aeroflash\",\r\n                                        \"House of Kolor\",\r\n                                        \"House of Kolor Aerosols\",\r\n                                        \"House of Kolor Shimrin 2\",\r\n                                        \"Iwata Medea\",\r\n                                        \"JAtech\",\r\n                                        \"KopyKake\",\r\n                                        \"La D'ore\",\r\n                                        \"Lil Daddy Roth Flake\",\r\n                                        \"LumaIII\",\r\n                                        \"Lumilor\",\r\n                                        \"Mack\",\r\n                                        \"Mad Fabricators\",\r\n                                        \"Medea Textile acrylic\",\r\n                                        \"Meguiar's\",\r\n                                        \"Old School Flake\",\r\n                                        \"One Shot\",\r\n                                        \"Paasche\",\r\n                                        \"Preval\",\r\n                                        \"Pro Aiir Body Paints\",\r\n                                        \"Sata\",\r\n                                        \"Sharpen Air\",\r\n                                        \"Silentaire\",\r\n                                        \"Spray Max\",\r\n                                        \"System 51\",\r\n                                        \"Tamiya\",\r\n                                        \"Temptu\",\r\n                                        \"Trulers\",\r\n                                        \"Vintage Flatz\",\r\n                                        \"Virtus\",\r\n                                        \"VsionAir\",\r\n                                        \"Wicked\",\r\n                                        \"Xtreme\",\r\n                                    ].map((brand) => (\r\n                                        <ListGroup.Item key={brand} className=\"py-1 border-0\">\r\n                                            <Form.Check type=\"checkbox\" value={brand} label={brand}\r\n                                                onChange={(e) => e.target.checked ? addBrand(e.target.value) : removeBrand(e.target.value)}\r\n                                            ></Form.Check>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                                <Button variant=\"danger\">\r\n                                    Filter\r\n                                </Button>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col xs={12} lg={9}>\r\n                            <Row>\r\n                                {products.map(product => (\r\n                                    <Col key={product.pID} xs='6' lg='3' className=''>\r\n                                        <ProductDetailsCard product={product} />\r\n                                    </Col>\r\n                                ))}\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                    <h4 className=\"text-danger mb-4 my-5\">You May Also Like</h4>\r\n                    <Suggested />\r\n                    <Row>\r\n                        <Col xs={6} style={{ wordWrap: \"break-word\" }}>\r\n                            <Paginate pages={pages} page={page} isAdmin={true} />\r\n                        </Col>\r\n                    </Row>\r\n                </>\r\n                )}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default SearchScreen\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\UserNavBar.js",["623"],"import React, { useContext } from 'react'\r\nimport { UserContext } from '../contexts/UserContext'\r\nimport { Navbar, Nav } from 'react-bootstrap'\r\nimport { useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nexport const UserNavBar = () => {\r\n\r\n    const user = useContext(UserContext)\r\n\r\n    return (\r\n        <Navbar variant='light' expand=\"lg\" collapseOnSelect className='pb-4 mb-5 pt-0'\r\n            style={{\r\n                borderStyle: \"none none solid none\",\r\n                borderWidth: \"1px\",\r\n            }}\r\n        >\r\n            <Nav className='mx-auto'>\r\n                <LinkContainer to='/wishlist'>\r\n                    <Nav.Link active={false} className='mx-2 mx-xl-4'>Wish List</Nav.Link>\r\n                </LinkContainer>\r\n                <LinkContainer to='/profile'>\r\n                    <Nav.Link active={false} className='mx-2 mx-xl-4'>About</Nav.Link>\r\n                </LinkContainer>\r\n                {user.isStaff\r\n                    ? <LinkContainer to='/admin/employeehistory'>\r\n                        <Nav.Link active={false} className='mx-2 mx-xl-4'>Employee History</Nav.Link>\r\n                    </LinkContainer>\r\n                    : <LinkContainer to='/orderhistory'>\r\n                        <Nav.Link active={false} className='mx-2 mx-xl-4'>Order History</Nav.Link>\r\n                    </LinkContainer>}\r\n            </Nav>\r\n        </Navbar >\r\n    )\r\n}\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\static\\ContactStatic.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\static\\CategoryStatic.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\ReportsScreen.js",["624","625","626","627","628","629","630"],"import React, { useEffect, useState } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col, Container, Form } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getAverage, getLowInv } from '../actions/reportActions'\r\n\r\nconst ReportScreen = ({ history, match }) => {\r\n    const pageNumber = match.params.pageNumber || 1\r\n\r\n    const now = new Date(Date.now())\r\n    const nowPlusDay = new Date(Date.now() + 86400000)\r\n    const today = `${now.getFullYear()}/${now.getMonth() + 1}/${now.getDate()} `\r\n    const tomrrow = `${nowPlusDay.getFullYear()}/${nowPlusDay.getMonth() + 1}/${nowPlusDay.getDate()} `\r\n\r\n    // alert(today)\r\n    const [start, setStart] = useState(today)\r\n    const [end, setEnd] = useState(tomrrow)\r\n    const [startType, setStartType] = useState(\"text\")\r\n    const [endType, setEndType] = useState(\"text\")\r\n\r\n    const { loading, error, dataLowInv } = useSelector(state => state.reportLowInv)\r\n    const { userInfo } = useSelector(state => state.userLogin)\r\n    const { loading: loadingAverage, error: errorAverage, dataAverage } = useSelector(state => state.reportAverage)\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isStaff) {\r\n            dispatch(getLowInv())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n    }, [])\r\n\r\n\r\n    // useEffect(() => {\r\n    //     if (userInfo && userInfo.isStaff) {\r\n    //     var startUNIX = (new Date(start)).getTime()\r\n    //     var endUNIX = (new Date(end)).getTime()\r\n    //     dispatch(getAverage(startUNIX, endUNIX))\r\n    // } else {\r\n    //     history.push('/login')\r\n    // }\r\n\r\n    const sumbitHandler = (e) => {\r\n        e.preventDefault()\r\n        var startUNIX = (new Date(start)).getTime()\r\n        var endUNIX = (new Date(end)).getTime()\r\n        alert(`Start: ${start}\\nEnd: ${end}\\nStart: ${startUNIX}\\nEnd: ${endUNIX}`)\r\n        dispatch(getAverage(startUNIX, endUNIX))\r\n    }\r\n    return (\r\n        <Container className=\"my-5\">\r\n            <Row className='pb-4'>\r\n                <h2 className=\"mx-auto\">Reports</h2>\r\n            </Row>\r\n            <Form>\r\n                <Form.Row className=\"mb-5 justify-content-center\" >\r\n                    <Col xs={{ span: 3 }}>\r\n                        <Form.Control\r\n                            type={startType}\r\n                            // value={startType === \"text\" ? \"Start Date\" : start}\r\n                            value={start}\r\n                            // onBlur={() => setStartType(\"text\")}\r\n                            // onFocus={() => setStartType(\"date\")}\r\n                            onChange={(e) => setStart(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Col>\r\n\r\n                    <Col xs={{ span: 3 }}>\r\n                        <Form.Control\r\n                            type={endType}\r\n                            // value={endType === \"text\" ? \"End Date\" : end}\r\n                            value={end}\r\n                            // onBlur={() => setEndType(\"text\")}\r\n                            // onFocus={() => setEndType(\"date\")}\r\n                            onChange={(e) => setEnd(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Col>\r\n                    <Col xs={{ span: 3 }} >\r\n                        <Button block style={{ paddingBottom: \"8px\" }}\r\n                            onClick={sumbitHandler} >\r\n                            Go\r\n                        </Button>\r\n                    </Col>\r\n                </Form.Row>\r\n            </Form>\r\n            {/* {loadingAverage ? <Loader />\r\n                : error ? <Message variant='danger'>{errorAverage}</Message>\r\n                    : dataAverage && (<> */}\r\n            <Row className=\"my-5 justify-content-center\">\r\n                <Col xs=\"auto\" className=\"my-auto\">\r\n                    <h4>Number of Orders:</h4>\r\n                    {/* <p>{(start)}</p> */}\r\n                </Col>\r\n                <Col xs=\"auto\" className=\"text-center\">\r\n                    <h2>{0}</h2>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"my-5 justify-content-center\">\r\n                <Col xs=\"auto\" className=\"my-auto\">\r\n                    <h4>Average Order Value:</h4>\r\n                    {/* <p>{(start)}</p> */}\r\n                </Col>\r\n                <Col xs=\"auto\" className=\"text-center\">\r\n                    <h2>{0}</h2>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"my-5 justify-content-center\">\r\n                <Col xs=\"auto\" className=\"my-auto\">\r\n                    <h4>Best Selling Products (By Price):</h4>\r\n                    {/* <p>{(start)}</p> */}\r\n                </Col>\r\n                <Col xs=\"auto\" className=\"text-center\">\r\n                    <h2>{\"\"}</h2>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"my-5 justify-content-center\">\r\n                <Col xs=\"auto\" className=\"my-auto\">\r\n                    <h4>Best Selling Products (By Qty):</h4>\r\n                    {/* <p>{(start)}</p> */}\r\n                </Col>\r\n                <Col xs=\"auto\" className=\"text-center\">\r\n                    <h2>{\"\"}</h2>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"my-5 justify-content-center\">\r\n                <Col xs=\"auto\" className=\"my-auto\">\r\n                    <h4>Best Selling Category (By Price):</h4>\r\n                    {/* <p>{(start)}</p> */}\r\n                </Col>\r\n                <Col xs=\"auto\" className=\"text-center\">\r\n                    <h2>{\"\"}</h2>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"my-5 justify-content-center\">\r\n                <Col xs=\"auto\" className=\"my-auto\">\r\n                    <h4>Best Selling Category (By Qty):</h4>\r\n                    {/* <p>{(start)}</p> */}\r\n                </Col>\r\n                <Col xs=\"auto\" className=\"text-center\">\r\n                    <h2>{\"\"}</h2>\r\n                </Col>\r\n            </Row>\r\n            {/* </>)\r\n            } */}\r\n\r\n            <Form>\r\n                <Form.Row className=\"mb-5 justify-content-center\" >\r\n                    <Col xs={{ span: 3 }} className=\"my-auto\">\r\n                        <h4 >Day over Day</h4>\r\n                    </Col>\r\n\r\n                    <Col xs={{ span: 3 }}>\r\n                        <Form.Control\r\n                            type={endType}\r\n                            // value={endType === \"text\" ? \"End Date\" : end}\r\n                            value={end}\r\n                            // onBlur={() => setEndType(\"text\")}\r\n                            // onFocus={() => setEndType(\"date\")}\r\n                            onChange={(e) => setEnd(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Col>\r\n                    <Col xs={{ span: 3 }} >\r\n                        <Button block style={{ paddingBottom: \"8px\" }}\r\n                            onClick={sumbitHandler} >\r\n                            Go\r\n                        </Button>\r\n                    </Col>\r\n                </Form.Row>\r\n            </Form>\r\n            <Row className=\"my-5 justify-content-center\">\r\n                <Col xs=\"auto\" className=\"my-auto\">\r\n                    <h4>Total Sales on (2021/11/1):</h4>\r\n                    {/* <p>{(start)}</p> */}\r\n                </Col>\r\n                <Col xs=\"auto\" className=\"text-center\">\r\n                    <h2>{0}</h2>\r\n                </Col>\r\n                <Col xs=\"auto\" className=\"my-auto\">\r\n                    <h4>Total Sales on (2021/10/31):</h4>\r\n                    {/* <p>{(start)}</p> */}\r\n                </Col>\r\n                <Col xs=\"auto\" className=\"text-center\">\r\n                    <h2>{0}</h2>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Form>\r\n                <Form.Row className=\"mb-5 justify-content-center\" >\r\n                    <Col xs={{ span: 3 }} className=\"my-auto\">\r\n                        <h4 >Month over Month</h4>\r\n                    </Col>\r\n\r\n                    <Col xs={{ span: 3 }}>\r\n                        <Form.Control\r\n                            type={endType}\r\n                            // value={endType === \"text\" ? \"End Date\" : end}\r\n                            value={end}\r\n                            // onBlur={() => setEndType(\"text\")}\r\n                            // onFocus={() => setEndType(\"date\")}\r\n                            onChange={(e) => setEnd(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Col>\r\n                    <Col xs={{ span: 3 }} >\r\n                        <Button block style={{ paddingBottom: \"8px\" }}\r\n                            onClick={sumbitHandler} >\r\n                            Go\r\n                        </Button>\r\n                    </Col>\r\n                </Form.Row>\r\n            </Form>\r\n            <Row className=\"my-5 justify-content-center\">\r\n                <Col xs=\"auto\" className=\"my-auto\">\r\n                    <h4>Total Sales in (November):</h4>\r\n                    {/* <p>{(start)}</p> */}\r\n                </Col>\r\n                <Col xs=\"auto\" className=\"text-center\">\r\n                    <h2>{0}</h2>\r\n                </Col>\r\n                <Col xs=\"auto\" className=\"my-auto\">\r\n                    <h4>Total Sales in (October):</h4>\r\n                    {/* <p>{(start)}</p> */}\r\n                </Col>\r\n                <Col xs=\"auto\" className=\"text-center\">\r\n                    <h2>{0}</h2>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Form>\r\n                <Form.Row className=\"mb-5 justify-content-center\" >\r\n                    <Col xs={{ span: 3 }} className=\"my-auto\">\r\n                        <h4 >Year over Year</h4>\r\n                    </Col>\r\n\r\n                    <Col xs={{ span: 3 }}>\r\n                        <Form.Control\r\n                            type={endType}\r\n                            // value={endType === \"text\" ? \"End Date\" : end}\r\n                            value={end}\r\n                            // onBlur={() => setEndType(\"text\")}\r\n                            // onFocus={() => setEndType(\"date\")}\r\n                            onChange={(e) => setEnd(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Col>\r\n                    <Col xs={{ span: 3 }} >\r\n                        <Button block style={{ paddingBottom: \"8px\" }}\r\n                            onClick={sumbitHandler} >\r\n                            Go\r\n                        </Button>\r\n                    </Col>\r\n                </Form.Row>\r\n            </Form>\r\n            <Row className=\"my-5 justify-content-center\">\r\n                <Col xs=\"auto\" className=\"my-auto\">\r\n                    <h4>Total Sales on (2021)</h4>\r\n                    {/* <p>{(start)}</p> */}\r\n                </Col>\r\n                <Col xs=\"auto\" className=\"text-center\">\r\n                    <h2>{0}</h2>\r\n                </Col>\r\n                <Col xs=\"auto\" className=\"my-auto\">\r\n                    <h4>Total Sales on (2020):</h4>\r\n                    {/* <p>{(start)}</p> */}\r\n                </Col>\r\n                <Col xs=\"auto\" className=\"text-center\">\r\n                    <h2>{0}</h2>\r\n                </Col>\r\n            </Row>\r\n\r\n\r\n\r\n            <Row className='pt-5 pb-4'>\r\n                <h2 className=\"mx-auto\">Low Inventory Report</h2>\r\n            </Row>\r\n            {\r\n                loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : dataLowInv && (<>\r\n                        <Table striped bordered hover responsive className='table-sm mt-3'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>{\"NAME \"}\r\n                                    </th>\r\n                                    <th>{\"MODIFIED \"}\r\n                                    </th>\r\n                                    <th>{\"PRICE \"}\r\n                                    </th>\r\n                                    <th>{\"STOCK \"}\r\n                                    </th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {dataLowInv.map(product => (\r\n                                    <tr key={product.cloverID}>\r\n                                        <td>{product.pName}</td>\r\n                                        <td>{product.updatedAt.slice(0, 10)}</td>\r\n                                        <td>{Number(product.pPrice / 100).toLocaleString(\"en-US\", { style: \"currency\", currency: \"USD\" })}</td>\r\n                                        <td>{product.pInStock}</td>\r\n                                        <td className=\"text-center\">\r\n                                            <LinkContainer to={`/product/${product.cloverID}`}>\r\n                                                <Button variant='dark' className='btn-sm'>\r\n                                                    <i className=\"fas fa-link\"></i>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                        {/* <Paginate pages={pages} page={page} isAdmin={true} /> */}\r\n                    </>\r\n                    )\r\n            }\r\n        </Container >\r\n    )\r\n}\r\n\r\nexport default ReportScreen\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\reducers\\reportReducers.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\constants\\reportConstants.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\actions\\reportActions.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\ImageDisplay.js",["631","632","633","634"],"import React, { useState, useEffect } from 'react'\r\nimport { Image, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\n\r\nconst ImageDisplay = ({ product }) => {\r\n\r\n    var images = product.images\r\n    var thumbs = [images[0]]\r\n    var bigs = [images[0]]\r\n    images.sort((a, b) => {\r\n        if (a.imageNumber < b.imageNumber) return -1\r\n        if (a.imageNumber > b.imageNumber) return 1\r\n        if (a.imageType < b.imageType) return -1\r\n        if (a.imageType > b.imageType) return 1\r\n    })\r\n\r\n    for (var i = 1; i < images.length; i++) {\r\n        if (images[i].imageNumber == thumbs[thumbs.length - 1].imageNumber) {\r\n            bigs.pop()\r\n            bigs.push(images[i])\r\n            continue;\r\n        }\r\n        else {\r\n            thumbs.push(images[i])\r\n            bigs.push(images[i])\r\n        }\r\n    }\r\n\r\n    const [selected, setSelected] = useState(0)\r\n\r\n    useEffect(() => {\r\n\r\n    }, [])\r\n\r\n\r\n    if (product.images.length === 0) {\r\n        return (\r\n            <Image src={\"/images/sample.jpg\"} alt={product.pName} style={{ width: \"100%\", objectFit: \"contain\" }} />\r\n        )\r\n    }\r\n    return (\r\n        <>\r\n            <Image src={\"https://www.coastairbrush.com/\" + bigs[selected].imageSrc} alt={product.pName}\r\n                style={{ width: \"100%\", objectFit: \"contain\" }}\r\n            />\r\n            {(images.length > 1) && <Row className=\"my-5 justify-content-center\" >\r\n                {thumbs.map((thumb, index) => (\r\n                    <Col key={index} xs=\"auto\"\r\n                    // className={selected == index && \"border border-danger\"}\r\n                    >\r\n                        <Image src={\"https://www.coastairbrush.com/\" + thumb.imageSrc} alt={product.pName}\r\n                            style={{ height: \"75px\", textAlign: \"center\" }}\r\n                            onClick={() => setSelected(index)}\r\n                        />\r\n                    </Col>\r\n                ))}\r\n            </Row>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ImageDisplay\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\UploadsScreen.js",["635","636","637","638","639","640","641","642","643","644"],"import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Container, Modal } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\nimport ExampleDoc from '../assest/productdata.csv'\r\n\r\nconst UploadsScreen = () => {\r\n\r\n    const [uploading, setUploading] = useState(false)\r\n    const [success, setSuccess] = useState(\"\")\r\n    const [error, setError] = useState(\"\")\r\n\r\n    const { userInfo } = useSelector(state => state.userLogin);\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append('image', file)\r\n        setUploading(true)\r\n        setSuccess(\"\")\r\n        setError(\"\")\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    Authorization: `Bearer ${userInfo.token}`,\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n            const { data } = await axios.post('/api/upload', formData, config)\r\n            setUploading(false)\r\n            setSuccess(data)\r\n        } catch (error) {\r\n            console.error(error)\r\n            setUploading(false)\r\n            setError(error)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Container className=\"my-5 py-3\">\r\n            <h2 className=\"mb-5\">Uploads</h2>\r\n            <Modal show={uploading} backdrop=\"static\" keyboard={false}>\r\n                <Modal.Header>\r\n                    <Modal.Title>Uploading File...\r\n                        <br /> Please do not close this window</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body> <Loader /> </Modal.Body>\r\n            </Modal>\r\n\r\n            <Form>\r\n                <Form.Group controlId='image'>\r\n                    <Form.Label>Product Images</Form.Label>\r\n                    <Form.File id='image-file' label='Choose File' custom\r\n                        onChange={uploadFileHandler}>\r\n                    </Form.File>\r\n                    {uploading && <Loader />}\r\n                </Form.Group>\r\n                {success && `Successfully uploaded: prodimages/${success}`}\r\n                {error && `error: ${error}`}\r\n            </Form>\r\n\r\n\r\n\r\n            {/* <a href={ExampleDoc} download=\"bulkUpload.csv\" target='_blank'>\r\n                <Button className=\"\">CSV Template</Button>\r\n            </a> */}\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default UploadsScreen\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\ImageEditer.js",["645","646","647","648","649","650","651","652","653","654","655","656"],"import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Modal } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateImages } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\nimport { set } from 'mongoose'\r\n\r\n\r\nconst ImageEditer = ({ product }) => {\r\n\r\n    const [thumb1, setThumb1] = useState(\"\")\r\n    const [full1, setFull1] = useState(\"\")\r\n    const [thumb2, setThumb2] = useState(\"\")\r\n    const [full2, setFull2] = useState(\"\")\r\n    const [thumb3, setThumb3] = useState(\"\")\r\n    const [full3, setFull3] = useState(\"\")\r\n    const [thumb4, setThumb4] = useState(\"\")\r\n    const [full4, setFull4] = useState(\"\")\r\n    const [thumb5, setThumb5] = useState(\"\")\r\n    const [full5, setFull5] = useState(\"\")\r\n    const [thumb6, setThumb6] = useState(\"\")\r\n    const [full6, setFull6] = useState(\"\")\r\n    const [thumb7, setThumb7] = useState(\"\")\r\n    const [full7, setFull7] = useState(\"\")\r\n    const [thumb8, setThumb8] = useState(\"\")\r\n    const [full8, setFull8] = useState(\"\")\r\n    const [thumb9, setThumb9] = useState(\"\")\r\n    const [full9, setFull9] = useState(\"\")\r\n    const [thumb10, setThumb10] = useState(\"\")\r\n    const [full10, setFull10] = useState(\"\")\r\n\r\n    const { loading, error, images } = useSelector(state => state.productUpdateImages)\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        product.images.forEach((image) => {\r\n            if (image.imageType === 0) {\r\n                if (image.imageNumber === 0) setThumb1(image.imageSrc)\r\n                if (image.imageNumber === 1) setThumb2(image.imageSrc)\r\n                if (image.imageNumber === 2) setThumb3(image.imageSrc)\r\n                if (image.imageNumber === 3) setThumb4(image.imageSrc)\r\n                if (image.imageNumber === 4) setThumb5(image.imageSrc)\r\n                if (image.imageNumber === 5) setThumb6(image.imageSrc)\r\n                if (image.imageNumber === 6) setThumb7(image.imageSrc)\r\n                if (image.imageNumber === 7) setThumb8(image.imageSrc)\r\n                if (image.imageNumber === 8) setThumb9(image.imageSrc)\r\n                if (image.imageNumber === 9) setThumb10(image.imageSrc)\r\n            }\r\n            if (image.imageType === 1) {\r\n                if (image.imageNumber === 0) setFull1(image.imageSrc)\r\n                if (image.imageNumber === 1) setFull2(image.imageSrc)\r\n                if (image.imageNumber === 2) setFull3(image.imageSrc)\r\n                if (image.imageNumber === 3) setFull4(image.imageSrc)\r\n                if (image.imageNumber === 4) setFull5(image.imageSrc)\r\n                if (image.imageNumber === 5) setFull6(image.imageSrc)\r\n                if (image.imageNumber === 6) setFull7(image.imageSrc)\r\n                if (image.imageNumber === 7) setFull8(image.imageSrc)\r\n                if (image.imageNumber === 8) setFull9(image.imageSrc)\r\n                if (image.imageNumber === 9) setFull10(image.imageSrc)\r\n            }\r\n        })\r\n        return () => {\r\n\r\n        }\r\n    }, [product])\r\n\r\n\r\n    function saveHandler() {\r\n        var arr = [];\r\n        [thumb1, thumb2, thumb3, thumb4, thumb5, thumb6, thumb7, thumb8, thumb9, thumb10].forEach((thumb, index) => {\r\n            if (thumb != \"\") arr.push({\r\n                \"imageProduct\": product.pID,\r\n                \"imageSrc\": thumb,\r\n                \"imageType\": 0,\r\n                \"imageNumber\": index + 1\r\n            })\r\n        });\r\n        [full1, full2, full3, full4, full5, full6, full7, full8, full9, full10].forEach((full, index) => {\r\n            if (full != \"\") arr.push({\r\n                \"imageProduct\": product.pID,\r\n                \"imageSrc\": full,\r\n                \"imageType\": 1,\r\n                \"imageNumber\": index + 1\r\n            })\r\n        })\r\n\r\n        console.log(arr)\r\n        dispatch(updateImages(arr, product.cloverID))\r\n    }\r\n\r\n    return (\r\n        <Form>\r\n            <Row className=\"mb-3 mr-4\">\r\n                <Col xs={1} className=\"text-right\">\r\n                    #\r\n                </Col>\r\n                <Col>\r\n                    Thumbnail\r\n                </Col>\r\n                <Col>\r\n                    Full Size\r\n                </Col>\r\n            </Row>\r\n            {product && product.images &&\r\n                [{ thumb: thumb1, full: full1, setThumb: setThumb1, setFull: setFull1 },\r\n                { thumb: thumb2, full: full2, setThumb: setThumb2, setFull: setFull2 },\r\n                { thumb: thumb3, full: full3, setThumb: setThumb3, setFull: setFull3 },\r\n                { thumb: thumb4, full: full4, setThumb: setThumb4, setFull: setFull4 },\r\n                { thumb: thumb5, full: full5, setThumb: setThumb5, setFull: setFull5 },\r\n                { thumb: thumb6, full: full6, setThumb: setThumb6, setFull: setFull6 },\r\n                { thumb: thumb7, full: full7, setThumb: setThumb7, setFull: setFull7 },\r\n                { thumb: thumb8, full: full8, setThumb: setThumb8, setFull: setFull8 },\r\n                { thumb: thumb9, full: full9, setThumb: setThumb9, setFull: setFull9 },\r\n                { thumb: thumb10, full: full10, setThumb: setThumb10, setFull: setFull10 },\r\n                ].map((row, index) =>\r\n                (<Row key={index} className=\"mr-4\">\r\n                    <Col xs={1} className=\"text-right my-3\" >\r\n                        {index + 1}\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group controlId={`thumb_${index + 1}`}>\r\n\r\n                            <Form.Control type='text' placeholder='prodimages/example.png' value={row.thumb}\r\n                                onChange={(e) => row.setThumb(e.target.value)}>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Group controlId={`full_${index + 1}`}>\r\n\r\n                            <Form.Control type='text' placeholder='prodimages/example.png' value={row.full}\r\n                                onChange={(e) => row.setFull(e.target.value)}>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>)\r\n                )\r\n            }\r\n            <Row className=\"justify-content-end mr-4 pr-3\">\r\n                {images && <h6 className=\"text-success mr-3 my-auto\">Update Successful!</h6>}\r\n                <Button disabled={loading}\r\n                    onClick={saveHandler}>\r\n                    Save\r\n                </Button>\r\n            </Row>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default ImageEditer\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\actions\\shippingActions.js",["657","658","659"],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\InventoryListScreen.js",["660"],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\HeartList.js",["661"],"import React from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { addWishListItem, removeWishListItem } from '../actions/userActions'\r\n\r\n\r\nexport const HeartList = ({ pID, size }) => {\r\n    const { userInfo } = useSelector(state => state.userLogin)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const addHandler = () => {\r\n        dispatch(addWishListItem(pID))\r\n    }\r\n    const removeHandler = () => {\r\n        // alert(pID)\r\n        dispatch(removeWishListItem(pID))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {userInfo\r\n                ? userInfo.wishList.includes(pID)\r\n                    ? <i className={`fas fa-heart fa-${size} text-danger`}\r\n                        onClick={removeHandler}\r\n                        style={{ cursor: \"pointer\" }}>\r\n                    </i>\r\n\r\n                    : <i className={`far fa-heart fa-${size} text-danger`}\r\n                        onClick={addHandler}\r\n                        style={{ cursor: \"pointer\" }}>\r\n                    </i>\r\n                : <Link to=\"/login\">\r\n                    <i className={`far fa-heart fa-${size} text-danger`}></i>\r\n                </Link>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\UnshippedScreen.js",["662","663","664","665","666","667","668","669","670"],"import React, { useEffect, useState } from 'react'\r\nimport { useQuery } from 'react-query'\r\nimport { Table, Button, Row, Col, Container, Form, InputGroup } from 'react-bootstrap'\r\nimport { useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst OrderListScreen = ({ history, match }) => {\r\n\r\n    // const [number, setNumber] = useState(0)\r\n\r\n    // const dispatch = useDispatch()\r\n\r\n    // const orderList = useSelector(state => state.orderList)\r\n    // const { loading, error, orders } = orderList\r\n\r\n    const { userInfo } = useSelector(state => state.userLogin)\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isStaff) {\r\n            remove()\r\n            refetch()\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [history, userInfo])\r\n\r\n    const { isLoading, isError, data, error, refetch, remove } = useQuery('unshipped', () =>\r\n        axios.get(`/api/orders/unshipped`)\r\n    )\r\n\r\n\r\n    return (\r\n        <Container className=\"my-5 \">\r\n            <h4 className=\"mb-5\">Unshipped Orders</h4>\r\n            {isLoading ? <Loader /> : isError ? <Message variant='danger'>{error}</Message>\r\n                : (<>\r\n                    {/* <p>{JSON.stringify(orders)}</p> */}\r\n                    {\r\n                        data && data.data.map(order => (\r\n                            <>\r\n                                <h5><Link to={`/order/${order.id}`}>{order.id}:</Link></h5>\r\n                                {order.lineItems &&\r\n                                    order.lineItems.map(line => (\r\n                                        <>{line.name != \"Website Shipping\" && <p>( {line.qty} ) {line.name}</p>}</>\r\n                                    ))\r\n                                }\r\n\r\n                            </>\r\n                        ))\r\n                    }\r\n\r\n                </>)}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\WishListScreen.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\WishListCard.js",["671","672","673","674"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Image, Button, Row, Col } from 'react-bootstrap'\r\nimport \"../styles/Cards.css\"\r\nimport { useQuery } from 'react-query'\r\nimport axios from 'axios'\r\nimport { HeartList } from './HeartList'\r\n\r\n\r\nconst WishListCard = ({ pID }) => {\r\n\r\n    const { isLoading, isError, data, error } = useQuery(pID, () =>\r\n        axios.get(`/api/products/${pID}`))\r\n    const product = data && data.data\r\n\r\n\r\n    return (\r\n        // <p>{JSON.stringify(product)}</p>\r\n        <>\r\n            {product &&\r\n                <Link to={`/product/${product.pID}`} className=\"linkBox\">\r\n                    <div className=\"mb-5 productDetailsCard\">\r\n                        <p className=\"bg-danger text-light text-center py-1 mb-2\">\r\n                            {\"Product ID \" + product.pID}\r\n                        </p>\r\n                        <Image className=\"px-2\" style={{ width: \"100%\", height: \"200px\", objectFit: \"contain\" }}\r\n                            src={product.images && product.images[0] ? \"https://www.coastairbrush.com/\" + product.images[0].imageSrc\r\n                                : \"/images/sample.jpg\"}\r\n                        />\r\n                        <p className=\"text-center mt-4\">\r\n                            {product.pName}\r\n                        </p>\r\n                        <Row className=\"px-4 mb-3\">\r\n                            <Col className=\"p-0\">\r\n                                <h5 className=\"text-center text-danger m-0\">\r\n                                    {product.pPrice\r\n                                        ? Number(product.pPrice / 100).toLocaleString(\"en-US\", { style: \"currency\", currency: \"USD\" })\r\n                                        : \"See Options\"\r\n                                    }\r\n                                </h5>\r\n                            </Col>\r\n                            <Col xs=\"auto\" className=\"px-2 my-auto\">\r\n                                {/* <i className='far fa-heart fa-1x text-danger'></i> */}\r\n                                <HeartList pID={product.pID} size=\"1x\" />\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Link>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WishListCard\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\EmployeeHistoryScreen.js",["675","676","677","678","679","680","681","682"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Table, Form, Button, Row, Col, Image, ListGroup, Container, Navbar, Nav, useAccordionToggle } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listMyOrders } from '../actions/orderActions'\r\nimport { UserNavBar } from '../components/UserNavBar'\r\nimport { useQuery } from 'react-query'\r\nimport axios from 'axios'\r\n\r\nconst EmployeeHistoryScreen = ({ history }) => {\r\n\r\n    const { userInfo } = useSelector(state => state.userLogin)\r\n    // const { loading, error, orders } = useSelector(state => state.orderListMy)\r\n\r\n    const { isLoading, isError, data, error } = useQuery('employeeHistory', () =>\r\n        axios.get(`/api/orders/employee`,\r\n            { headers: { Authorization: `Bearer ${userInfo.token}` } }))\r\n    const orders = data && data.data\r\n\r\n    // const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            // dispatch(listMyOrders())\r\n            if (!userInfo.isStaff) history.push('/')\r\n\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n        return () => { }\r\n    }, [history, userInfo])\r\n\r\n\r\n\r\n    return (\r\n        <Container className=\"my-5\">\r\n            {/* <p>{JSON.stringify(data && data.data)}</p> */}\r\n            {/* <p>{JSON.stringify(orders)}</p> */}\r\n            <UserNavBar></UserNavBar>\r\n            {isLoading ? <Loader />\r\n                : isError ? <Message variant='danger'>{error}</Message>\r\n                    : orders && orders.length ? (\r\n                        <ListGroup >\r\n                            {orders.map(order => (\r\n                                <ListGroup.Item key={order.id} className=\"border-0 mb-3\">\r\n                                    <Row className=\"justify-content-center\">\r\n                                        <Col lg={4} className=\"text-center\">\r\n                                            {order.orderImage &&\r\n                                                <Image src={\"https://www.coastairbrush.com/\" + order.orderImage}\r\n                                                    alt={order.lineItems.elements[0].name} fluid rounded\r\n                                                    style={{ height: \"200px\" }}\r\n                                                />}\r\n                                        </Col>\r\n                                        <Col lg={4} className=\"my-auto\">\r\n                                            <Row className=\"justify-content-center mt-3\">\r\n                                                <h4 className=\"text-danger\" style={{ letterSpacing: \"0px\" }}>\r\n                                                    {Number(order.total / 100).toLocaleString(\"en-US\", { style: \"currency\", currency: \"USD\" })}\r\n                                                </h4>\r\n                                            </Row>\r\n                                            <Row className=\"justify-content-center\">\r\n                                                <p>\r\n                                                    {new Date(order.createdTime).toLocaleString()}\r\n                                                </p>\r\n                                            </Row>\r\n                                            <Row className=\"justify-content-center\">\r\n                                                <LinkContainer to={`/order/${order.id}`}>\r\n                                                    <Button className='btn-sm' variant='dark'>View Details</Button>\r\n                                                </LinkContainer>\r\n                                            </Row>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))\r\n                            }\r\n                        </ListGroup>\r\n                    ) : (\r\n                        <div className=\"my-5\">\r\n                            <Message variant=\"success\" >No Orders Yet</Message>\r\n                        </div>\r\n                    )\r\n\r\n\r\n            }\r\n        </Container >\r\n    )\r\n}\r\n\r\nexport default EmployeeHistoryScreen\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\contexts\\userContext.js",["683"],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\contexts\\UserContext.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\MainNav.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\EditPassword.js",["684"],"import React, { useState, useContext } from 'react'\r\nimport { UserContext } from '../contexts/UserContext'\r\nimport { useMutation } from 'react-query'\r\nimport axios from 'axios'\r\n\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\n\r\nconst EditPassword = () => {\r\n\r\n    const user = useContext(UserContext)\r\n\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n\r\n    const [edit, setEdit] = useState(false)\r\n    const [message, setMessage] = useState('')\r\n    const [success, setSuccess] = useState('')\r\n\r\n    // Mutation\r\n    const { mutate, isLoading, reset } = useMutation(data => {\r\n        return axios.put('/api/users/profile', data, {\r\n            headers: { Authorization: `Bearer ${user.token}` }\r\n        })\r\n    }, {\r\n        onSuccess: (data) => {\r\n            setSuccess(data.data.message)\r\n            setMessage(\"\")\r\n            setEdit(false)\r\n            reset()\r\n\r\n        },\r\n        onError: (error) => {\r\n            setMessage(error.response && error.response.data.message\r\n                ? error.response.data.message : error.message)\r\n        }\r\n    })\r\n\r\n    const editHandler = () => {\r\n        setPassword(\"\")\r\n        setMessage(\"\")\r\n        setSuccess(\"\")\r\n        setConfirmPassword(\"\")\r\n        setEdit(true)\r\n    }\r\n\r\n    const passwordHandler = (e) => {\r\n        e.preventDefault()\r\n        if (password == confirmPassword) {\r\n            mutate({ password })\r\n        } else { // Passwords not match\r\n            setMessage(\"Passwords Do Not Match\")\r\n        }\r\n        setPassword(\"\")\r\n        setConfirmPassword(\"\")\r\n    }\r\n\r\n    if (isLoading) return <Loader />\r\n    else return (\r\n        <>\r\n            {success && <Message variant='success'>{success}</Message>}\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {edit ?\r\n                <Form className=\"my-3\" onSubmit={passwordHandler}>\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Control type='password' placeholder='New Password' required value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='confirmPassword'>\r\n                        <Form.Control type='password' placeholder='Confirm Password' value={confirmPassword} required\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Button id=\"passwordBtn\" variant='secondary' className=\"text-danger p-0\" type=\"submit\">\r\n                        Save\r\n                    </Button>\r\n                    <Button id=\"passwordBtn\" variant='secondary' className=\"p-0 ml-5\" type=\"button\"\r\n                        onClick={() => setEdit(false)}>\r\n                        Cancel\r\n                    </Button>\r\n                </Form>\r\n                :\r\n                <>\r\n                    <p className=\"mt-3 mb-3\">*********</p>\r\n                    <Button id=\"passwordBtn\" variant='secondary' className=\"text-danger p-0\"\r\n                        onClick={editHandler}>\r\n                        Edit\r\n                    </Button>\r\n                </>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditPassword\r\n","C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\EditAddress.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\ProtectedRoute.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\components\\StaffRoute.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\CategoryListScreen.js",["685"],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\CategoryEditScreen.js",["686","687","688","689","690"],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\CategoryNewScreen.js",["691","692"],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\ProductNewScreen.js",["693","694"],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\InventoryEditScreen.js",["695","696"],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\InventoryNewScreen.js",["697","698","699"],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\BrandEditScreen.js",["700","701","702"],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\DiscountListScreen.js",["703"],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\DiscountNewScreen.js",["704","705","706","707"],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\DiscountEditScreen.js",["708","709"],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\BrandListScreen.js",[],"C:\\Users\\Brandon's PC\\Documents\\ALL CODE\\Client Work\\Coast Airbrush\\frontend\\src\\screens\\BrandNewScreen.js",["710","711"],{"ruleId":"712","replacedBy":"713"},{"ruleId":"714","replacedBy":"715"},{"ruleId":"716","severity":1,"message":"717","line":19,"column":8,"nodeType":"718","messageId":"719","endLine":19,"endColumn":24},{"ruleId":"716","severity":1,"message":"720","line":15,"column":13,"nodeType":"718","messageId":"719","endLine":15,"endColumn":16},{"ruleId":"712","replacedBy":"721"},{"ruleId":"714","replacedBy":"722"},{"ruleId":"716","severity":1,"message":"723","line":2,"column":10,"nodeType":"718","messageId":"719","endLine":2,"endColumn":14},{"ruleId":"716","severity":1,"message":"724","line":3,"column":20,"nodeType":"718","messageId":"719","endLine":3,"endColumn":25},{"ruleId":"716","severity":1,"message":"725","line":3,"column":27,"nodeType":"718","messageId":"719","endLine":3,"endColumn":36},{"ruleId":"716","severity":1,"message":"726","line":3,"column":38,"nodeType":"718","messageId":"719","endLine":3,"endColumn":42},{"ruleId":"716","severity":1,"message":"727","line":3,"column":52,"nodeType":"718","messageId":"719","endLine":3,"endColumn":65},{"ruleId":"716","severity":1,"message":"728","line":3,"column":73,"nodeType":"718","messageId":"719","endLine":3,"endColumn":83},{"ruleId":"716","severity":1,"message":"729","line":4,"column":8,"nodeType":"718","messageId":"719","endLine":4,"endColumn":14},{"ruleId":"716","severity":1,"message":"730","line":7,"column":8,"nodeType":"718","messageId":"719","endLine":7,"endColumn":12},{"ruleId":"716","severity":1,"message":"731","line":13,"column":51,"nodeType":"718","messageId":"719","endLine":13,"endColumn":70},{"ruleId":"716","severity":1,"message":"732","line":14,"column":10,"nodeType":"718","messageId":"719","endLine":14,"endColumn":28},{"ruleId":"716","severity":1,"message":"733","line":15,"column":10,"nodeType":"718","messageId":"719","endLine":15,"endColumn":37},{"ruleId":"716","severity":1,"message":"734","line":23,"column":13,"nodeType":"718","messageId":"719","endLine":23,"endColumn":21},{"ruleId":"716","severity":1,"message":"735","line":24,"column":13,"nodeType":"718","messageId":"719","endLine":24,"endColumn":21},{"ruleId":"736","severity":1,"message":"737","line":46,"column":55,"nodeType":"738","messageId":"739","endLine":46,"endColumn":57},{"ruleId":"736","severity":1,"message":"740","line":52,"column":74,"nodeType":"738","messageId":"739","endLine":52,"endColumn":76},{"ruleId":"741","severity":1,"message":"742","line":118,"column":75,"nodeType":"743","messageId":"744","endLine":118,"endColumn":77},{"ruleId":"736","severity":1,"message":"737","line":118,"column":85,"nodeType":"738","messageId":"739","endLine":118,"endColumn":87},{"ruleId":"741","severity":1,"message":"742","line":118,"column":90,"nodeType":"743","messageId":"744","endLine":118,"endColumn":92},{"ruleId":"716","severity":1,"message":"745","line":7,"column":10,"nodeType":"718","messageId":"719","endLine":7,"endColumn":28},{"ruleId":"716","severity":1,"message":"746","line":7,"column":110,"nodeType":"718","messageId":"719","endLine":7,"endColumn":125},{"ruleId":"716","severity":1,"message":"747","line":20,"column":5,"nodeType":"718","messageId":"719","endLine":20,"endColumn":32},{"ruleId":"716","severity":1,"message":"748","line":23,"column":5,"nodeType":"718","messageId":"719","endLine":23,"endColumn":34},{"ruleId":"716","severity":1,"message":"749","line":24,"column":5,"nodeType":"718","messageId":"719","endLine":24,"endColumn":34},{"ruleId":"716","severity":1,"message":"750","line":25,"column":5,"nodeType":"718","messageId":"719","endLine":25,"endColumn":31},{"ruleId":"716","severity":1,"message":"751","line":3,"column":10,"nodeType":"718","messageId":"719","endLine":3,"endColumn":19},{"ruleId":"716","severity":1,"message":"752","line":3,"column":21,"nodeType":"718","messageId":"719","endLine":3,"endColumn":33},{"ruleId":"716","severity":1,"message":"753","line":3,"column":61,"nodeType":"718","messageId":"719","endLine":3,"endColumn":70},{"ruleId":"716","severity":1,"message":"754","line":7,"column":10,"nodeType":"718","messageId":"719","endLine":7,"endColumn":27},{"ruleId":"716","severity":1,"message":"755","line":11,"column":11,"nodeType":"718","messageId":"719","endLine":11,"endColumn":14},{"ruleId":"736","severity":1,"message":"737","line":20,"column":24,"nodeType":"738","messageId":"739","endLine":20,"endColumn":26},{"ruleId":"756","severity":1,"message":"757","line":34,"column":8,"nodeType":"758","endLine":34,"endColumn":20,"suggestions":"759"},{"ruleId":"716","severity":1,"message":"760","line":4,"column":5,"nodeType":"718","messageId":"719","endLine":4,"endColumn":20},{"ruleId":"716","severity":1,"message":"761","line":8,"column":5,"nodeType":"718","messageId":"719","endLine":8,"endColumn":21},{"ruleId":"716","severity":1,"message":"762","line":6,"column":5,"nodeType":"718","messageId":"719","endLine":6,"endColumn":29},{"ruleId":"716","severity":1,"message":"760","line":9,"column":5,"nodeType":"718","messageId":"719","endLine":9,"endColumn":20},{"ruleId":"716","severity":1,"message":"761","line":10,"column":5,"nodeType":"718","messageId":"719","endLine":10,"endColumn":21},{"ruleId":"716","severity":1,"message":"763","line":11,"column":5,"nodeType":"718","messageId":"719","endLine":11,"endColumn":30},{"ruleId":"716","severity":1,"message":"764","line":13,"column":5,"nodeType":"718","messageId":"719","endLine":13,"endColumn":19},{"ruleId":"716","severity":1,"message":"765","line":19,"column":5,"nodeType":"718","messageId":"719","endLine":19,"endColumn":17},{"ruleId":"736","severity":1,"message":"737","line":34,"column":35,"nodeType":"738","messageId":"739","endLine":34,"endColumn":37},{"ruleId":"716","severity":1,"message":"766","line":6,"column":8,"nodeType":"718","messageId":"719","endLine":6,"endColumn":21},{"ruleId":"756","severity":1,"message":"767","line":23,"column":8,"nodeType":"758","endLine":23,"endColumn":14,"suggestions":"768"},{"ruleId":"756","severity":1,"message":"769","line":28,"column":8,"nodeType":"758","endLine":28,"endColumn":14,"suggestions":"770"},{"ruleId":"736","severity":1,"message":"737","line":50,"column":22,"nodeType":"738","messageId":"739","endLine":50,"endColumn":24},{"ruleId":"716","severity":1,"message":"771","line":8,"column":8,"nodeType":"718","messageId":"719","endLine":8,"endColumn":22},{"ruleId":"716","severity":1,"message":"766","line":7,"column":8,"nodeType":"718","messageId":"719","endLine":7,"endColumn":21},{"ruleId":"716","severity":1,"message":"772","line":8,"column":8,"nodeType":"718","messageId":"719","endLine":8,"endColumn":21},{"ruleId":"716","severity":1,"message":"773","line":9,"column":28,"nodeType":"718","messageId":"719","endLine":9,"endColumn":48},{"ruleId":"736","severity":1,"message":"737","line":20,"column":26,"nodeType":"738","messageId":"739","endLine":20,"endColumn":28},{"ruleId":"716","severity":1,"message":"766","line":7,"column":8,"nodeType":"718","messageId":"719","endLine":7,"endColumn":21},{"ruleId":"716","severity":1,"message":"772","line":8,"column":8,"nodeType":"718","messageId":"719","endLine":8,"endColumn":21},{"ruleId":"716","severity":1,"message":"774","line":9,"column":10,"nodeType":"718","messageId":"719","endLine":9,"endColumn":25},{"ruleId":"716","severity":1,"message":"775","line":9,"column":38,"nodeType":"718","messageId":"719","endLine":9,"endColumn":55},{"ruleId":"716","severity":1,"message":"776","line":9,"column":57,"nodeType":"718","messageId":"719","endLine":9,"endColumn":69},{"ruleId":"716","severity":1,"message":"777","line":10,"column":10,"nodeType":"718","messageId":"719","endLine":10,"endColumn":16},{"ruleId":"716","severity":1,"message":"778","line":19,"column":43,"nodeType":"718","messageId":"719","endLine":19,"endColumn":52},{"ruleId":"736","severity":1,"message":"737","line":23,"column":58,"nodeType":"738","messageId":"739","endLine":23,"endColumn":60},{"ruleId":"736","severity":1,"message":"737","line":26,"column":62,"nodeType":"738","messageId":"739","endLine":26,"endColumn":64},{"ruleId":"756","severity":1,"message":"779","line":67,"column":8,"nodeType":"758","endLine":67,"endColumn":10,"suggestions":"780"},{"ruleId":"756","severity":1,"message":"781","line":83,"column":8,"nodeType":"758","endLine":83,"endColumn":15,"suggestions":"782"},{"ruleId":"716","severity":1,"message":"783","line":2,"column":5,"nodeType":"718","messageId":"719","endLine":2,"endColumn":25},{"ruleId":"716","severity":1,"message":"784","line":3,"column":5,"nodeType":"718","messageId":"719","endLine":3,"endColumn":25},{"ruleId":"716","severity":1,"message":"785","line":4,"column":5,"nodeType":"718","messageId":"719","endLine":4,"endColumn":22},{"ruleId":"716","severity":1,"message":"786","line":8,"column":5,"nodeType":"718","messageId":"719","endLine":8,"endColumn":22},{"ruleId":"716","severity":1,"message":"787","line":9,"column":5,"nodeType":"718","messageId":"719","endLine":9,"endColumn":22},{"ruleId":"716","severity":1,"message":"788","line":10,"column":5,"nodeType":"718","messageId":"719","endLine":10,"endColumn":19},{"ruleId":"716","severity":1,"message":"789","line":11,"column":5,"nodeType":"718","messageId":"719","endLine":11,"endColumn":20},{"ruleId":"716","severity":1,"message":"783","line":3,"column":5,"nodeType":"718","messageId":"719","endLine":3,"endColumn":25},{"ruleId":"716","severity":1,"message":"784","line":4,"column":5,"nodeType":"718","messageId":"719","endLine":4,"endColumn":25},{"ruleId":"716","severity":1,"message":"785","line":5,"column":5,"nodeType":"718","messageId":"719","endLine":5,"endColumn":22},{"ruleId":"716","severity":1,"message":"786","line":9,"column":5,"nodeType":"718","messageId":"719","endLine":9,"endColumn":22},{"ruleId":"716","severity":1,"message":"787","line":10,"column":5,"nodeType":"718","messageId":"719","endLine":10,"endColumn":22},{"ruleId":"716","severity":1,"message":"788","line":11,"column":5,"nodeType":"718","messageId":"719","endLine":11,"endColumn":19},{"ruleId":"716","severity":1,"message":"790","line":18,"column":5,"nodeType":"718","messageId":"719","endLine":18,"endColumn":26},{"ruleId":"716","severity":1,"message":"791","line":19,"column":5,"nodeType":"718","messageId":"719","endLine":19,"endColumn":26},{"ruleId":"716","severity":1,"message":"792","line":20,"column":5,"nodeType":"718","messageId":"719","endLine":20,"endColumn":23},{"ruleId":"716","severity":1,"message":"793","line":4,"column":10,"nodeType":"718","messageId":"719","endLine":4,"endColumn":22},{"ruleId":"716","severity":1,"message":"726","line":6,"column":38,"nodeType":"718","messageId":"719","endLine":6,"endColumn":42},{"ruleId":"716","severity":1,"message":"794","line":6,"column":63,"nodeType":"718","messageId":"719","endLine":6,"endColumn":66},{"ruleId":"716","severity":1,"message":"795","line":10,"column":27,"nodeType":"718","messageId":"719","endLine":10,"endColumn":39},{"ruleId":"716","severity":1,"message":"789","line":12,"column":10,"nodeType":"718","messageId":"719","endLine":12,"endColumn":25},{"ruleId":"716","severity":1,"message":"796","line":12,"column":27,"nodeType":"718","messageId":"719","endLine":12,"endColumn":46},{"ruleId":"756","severity":1,"message":"797","line":30,"column":8,"nodeType":"758","endLine":30,"endColumn":10,"suggestions":"798"},{"ruleId":"716","severity":1,"message":"799","line":33,"column":13,"nodeType":"718","messageId":"719","endLine":33,"endColumn":22},{"ruleId":"716","severity":1,"message":"800","line":33,"column":24,"nodeType":"718","messageId":"719","endLine":33,"endColumn":31},{"ruleId":"716","severity":1,"message":"801","line":33,"column":57,"nodeType":"718","messageId":"719","endLine":33,"endColumn":67},{"ruleId":"756","severity":1,"message":"802","line":62,"column":8,"nodeType":"758","endLine":62,"endColumn":59,"suggestions":"803"},{"ruleId":"804","severity":1,"message":"805","line":151,"column":53,"nodeType":"806","endLine":151,"endColumn":56},{"ruleId":"716","severity":1,"message":"807","line":1,"column":17,"nodeType":"718","messageId":"719","endLine":1,"endColumn":26},{"ruleId":"716","severity":1,"message":"808","line":7,"column":10,"nodeType":"718","messageId":"719","endLine":7,"endColumn":19},{"ruleId":"716","severity":1,"message":"735","line":19,"column":13,"nodeType":"718","messageId":"719","endLine":19,"endColumn":21},{"ruleId":"716","severity":1,"message":"809","line":22,"column":22,"nodeType":"718","messageId":"719","endLine":22,"endColumn":35},{"ruleId":"756","severity":1,"message":"810","line":48,"column":8,"nodeType":"758","endLine":48,"endColumn":56,"suggestions":"811"},{"ruleId":"716","severity":1,"message":"812","line":3,"column":40,"nodeType":"718","messageId":"719","endLine":3,"endColumn":45},{"ruleId":"716","severity":1,"message":"813","line":3,"column":10,"nodeType":"718","messageId":"719","endLine":3,"endColumn":23},{"ruleId":"736","severity":1,"message":"737","line":8,"column":51,"nodeType":"738","messageId":"739","endLine":8,"endColumn":53},{"ruleId":"716","severity":1,"message":"814","line":3,"column":10,"nodeType":"718","messageId":"719","endLine":3,"endColumn":16},{"ruleId":"716","severity":1,"message":"815","line":3,"column":23,"nodeType":"718","messageId":"719","endLine":3,"endColumn":32},{"ruleId":"716","severity":1,"message":"816","line":3,"column":34,"nodeType":"718","messageId":"719","endLine":3,"endColumn":45},{"ruleId":"716","severity":1,"message":"813","line":2,"column":10,"nodeType":"718","messageId":"719","endLine":2,"endColumn":23},{"ruleId":"716","severity":1,"message":"815","line":3,"column":23,"nodeType":"718","messageId":"719","endLine":3,"endColumn":32},{"ruleId":"716","severity":1,"message":"817","line":3,"column":34,"nodeType":"718","messageId":"719","endLine":3,"endColumn":37},{"ruleId":"716","severity":1,"message":"818","line":3,"column":39,"nodeType":"718","messageId":"719","endLine":3,"endColumn":42},{"ruleId":"712","replacedBy":"819"},{"ruleId":"714","replacedBy":"820"},{"ruleId":"716","severity":1,"message":"821","line":1,"column":17,"nodeType":"718","messageId":"719","endLine":1,"endColumn":25},{"ruleId":"716","severity":1,"message":"822","line":3,"column":10,"nodeType":"718","messageId":"719","endLine":3,"endColumn":15},{"ruleId":"716","severity":1,"message":"823","line":3,"column":17,"nodeType":"718","messageId":"719","endLine":3,"endColumn":21},{"ruleId":"716","severity":1,"message":"814","line":3,"column":70,"nodeType":"718","messageId":"719","endLine":3,"endColumn":76},{"ruleId":"716","severity":1,"message":"794","line":3,"column":78,"nodeType":"718","messageId":"719","endLine":3,"endColumn":81},{"ruleId":"756","severity":1,"message":"824","line":23,"column":8,"nodeType":"758","endLine":23,"endColumn":27,"suggestions":"825"},{"ruleId":"716","severity":1,"message":"821","line":1,"column":17,"nodeType":"718","messageId":"719","endLine":1,"endColumn":25},{"ruleId":"716","severity":1,"message":"813","line":5,"column":10,"nodeType":"718","messageId":"719","endLine":5,"endColumn":23},{"ruleId":"716","severity":1,"message":"723","line":6,"column":10,"nodeType":"718","messageId":"719","endLine":6,"endColumn":14},{"ruleId":"716","severity":1,"message":"724","line":7,"column":20,"nodeType":"718","messageId":"719","endLine":7,"endColumn":25},{"ruleId":"716","severity":1,"message":"728","line":7,"column":27,"nodeType":"718","messageId":"719","endLine":7,"endColumn":37},{"ruleId":"716","severity":1,"message":"826","line":17,"column":11,"nodeType":"718","messageId":"719","endLine":17,"endColumn":21},{"ruleId":"716","severity":1,"message":"827","line":19,"column":22,"nodeType":"718","messageId":"719","endLine":19,"endColumn":37},{"ruleId":"716","severity":1,"message":"828","line":19,"column":46,"nodeType":"718","messageId":"719","endLine":19,"endColumn":59},{"ruleId":"716","severity":1,"message":"728","line":3,"column":27,"nodeType":"718","messageId":"719","endLine":3,"endColumn":37},{"ruleId":"716","severity":1,"message":"729","line":4,"column":8,"nodeType":"718","messageId":"719","endLine":4,"endColumn":14},{"ruleId":"716","severity":1,"message":"821","line":1,"column":17,"nodeType":"718","messageId":"719","endLine":1,"endColumn":25},{"ruleId":"716","severity":1,"message":"829","line":6,"column":8,"nodeType":"718","messageId":"719","endLine":6,"endColumn":14},{"ruleId":"716","severity":1,"message":"830","line":11,"column":13,"nodeType":"718","messageId":"719","endLine":11,"endColumn":20},{"ruleId":"716","severity":1,"message":"818","line":3,"column":10,"nodeType":"718","messageId":"719","endLine":3,"endColumn":13},{"ruleId":"716","severity":1,"message":"817","line":3,"column":15,"nodeType":"718","messageId":"719","endLine":3,"endColumn":18},{"ruleId":"716","severity":1,"message":"728","line":3,"column":27,"nodeType":"718","messageId":"719","endLine":3,"endColumn":37},{"ruleId":"716","severity":1,"message":"729","line":4,"column":8,"nodeType":"718","messageId":"719","endLine":4,"endColumn":14},{"ruleId":"716","severity":1,"message":"821","line":1,"column":17,"nodeType":"718","messageId":"719","endLine":1,"endColumn":25},{"ruleId":"716","severity":1,"message":"807","line":1,"column":27,"nodeType":"718","messageId":"719","endLine":1,"endColumn":36},{"ruleId":"716","severity":1,"message":"831","line":2,"column":10,"nodeType":"718","messageId":"719","endLine":2,"endColumn":21},{"ruleId":"716","severity":1,"message":"832","line":2,"column":23,"nodeType":"718","messageId":"719","endLine":2,"endColumn":34},{"ruleId":"716","severity":1,"message":"732","line":5,"column":10,"nodeType":"718","messageId":"719","endLine":5,"endColumn":28},{"ruleId":"716","severity":1,"message":"821","line":1,"column":17,"nodeType":"718","messageId":"719","endLine":1,"endColumn":25},{"ruleId":"716","severity":1,"message":"807","line":1,"column":27,"nodeType":"718","messageId":"719","endLine":1,"endColumn":36},{"ruleId":"716","severity":1,"message":"831","line":2,"column":10,"nodeType":"718","messageId":"719","endLine":2,"endColumn":21},{"ruleId":"716","severity":1,"message":"832","line":2,"column":23,"nodeType":"718","messageId":"719","endLine":2,"endColumn":34},{"ruleId":"716","severity":1,"message":"732","line":5,"column":10,"nodeType":"718","messageId":"719","endLine":5,"endColumn":28},{"ruleId":"716","severity":1,"message":"821","line":1,"column":17,"nodeType":"718","messageId":"719","endLine":1,"endColumn":25},{"ruleId":"716","severity":1,"message":"821","line":1,"column":17,"nodeType":"718","messageId":"719","endLine":1,"endColumn":25},{"ruleId":"716","severity":1,"message":"829","line":7,"column":8,"nodeType":"718","messageId":"719","endLine":7,"endColumn":14},{"ruleId":"716","severity":1,"message":"833","line":8,"column":8,"nodeType":"718","messageId":"719","endLine":8,"endColumn":25},{"ruleId":"716","severity":1,"message":"830","line":12,"column":13,"nodeType":"718","messageId":"719","endLine":12,"endColumn":20},{"ruleId":"716","severity":1,"message":"766","line":5,"column":8,"nodeType":"718","messageId":"719","endLine":5,"endColumn":21},{"ruleId":"716","severity":1,"message":"772","line":6,"column":8,"nodeType":"718","messageId":"719","endLine":6,"endColumn":21},{"ruleId":"716","severity":1,"message":"834","line":7,"column":10,"nodeType":"718","messageId":"719","endLine":7,"endColumn":26},{"ruleId":"716","severity":1,"message":"835","line":12,"column":11,"nodeType":"718","messageId":"719","endLine":12,"endColumn":19},{"ruleId":"756","severity":1,"message":"836","line":32,"column":8,"nodeType":"758","endLine":32,"endColumn":18,"suggestions":"837"},{"ruleId":"736","severity":1,"message":"737","line":85,"column":79,"nodeType":"738","messageId":"739","endLine":85,"endColumn":81},{"ruleId":"716","severity":1,"message":"821","line":1,"column":17,"nodeType":"718","messageId":"719","endLine":1,"endColumn":25},{"ruleId":"716","severity":1,"message":"807","line":1,"column":27,"nodeType":"718","messageId":"719","endLine":1,"endColumn":36},{"ruleId":"716","severity":1,"message":"838","line":2,"column":16,"nodeType":"718","messageId":"719","endLine":2,"endColumn":22},{"ruleId":"716","severity":1,"message":"723","line":3,"column":10,"nodeType":"718","messageId":"719","endLine":3,"endColumn":14},{"ruleId":"716","severity":1,"message":"831","line":4,"column":10,"nodeType":"718","messageId":"719","endLine":4,"endColumn":21},{"ruleId":"716","severity":1,"message":"839","line":9,"column":55,"nodeType":"718","messageId":"719","endLine":9,"endColumn":67},{"ruleId":"840","severity":1,"message":"841","line":21,"column":13,"nodeType":"718","messageId":"842","endLine":21,"endColumn":21},{"ruleId":"840","severity":1,"message":"843","line":22,"column":13,"nodeType":"718","messageId":"842","endLine":22,"endColumn":26},{"ruleId":"840","severity":1,"message":"844","line":23,"column":13,"nodeType":"718","messageId":"842","endLine":23,"endColumn":23},{"ruleId":"840","severity":1,"message":"841","line":26,"column":13,"nodeType":"718","messageId":"842","endLine":26,"endColumn":21},{"ruleId":"840","severity":1,"message":"843","line":27,"column":13,"nodeType":"718","messageId":"842","endLine":27,"endColumn":26},{"ruleId":"840","severity":1,"message":"844","line":28,"column":13,"nodeType":"718","messageId":"842","endLine":28,"endColumn":23},{"ruleId":"736","severity":1,"message":"740","line":75,"column":79,"nodeType":"738","messageId":"739","endLine":75,"endColumn":81},{"ruleId":"736","severity":1,"message":"740","line":88,"column":83,"nodeType":"738","messageId":"739","endLine":88,"endColumn":85},{"ruleId":"736","severity":1,"message":"740","line":95,"column":54,"nodeType":"738","messageId":"739","endLine":95,"endColumn":56},{"ruleId":"736","severity":1,"message":"740","line":101,"column":71,"nodeType":"738","messageId":"739","endLine":101,"endColumn":73},{"ruleId":"736","severity":1,"message":"740","line":117,"column":65,"nodeType":"738","messageId":"739","endLine":117,"endColumn":67},{"ruleId":"736","severity":1,"message":"740","line":117,"column":106,"nodeType":"738","messageId":"739","endLine":117,"endColumn":108},{"ruleId":"716","severity":1,"message":"813","line":2,"column":10,"nodeType":"718","messageId":"719","endLine":2,"endColumn":23},{"ruleId":"716","severity":1,"message":"822","line":3,"column":10,"nodeType":"718","messageId":"719","endLine":3,"endColumn":15},{"ruleId":"716","severity":1,"message":"845","line":8,"column":24,"nodeType":"718","messageId":"719","endLine":8,"endColumn":37},{"ruleId":"716","severity":1,"message":"846","line":8,"column":39,"nodeType":"718","messageId":"719","endLine":8,"endColumn":52},{"ruleId":"716","severity":1,"message":"847","line":9,"column":10,"nodeType":"718","messageId":"719","endLine":9,"endColumn":30},{"ruleId":"756","severity":1,"message":"848","line":26,"column":8,"nodeType":"758","endLine":26,"endColumn":17,"suggestions":"849"},{"ruleId":"716","severity":1,"message":"832","line":4,"column":10,"nodeType":"718","messageId":"719","endLine":4,"endColumn":21},{"ruleId":"716","severity":1,"message":"850","line":10,"column":11,"nodeType":"718","messageId":"719","endLine":10,"endColumn":21},{"ruleId":"716","severity":1,"message":"851","line":20,"column":23,"nodeType":"718","messageId":"719","endLine":20,"endColumn":35},{"ruleId":"716","severity":1,"message":"852","line":21,"column":21,"nodeType":"718","messageId":"719","endLine":21,"endColumn":31},{"ruleId":"716","severity":1,"message":"853","line":25,"column":22,"nodeType":"718","messageId":"719","endLine":25,"endColumn":36},{"ruleId":"716","severity":1,"message":"854","line":25,"column":45,"nodeType":"718","messageId":"719","endLine":25,"endColumn":57},{"ruleId":"716","severity":1,"message":"855","line":25,"column":59,"nodeType":"718","messageId":"719","endLine":25,"endColumn":70},{"ruleId":"756","severity":1,"message":"856","line":34,"column":8,"nodeType":"758","endLine":34,"endColumn":10,"suggestions":"857"},{"ruleId":"716","severity":1,"message":"831","line":3,"column":10,"nodeType":"718","messageId":"719","endLine":3,"endColumn":21},{"ruleId":"716","severity":1,"message":"832","line":3,"column":23,"nodeType":"718","messageId":"719","endLine":3,"endColumn":34},{"ruleId":"858","severity":1,"message":"859","line":11,"column":24,"nodeType":"860","messageId":"861","endLine":11,"endColumn":26},{"ruleId":"736","severity":1,"message":"737","line":19,"column":35,"nodeType":"738","messageId":"739","endLine":19,"endColumn":37},{"ruleId":"716","severity":1,"message":"807","line":2,"column":27,"nodeType":"718","messageId":"719","endLine":2,"endColumn":36},{"ruleId":"716","severity":1,"message":"723","line":3,"column":10,"nodeType":"718","messageId":"719","endLine":3,"endColumn":14},{"ruleId":"716","severity":1,"message":"838","line":4,"column":16,"nodeType":"718","messageId":"719","endLine":4,"endColumn":22},{"ruleId":"716","severity":1,"message":"831","line":5,"column":10,"nodeType":"718","messageId":"719","endLine":5,"endColumn":21},{"ruleId":"716","severity":1,"message":"862","line":6,"column":8,"nodeType":"718","messageId":"719","endLine":6,"endColumn":15},{"ruleId":"716","severity":1,"message":"766","line":8,"column":8,"nodeType":"718","messageId":"719","endLine":8,"endColumn":21},{"ruleId":"716","severity":1,"message":"863","line":9,"column":10,"nodeType":"718","messageId":"719","endLine":9,"endColumn":28},{"ruleId":"716","severity":1,"message":"864","line":9,"column":30,"nodeType":"718","messageId":"719","endLine":9,"endColumn":43},{"ruleId":"716","severity":1,"message":"865","line":10,"column":10,"nodeType":"718","messageId":"719","endLine":10,"endColumn":30},{"ruleId":"716","severity":1,"message":"866","line":11,"column":8,"nodeType":"718","messageId":"719","endLine":11,"endColumn":18},{"ruleId":"716","severity":1,"message":"867","line":1,"column":8,"nodeType":"718","messageId":"719","endLine":1,"endColumn":13},{"ruleId":"716","severity":1,"message":"723","line":3,"column":10,"nodeType":"718","messageId":"719","endLine":3,"endColumn":14},{"ruleId":"716","severity":1,"message":"812","line":4,"column":34,"nodeType":"718","messageId":"719","endLine":4,"endColumn":39},{"ruleId":"716","severity":1,"message":"862","line":6,"column":8,"nodeType":"718","messageId":"719","endLine":6,"endColumn":15},{"ruleId":"716","severity":1,"message":"829","line":7,"column":8,"nodeType":"718","messageId":"719","endLine":7,"endColumn":14},{"ruleId":"716","severity":1,"message":"766","line":8,"column":8,"nodeType":"718","messageId":"719","endLine":8,"endColumn":21},{"ruleId":"716","severity":1,"message":"863","line":9,"column":10,"nodeType":"718","messageId":"719","endLine":9,"endColumn":28},{"ruleId":"716","severity":1,"message":"865","line":10,"column":10,"nodeType":"718","messageId":"719","endLine":10,"endColumn":30},{"ruleId":"716","severity":1,"message":"868","line":11,"column":10,"nodeType":"718","messageId":"719","endLine":11,"endColumn":13},{"ruleId":"716","severity":1,"message":"869","line":37,"column":22,"nodeType":"718","messageId":"719","endLine":37,"endColumn":27},{"ruleId":"736","severity":1,"message":"740","line":75,"column":23,"nodeType":"738","messageId":"739","endLine":75,"endColumn":25},{"ruleId":"736","severity":1,"message":"740","line":83,"column":22,"nodeType":"738","messageId":"739","endLine":83,"endColumn":24},{"ruleId":"716","severity":1,"message":"783","line":3,"column":5,"nodeType":"718","messageId":"719","endLine":3,"endColumn":25},{"ruleId":"716","severity":1,"message":"784","line":4,"column":5,"nodeType":"718","messageId":"719","endLine":4,"endColumn":25},{"ruleId":"716","severity":1,"message":"785","line":5,"column":5,"nodeType":"718","messageId":"719","endLine":5,"endColumn":22},{"ruleId":"716","severity":1,"message":"723","line":7,"column":10,"nodeType":"718","messageId":"719","endLine":7,"endColumn":14},{"ruleId":"716","severity":1,"message":"838","line":2,"column":10,"nodeType":"718","messageId":"719","endLine":2,"endColumn":16},{"ruleId":"716","severity":1,"message":"821","line":1,"column":28,"nodeType":"718","messageId":"719","endLine":1,"endColumn":36},{"ruleId":"716","severity":1,"message":"822","line":3,"column":10,"nodeType":"718","messageId":"719","endLine":3,"endColumn":15},{"ruleId":"716","severity":1,"message":"838","line":3,"column":17,"nodeType":"718","messageId":"719","endLine":3,"endColumn":23},{"ruleId":"716","severity":1,"message":"818","line":3,"column":25,"nodeType":"718","messageId":"719","endLine":3,"endColumn":28},{"ruleId":"716","severity":1,"message":"817","line":3,"column":30,"nodeType":"718","messageId":"719","endLine":3,"endColumn":33},{"ruleId":"716","severity":1,"message":"823","line":3,"column":46,"nodeType":"718","messageId":"719","endLine":3,"endColumn":50},{"ruleId":"716","severity":1,"message":"870","line":3,"column":52,"nodeType":"718","messageId":"719","endLine":3,"endColumn":62},{"ruleId":"756","severity":1,"message":"871","line":30,"column":8,"nodeType":"758","endLine":30,"endColumn":27,"suggestions":"872"},{"ruleId":"736","severity":1,"message":"740","line":49,"column":54,"nodeType":"738","messageId":"739","endLine":49,"endColumn":56},{"ruleId":"716","severity":1,"message":"838","line":3,"column":17,"nodeType":"718","messageId":"719","endLine":3,"endColumn":23},{"ruleId":"716","severity":1,"message":"799","line":12,"column":13,"nodeType":"718","messageId":"719","endLine":12,"endColumn":22},{"ruleId":"716","severity":1,"message":"800","line":12,"column":24,"nodeType":"718","messageId":"719","endLine":12,"endColumn":31},{"ruleId":"716","severity":1,"message":"869","line":12,"column":39,"nodeType":"718","messageId":"719","endLine":12,"endColumn":44},{"ruleId":"716","severity":1,"message":"821","line":1,"column":17,"nodeType":"718","messageId":"719","endLine":1,"endColumn":25},{"ruleId":"716","severity":1,"message":"831","line":2,"column":10,"nodeType":"718","messageId":"719","endLine":2,"endColumn":21},{"ruleId":"716","severity":1,"message":"822","line":3,"column":10,"nodeType":"718","messageId":"719","endLine":3,"endColumn":15},{"ruleId":"716","severity":1,"message":"823","line":3,"column":17,"nodeType":"718","messageId":"719","endLine":3,"endColumn":21},{"ruleId":"716","severity":1,"message":"814","line":3,"column":70,"nodeType":"718","messageId":"719","endLine":3,"endColumn":76},{"ruleId":"716","severity":1,"message":"794","line":3,"column":78,"nodeType":"718","messageId":"719","endLine":3,"endColumn":81},{"ruleId":"716","severity":1,"message":"873","line":3,"column":83,"nodeType":"718","messageId":"719","endLine":3,"endColumn":101},{"ruleId":"716","severity":1,"message":"874","line":7,"column":10,"nodeType":"718","messageId":"719","endLine":7,"endColumn":22},{"ruleId":"875","severity":2,"message":"876","line":25,"column":31,"nodeType":"718","endLine":25,"endColumn":41},{"ruleId":"736","severity":1,"message":"737","line":50,"column":22,"nodeType":"738","messageId":"739","endLine":50,"endColumn":24},{"ruleId":"736","severity":1,"message":"737","line":58,"column":141,"nodeType":"738","messageId":"739","endLine":58,"endColumn":143},{"ruleId":"716","severity":1,"message":"877","line":2,"column":10,"nodeType":"718","messageId":"719","endLine":2,"endColumn":20},{"ruleId":"716","severity":1,"message":"807","line":3,"column":29,"nodeType":"718","messageId":"719","endLine":3,"endColumn":38},{"ruleId":"716","severity":1,"message":"878","line":3,"column":40,"nodeType":"718","messageId":"719","endLine":3,"endColumn":46},{"ruleId":"716","severity":1,"message":"766","line":7,"column":8,"nodeType":"718","messageId":"719","endLine":7,"endColumn":21},{"ruleId":"716","severity":1,"message":"879","line":30,"column":45,"nodeType":"718","messageId":"719","endLine":30,"endColumn":55},{"ruleId":"736","severity":1,"message":"737","line":61,"column":80,"nodeType":"738","messageId":"739","endLine":61,"endColumn":82},{"ruleId":"736","severity":1,"message":"737","line":65,"column":23,"nodeType":"738","messageId":"739","endLine":65,"endColumn":25},{"ruleId":"736","severity":1,"message":"737","line":63,"column":72,"nodeType":"738","messageId":"739","endLine":63,"endColumn":74},{"ruleId":"736","severity":1,"message":"737","line":67,"column":17,"nodeType":"738","messageId":"739","endLine":67,"endColumn":19},{"ruleId":"716","severity":1,"message":"812","line":3,"column":40,"nodeType":"718","messageId":"719","endLine":3,"endColumn":45},{"ruleId":"716","severity":1,"message":"879","line":31,"column":45,"nodeType":"718","messageId":"719","endLine":31,"endColumn":55},{"ruleId":"716","severity":1,"message":"807","line":2,"column":29,"nodeType":"718","messageId":"719","endLine":2,"endColumn":38},{"ruleId":"716","severity":1,"message":"880","line":25,"column":23,"nodeType":"718","messageId":"719","endLine":25,"endColumn":35},{"ruleId":"716","severity":1,"message":"881","line":31,"column":44,"nodeType":"718","messageId":"719","endLine":31,"endColumn":53},{"ruleId":"716","severity":1,"message":"807","line":2,"column":29,"nodeType":"718","messageId":"719","endLine":2,"endColumn":38},{"ruleId":"716","severity":1,"message":"878","line":2,"column":40,"nodeType":"718","messageId":"719","endLine":2,"endColumn":46},{"ruleId":"716","severity":1,"message":"882","line":16,"column":21,"nodeType":"718","messageId":"719","endLine":16,"endColumn":31},{"ruleId":"716","severity":1,"message":"723","line":6,"column":10,"nodeType":"718","messageId":"719","endLine":6,"endColumn":14},{"ruleId":"736","severity":1,"message":"737","line":60,"column":83,"nodeType":"738","messageId":"739","endLine":60,"endColumn":85},{"ruleId":"736","severity":1,"message":"737","line":64,"column":26,"nodeType":"738","messageId":"739","endLine":64,"endColumn":28},{"ruleId":"736","severity":1,"message":"737","line":117,"column":63,"nodeType":"738","messageId":"739","endLine":117,"endColumn":65},{"ruleId":"736","severity":1,"message":"737","line":118,"column":91,"nodeType":"738","messageId":"739","endLine":118,"endColumn":93},{"ruleId":"736","severity":1,"message":"737","line":120,"column":63,"nodeType":"738","messageId":"739","endLine":120,"endColumn":65},{"ruleId":"736","severity":1,"message":"737","line":121,"column":91,"nodeType":"738","messageId":"739","endLine":121,"endColumn":93},{"ruleId":"736","severity":1,"message":"737","line":57,"column":72,"nodeType":"738","messageId":"739","endLine":57,"endColumn":74},{"ruleId":"736","severity":1,"message":"737","line":61,"column":21,"nodeType":"738","messageId":"739","endLine":61,"endColumn":23},"no-native-reassign",["883"],"no-negated-in-lhs",["884"],"no-unused-vars","'PlaceOrderScreen' is defined but never used.","Identifier","unusedVar","'top' is assigned a value but never used.",["883"],["884"],"'Link' is defined but never used.","'Image' is defined but never used.","'ListGroup' is defined but never used.","'Card' is defined but never used.","'ListGroupItem' is defined but never used.","'Breadcrumb' is defined but never used.","'Rating' is defined but never used.","'Meta' is defined but never used.","'createProductReview' is defined but never used.","'getCategoryDetails' is defined but never used.","'PRODUCT_CREATE_REVIEW_RESET' is defined but never used.","'category' is assigned a value but never used.","'userInfo' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","'orderCreateReducer' is defined but never used.","'orderPayReducer' is defined but never used.","'PRODUCT_UPDATE_IMAGES_RESET' is defined but never used.","'PRODUCT_CREATE_REVIEW_REQUEST' is defined but never used.","'PRODUCT_CREATE_REVIEW_SUCCESS' is defined but never used.","'PRODUCT_CREATE_REVIEW_FAIL' is defined but never used.","'addToCart' is defined but never used.","'cartToClover' is defined but never used.","'getClover' is defined but never used.","'CART_LOAD_FROM_DB' is defined but never used.","'qty' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cartId', 'dispatch', and 'history'. Either include them or remove the dependency array.","ArrayExpression",["885"],"'CART_GET_CLOVER' is defined but never used.","'CART_PUSH_CLOVER' is defined but never used.","'CART_SAVE_PAYMENT_METHOD' is defined but never used.","'SHIPPING_INFO_PUSH_CLOVER' is defined but never used.","'CART_LOAD_USER' is defined but never used.","'CLOVER_RESET' is defined but never used.","'FormContainer' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'redirect'. Either include them or remove the dependency array.",["886"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["887"],"'ProtectedRoute' is defined but never used.","'CheckoutSteps' is defined but never used.","'shippingInfoToClover' is defined but never used.","'afterOrderReset' is defined but never used.","'savePaymentMethod' is defined but never used.","'submitClover' is defined but never used.","'Helmet' is defined but never used.","'cartItems' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'cardCvv', 'cardDate', 'cardNumber', and 'cardPostalCode'. Either include them or remove the dependency array.",["888"],"React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.",["889"],"'ORDER_CREATE_REQUEST' is defined but never used.","'ORDER_CREATE_SUCCESS' is defined but never used.","'ORDER_CREATE_FAIL' is defined but never used.","'ORDER_PAY_REQUEST' is defined but never used.","'ORDER_PAY_SUCCESS' is defined but never used.","'ORDER_PAY_FAIL' is defined but never used.","'ORDER_PAY_RESET' is defined but never used.","'ORDER_DELIVER_REQUEST' is defined but never used.","'ORDER_DELIVER_SUCCESS' is defined but never used.","'ORDER_DELIVER_FAIL' is defined but never used.","'PayPalButton' is defined but never used.","'Nav' is defined but never used.","'deliverOrder' is defined but never used.","'ORDER_DELIVER_RESET' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'orderID'. Either include them or remove the dependency array.",["890"],"'isLoading' is assigned a value but never used.","'isError' is assigned a value but never used.","'labelError' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'labelMutation.data', 'orderID', 'refetch', and 'refundMutation.data'. Either include them or remove the dependency array.",["891"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useEffect' is defined but never used.","'listUsers' is defined but never used.","'successDelete' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userInfo'. Either include it or remove the dependency array.",["892"],"'Modal' is defined but never used.","'LinkContainer' is defined but never used.","'Navbar' is defined but never used.","'Container' is defined but never used.","'NavDropdown' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.",["883"],["884"],"'useState' is defined but never used.","'Table' is defined but never used.","'Form' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["893"],"'categoryId' is assigned a value but never used.","'loadingProducts' is assigned a value but never used.","'errorProducts' is assigned a value but never used.","'Loader' is defined but never used.","'loading' is assigned a value but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'ProductSimpleCard' is defined but never used.","'saveShippingInfo' is defined but never used.","'redirect' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'samplePrices'. Either include it or remove the dependency array.",["894"],"'Button' is defined but never used.","'discountName' is assigned a value but never used.","no-redeclare","'totalTax' is already defined.","redeclared","'totalDiscount' is already defined.","'totalTotal' is already defined.","'deleteProduct' is defined but never used.","'createProduct' is defined but never used.","'PRODUCT_CREATE_RESET' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'pageNumber'. Either include them or remove the dependency array.",["895"],"'pageNumber' is assigned a value but never used.","'setStartType' is assigned a value but never used.","'setEndType' is assigned a value but never used.","'loadingAverage' is assigned a value but never used.","'errorAverage' is assigned a value but never used.","'dataAverage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'history', and 'userInfo'. Either include them or remove the dependency array.",["896"],"array-callback-return","Array.prototype.sort() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Message' is defined but never used.","'listProductDetails' is defined but never used.","'updateProduct' is defined but never used.","'PRODUCT_UPDATE_RESET' is defined but never used.","'ExampleDoc' is defined but never used.","'axios' is defined but never used.","'set' is defined but never used.","'error' is assigned a value but never used.","'InputGroup' is defined but never used.","React Hook useEffect has missing dependencies: 'refetch' and 'remove'. Either include them or remove the dependency array.",["897"],"'useAccordionToggle' is defined but never used.","'listMyOrders' is defined but never used.","react-hooks/rules-of-hooks","React Hook \"useReducer\" is called in function \"userContextProvider\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","'modelNames' is defined but never used.","'useRef' is defined but never used.","'queryError' is assigned a value but never used.","'setAvailable' is assigned a value but never used.","'queryData' is assigned a value but never used.","'setBrandID' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"898","fix":"899"},{"desc":"900","fix":"901"},{"desc":"902","fix":"903"},{"desc":"904","fix":"905"},{"desc":"906","fix":"907"},{"desc":"908","fix":"909"},{"desc":"910","fix":"911"},{"desc":"912","fix":"913"},{"desc":"914","fix":"915"},{"desc":"916","fix":"917"},{"desc":"918","fix":"919"},{"desc":"914","fix":"920"},{"desc":"921","fix":"922"},"Update the dependencies array to be: [cartFromDB, cartId, dispatch, history]",{"range":"923","text":"924"},"Update the dependencies array to be: [history, redirect, user]",{"range":"925","text":"926"},"Update the dependencies array to be: [history, user]",{"range":"927","text":"928"},"Update the dependencies array to be: [cardCvv, cardDate, cardNumber, cardPostalCode]",{"range":"929","text":"930"},"Update the dependencies array to be: [dispatch, history, order]",{"range":"931","text":"932"},"Update the dependencies array to be: [dispatch, orderID]",{"range":"933","text":"934"},"Update the dependencies array to be: [dispatch, labelMutation.data, labelMutation.isSuccess, orderID, refetch, refundMutation.data, refundMutation.isSuccess]",{"range":"935","text":"936"},"Update the dependencies array to be: [user, userId, dispatch, successUpdate, history, userInfo]",{"range":"937","text":"938"},"Update the dependencies array to be: [dispatch, history, userInfo]",{"range":"939","text":"940"},"Update the dependencies array to be: [samplePrices, subtotal]",{"range":"941","text":"942"},"Update the dependencies array to be: [dispatch, keyword, pageNumber]",{"range":"943","text":"944"},{"range":"945","text":"940"},"Update the dependencies array to be: [history, refetch, remove, userInfo]",{"range":"946","text":"947"},[1426,1438],"[cartFromDB, cartId, dispatch, history]",[897,903],"[history, redirect, user]",[1102,1108],"[history, user]",[2941,2943],"[cardCvv, cardDate, cardNumber, cardPostalCode]",[3384,3391],"[dispatch, history, order]",[1196,1198],"[dispatch, orderID]",[2278,2329],"[dispatch, labelMutation.data, labelMutation.isSuccess, orderID, refetch, refundMutation.data, refundMutation.isSuccess]",[1835,1883],"[user, userId, dispatch, successUpdate, history, userInfo]",[888,907],"[dispatch, history, userInfo]",[1409,1419],"[samplePrices, subtotal]",[1146,1155],"[dispatch, keyword, pageNumber]",[1484,1486],[899,918],"[history, refetch, remove, userInfo]"]